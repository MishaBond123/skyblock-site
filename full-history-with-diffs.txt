commit 70f0a8563e03defea7b6d0e133da0cc4694e48fb
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 22:03:57 2025 +0100

    aaaaaaaaaaaaaaaaaa

diff --git a/public/auth.html b/public/auth.html
index d230c5e..4d0af7f 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -82,8 +82,8 @@
   <script type="module">
     import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";
   
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co';
-    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
+    const SUPABASE_URL = "https://dhgfmbsyndfbsretlhvm.supabase.co";
+    const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI";
     const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
   
     const loginTab = document.getElementById("loginTab");
@@ -98,6 +98,7 @@
       loginTab.classList.add("active");
       signupTab.classList.remove("active");
       submitBtn.textContent = "Login";
+      errorMsg.textContent = "";
     };
   
     signupTab.onclick = () => {
@@ -105,6 +106,7 @@
       signupTab.classList.add("active");
       loginTab.classList.remove("active");
       submitBtn.textContent = "Sign Up";
+      errorMsg.textContent = "";
     };
   
     submitBtn.onclick = async () => {
@@ -125,11 +127,12 @@
           .maybeSingle();
   
         if (error || !data) {
-          errorMsg.textContent = error ? `Supabase error: ${error.message}` : "No matching user found.";
+          errorMsg.textContent = "Invalid login credentials.";
           return;
         }
   
-        document.cookie = `session_id=${data.id}; path=/`;
+        sessionStorage.setItem("user_id", data.id);
+        sessionStorage.setItem("username", data.username);
         window.location.href = "index.html";
       } else {
         const { data, error } = await supabase
@@ -138,13 +141,13 @@
           .select()
           .maybeSingle();
   
-          if (error || !data) {
-  loginError.textContent = "Invalid login credentials.";
-  return;
-}
-
+        if (error || !data) {
+          errorMsg.textContent = "Username already exists.";
+          return;
+        }
   
-        document.cookie = `session_id=${data.id}; path=/`;
+        sessionStorage.setItem("user_id", data.id);
+        sessionStorage.setItem("username", data.username);
         window.location.href = "index.html";
       }
     };
diff --git a/public/saved-orders.html b/public/saved-orders.html
index 33e348e..1d60555 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -107,28 +107,21 @@
     const content = document.getElementById("content");
     const authStatus = document.getElementById("authStatus");
   
-    const {
-      data: { session },
-      error: sessionError
-    } = await supabase.auth.getSession();
+    const user_id = sessionStorage.getItem("user_id");
+    const username = sessionStorage.getItem("username");
   
-    if (sessionError || !session) {
+    if (!user_id || !username) {
       content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
-      return;
+      authStatus.innerHTML = `<a href="auth.html" id="loginLink" style="color:#00bfff; text-decoration: underline;">Log In / Sign Up</a>`;
+      throw new Error("Not logged in");
     }
   
-    const user = session.user;
-    sessionStorage.setItem("user_id", user.id);
-    sessionStorage.setItem("username", user.user_metadata.username);
+    authStatus.innerHTML = `
+      Logged in as <strong>${username}</strong>
+      <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+    `;
   
-    document.getElementById("authStatus").innerHTML = `
-  Logged in as <strong>${user.user_metadata?.username || user.email || "Unknown"}</strong>
-  <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-`;
-
-  
-    document.getElementById("logoutLink").onclick = async () => {
-      await supabase.auth.signOut();
+    document.getElementById("logoutLink").onclick = () => {
       sessionStorage.clear();
       location.reload();
     };
@@ -136,7 +129,7 @@
     const { data: orders, error } = await supabase
       .from("saved_orders")
       .select("*")
-      .eq("user_id", user.id);
+      .eq("user_id", user_id);
   
     function renderOrders() {
       content.innerHTML = `
@@ -152,24 +145,19 @@
       if (!orders || orders.length === 0) {
         list.innerHTML = '<p class="center">No saved orders yet.</p>';
       } else {
-        list.innerHTML = orders
-          .map(
-            (order, index) => `
+        list.innerHTML = orders.map(order => `
           <div class="order-row">
             <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">
               ${order.item} @ ${parseFloat(order.price).toLocaleString()} coins
             </a>
             <button class="remove-btn" data-id="${order.id}">â€“</button>
           </div>
-        `
-          )
-          .join("");
+        `).join("");
       }
   
       document.querySelectorAll(".remove-btn").forEach(btn => {
         btn.onclick = async () => {
-          const id = btn.dataset.id;
-          await supabase.from("saved_orders").delete().eq("id", id);
+          await supabase.from("saved_orders").delete().eq("id", btn.dataset.id);
           location.reload();
         };
       });
@@ -178,17 +166,13 @@
         const item = document.getElementById("itemInput").value.trim();
         const price = document.getElementById("priceInput").value.trim();
         if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-        const { error } = await supabase.from("saved_orders").insert({
-          user_id: user.id,
-          item,
-          price
-        });
+        const { error } = await supabase.from("saved_orders").insert({ user_id, item, price });
         if (error) alert("Error saving order.");
         else location.reload();
       };
     }
   
     renderOrders();
-  </script>    
+  </script>  
 </body>
 </html>

commit 4c77dd3c755379c958c85cc6da123d8b4041b29c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 22:00:24 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index f8ce569..33e348e 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -121,10 +121,11 @@
     sessionStorage.setItem("user_id", user.id);
     sessionStorage.setItem("username", user.user_metadata.username);
   
-    authStatus.innerHTML = `
-      Logged in as <strong>${user.user_metadata.username}</strong>
-      <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-    `;
+    document.getElementById("authStatus").innerHTML = `
+  Logged in as <strong>${user.user_metadata?.username || user.email || "Unknown"}</strong>
+  <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+`;
+
   
     document.getElementById("logoutLink").onclick = async () => {
       await supabase.auth.signOut();

commit 7bb1acb03f297c38bba05b1c01cf7c3ba2776d4c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 21:58:15 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index 609a672..f8ce569 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -98,45 +98,44 @@
   </div>
 
   <script type="module">
-    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
+    import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";
   
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
-    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
+    const SUPABASE_URL = "https://dhgfmbsyndfbsretlhvm.supabase.co";
+    const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI";
     const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
   
-    const content = document.getElementById('content');
-    const authStatus = document.getElementById('authStatus');
+    const content = document.getElementById("content");
+    const authStatus = document.getElementById("authStatus");
   
-    const userId = sessionStorage.getItem('user_id');
-    const username = sessionStorage.getItem('username');
+    const {
+      data: { session },
+      error: sessionError
+    } = await supabase.auth.getSession();
   
-    // Handle auth status UI
-    if (userId && username) {
-      authStatus.innerHTML = `
-        Logged in as <strong>${username}</strong>
-        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-      `;
-      document.getElementById('logoutLink').onclick = () => {
-        sessionStorage.clear();
-        location.reload();
-      };
-    } else {
+    if (sessionError || !session) {
       content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
       return;
     }
   
-    // Fetch saved orders from Supabase
-    const { data, error } = await supabase
-      .from('saved_orders')
-      .select('*')
-      .eq('user_id', userId);
+    const user = session.user;
+    sessionStorage.setItem("user_id", user.id);
+    sessionStorage.setItem("username", user.user_metadata.username);
   
-    if (error || !data) {
-      content.innerHTML = `<p class="center">Error loading orders. Try <a href="auth.html" style="color:#00bfff;">logging in</a> again.</p>`;
-      return;
-    }
+    authStatus.innerHTML = `
+      Logged in as <strong>${user.user_metadata.username}</strong>
+      <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+    `;
   
-    let orders = data;
+    document.getElementById("logoutLink").onclick = async () => {
+      await supabase.auth.signOut();
+      sessionStorage.clear();
+      location.reload();
+    };
+  
+    const { data: orders, error } = await supabase
+      .from("saved_orders")
+      .select("*")
+      .eq("user_id", user.id);
   
     function renderOrders() {
       content.innerHTML = `
@@ -148,44 +147,47 @@
         <div id="ordersList" style="margin-top: 30px;"></div>
       `;
   
-      const list = document.getElementById('ordersList');
-      if (orders.length === 0) {
+      const list = document.getElementById("ordersList");
+      if (!orders || orders.length === 0) {
         list.innerHTML = '<p class="center">No saved orders yet.</p>';
       } else {
-        list.innerHTML = orders.map((order, index) => `
+        list.innerHTML = orders
+          .map(
+            (order, index) => `
           <div class="order-row">
-            <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+            <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">
+              ${order.item} @ ${parseFloat(order.price).toLocaleString()} coins
+            </a>
             <button class="remove-btn" data-id="${order.id}">â€“</button>
           </div>
-        `).join('');
+        `
+          )
+          .join("");
       }
   
-      document.querySelectorAll('.remove-btn').forEach(btn => {
+      document.querySelectorAll(".remove-btn").forEach(btn => {
         btn.onclick = async () => {
-          const orderId = btn.dataset.id;
-          await supabase.from('saved_orders').delete().eq('id', orderId);
-          orders = orders.filter(o => o.id !== orderId);
-          renderOrders();
+          const id = btn.dataset.id;
+          await supabase.from("saved_orders").delete().eq("id", id);
+          location.reload();
         };
       });
   
-      document.getElementById('addBtn').onclick = async () => {
-        const item = document.getElementById('itemInput').value.trim();
-        const price = document.getElementById('priceInput').value.trim();
+      document.getElementById("addBtn").onclick = async () => {
+        const item = document.getElementById("itemInput").value.trim();
+        const price = document.getElementById("priceInput").value.trim();
         if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-  
-        const { data: newOrder, error: insertError } = await supabase
-          .from('saved_orders')
-          .insert([{ user_id: userId, item, price }])
-          .select();
-  
-        if (insertError) return alert("Failed to add order.");
-        orders.push(newOrder[0]);
-        renderOrders();
+        const { error } = await supabase.from("saved_orders").insert({
+          user_id: user.id,
+          item,
+          price
+        });
+        if (error) alert("Error saving order.");
+        else location.reload();
       };
     }
   
     renderOrders();
-  </script>  
+  </script>    
 </body>
 </html>

commit c20fa8d6a9606d19b35a30120cf00f6192ba8dc1
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 21:54:02 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index 929cfde..609a672 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -97,33 +97,48 @@
     <div id="content"></div>
   </div>
 
-  <script>
+  <script type="module">
+    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
+  
     const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
-    const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
-
-    const username = sessionStorage.getItem("username");
-    const user_id = sessionStorage.getItem("user_id");
-
-    const authStatus = document.getElementById("authStatus");
-    const content = document.getElementById("content");
-
-    if (!username || !user_id) {
-      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
-    } else {
+    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+  
+    const content = document.getElementById('content');
+    const authStatus = document.getElementById('authStatus');
+  
+    const userId = sessionStorage.getItem('user_id');
+    const username = sessionStorage.getItem('username');
+  
+    // Handle auth status UI
+    if (userId && username) {
       authStatus.innerHTML = `
         Logged in as <strong>${username}</strong>
         <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
       `;
-      document.getElementById("logoutLink").onclick = () => {
+      document.getElementById('logoutLink').onclick = () => {
         sessionStorage.clear();
         location.reload();
       };
-
-      renderSavedOrders();
+    } else {
+      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
+      return;
     }
-
-    async function renderSavedOrders() {
+  
+    // Fetch saved orders from Supabase
+    const { data, error } = await supabase
+      .from('saved_orders')
+      .select('*')
+      .eq('user_id', userId);
+  
+    if (error || !data) {
+      content.innerHTML = `<p class="center">Error loading orders. Try <a href="auth.html" style="color:#00bfff;">logging in</a> again.</p>`;
+      return;
+    }
+  
+    let orders = data;
+  
+    function renderOrders() {
       content.innerHTML = `
         <div class="center">
           <input id="itemInput" placeholder="Item Type" />
@@ -132,45 +147,45 @@
         </div>
         <div id="ordersList" style="margin-top: 30px;"></div>
       `;
-
-      const { data: orders, error } = await supabase
-        .from("saved_orders")
-        .select("*")
-        .eq("user_id", user_id);
-
-      const list = document.getElementById("ordersList");
-      if (error || !orders) {
-        list.innerHTML = `<p class="center">Failed to load orders.</p>`;
-        return;
-      }
-
+  
+      const list = document.getElementById('ordersList');
       if (orders.length === 0) {
         list.innerHTML = '<p class="center">No saved orders yet.</p>';
       } else {
-        list.innerHTML = orders.map(order => `
+        list.innerHTML = orders.map((order, index) => `
           <div class="order-row">
             <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
             <button class="remove-btn" data-id="${order.id}">â€“</button>
           </div>
-        `).join("");
+        `).join('');
       }
-
-      document.querySelectorAll(".remove-btn").forEach(btn => {
+  
+      document.querySelectorAll('.remove-btn').forEach(btn => {
         btn.onclick = async () => {
           const orderId = btn.dataset.id;
-          await supabase.from("saved_orders").delete().eq("id", orderId);
-          renderSavedOrders();
+          await supabase.from('saved_orders').delete().eq('id', orderId);
+          orders = orders.filter(o => o.id !== orderId);
+          renderOrders();
         };
       });
-
-      document.getElementById("addBtn").onclick = async () => {
-        const item = document.getElementById("itemInput").value.trim();
-        const price = document.getElementById("priceInput").value.trim();
+  
+      document.getElementById('addBtn').onclick = async () => {
+        const item = document.getElementById('itemInput').value.trim();
+        const price = document.getElementById('priceInput').value.trim();
         if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-        await supabase.from("saved_orders").insert({ user_id, item, price });
-        renderSavedOrders();
+  
+        const { data: newOrder, error: insertError } = await supabase
+          .from('saved_orders')
+          .insert([{ user_id: userId, item, price }])
+          .select();
+  
+        if (insertError) return alert("Failed to add order.");
+        orders.push(newOrder[0]);
+        renderOrders();
       };
     }
-  </script>
+  
+    renderOrders();
+  </script>  
 </body>
 </html>

commit a812caf804e494ad179cb9126de8adafbf299164
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 21:48:11 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index 594d36d..929cfde 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -79,7 +79,6 @@
       margin-top: 30px;
     }
   </style>
-  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js"></script>
 </head>
 <body>
   <div class="container">
@@ -89,9 +88,12 @@
       <a class="tab active-tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
-    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;"></div>
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
+    </div>
 
     <h1>Saved Orders</h1>
+
     <div id="content"></div>
   </div>
 

commit a1d179bf6049cec16f92ee052f3bf43c5680d27d
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 21:45:28 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 85c2663..d230c5e 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -130,7 +130,7 @@
         }
   
         document.cookie = `session_id=${data.id}; path=/`;
-        window.location.href = "saved-orders.html";
+        window.location.href = "index.html";
       } else {
         const { data, error } = await supabase
           .from("users")

commit ac5a99825becde7b95ddff0b15e21c78f5ba0d57
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 21:43:22 2025 +0100

    lalala

diff --git a/public/auth.html b/public/auth.html
index 3be1a3d..85c2663 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -138,13 +138,14 @@
           .select()
           .maybeSingle();
   
-        if (error) {
-          errorMsg.textContent = `Supabase error: ${error.message}`;
-          return;
-        }
+          if (error || !data) {
+  loginError.textContent = "Invalid login credentials.";
+  return;
+}
+
   
         document.cookie = `session_id=${data.id}; path=/`;
-        window.location.href = "saved-orders.html";
+        window.location.href = "index.html";
       }
     };
   </script>  
diff --git a/public/saved-orders.html b/public/saved-orders.html
index 94b32ba..594d36d 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -79,6 +79,7 @@
       margin-top: 30px;
     }
   </style>
+  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js"></script>
 </head>
 <body>
   <div class="container">
@@ -88,98 +89,86 @@
       <a class="tab active-tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
-    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
-      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
-    </div>
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;"></div>
 
     <h1>Saved Orders</h1>
-
     <div id="content"></div>
   </div>
 
-  <script type="module">
-    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
-  
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co';
+  <script>
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
-    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
-  
-    const userId = sessionStorage.getItem("user_id");
-    const content = document.getElementById("content");
+    const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+
+    const username = sessionStorage.getItem("username");
+    const user_id = sessionStorage.getItem("user_id");
+
     const authStatus = document.getElementById("authStatus");
-  
-    if (!userId) {
+    const content = document.getElementById("content");
+
+    if (!username || !user_id) {
       content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
     } else {
       authStatus.innerHTML = `
-        Logged in
+        Logged in as <strong>${username}</strong>
         <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
       `;
       document.getElementById("logoutLink").onclick = () => {
-        sessionStorage.removeItem("user_id");
+        sessionStorage.clear();
         location.reload();
       };
-  
-      async function fetchOrders() {
-        const { data, error } = await supabase
-          .from("saved_orders")
-          .select("*")
-          .eq("user_id", userId);
-  
-        if (error) {
-          content.innerHTML = `<p class="center">Error loading saved orders.</p>`;
-          return;
-        }
-  
-        renderOrders(data);
-      }
-  
-      async function addOrder(item, price) {
-        await supabase.from("saved_orders").insert([{ user_id: userId, item, price }]);
-        fetchOrders();
-      }
-  
-      async function deleteOrder(id) {
-        await supabase.from("saved_orders").delete().eq("id", id);
-        fetchOrders();
+
+      renderSavedOrders();
+    }
+
+    async function renderSavedOrders() {
+      content.innerHTML = `
+        <div class="center">
+          <input id="itemInput" placeholder="Item Type" />
+          <input id="priceInput" placeholder="Order Price" />
+          <button id="addBtn">+ Add Order</button>
+        </div>
+        <div id="ordersList" style="margin-top: 30px;"></div>
+      `;
+
+      const { data: orders, error } = await supabase
+        .from("saved_orders")
+        .select("*")
+        .eq("user_id", user_id);
+
+      const list = document.getElementById("ordersList");
+      if (error || !orders) {
+        list.innerHTML = `<p class="center">Failed to load orders.</p>`;
+        return;
       }
-  
-      function renderOrders(orders) {
-        content.innerHTML = `
-          <div class="center">
-            <input id="itemInput" placeholder="Item Type" />
-            <input id="priceInput" placeholder="Order Price" />
-            <button id="addBtn">+ Add Order</button>
+
+      if (orders.length === 0) {
+        list.innerHTML = '<p class="center">No saved orders yet.</p>';
+      } else {
+        list.innerHTML = orders.map(order => `
+          <div class="order-row">
+            <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+            <button class="remove-btn" data-id="${order.id}">â€“</button>
           </div>
-          <div id="ordersList" style="margin-top: 30px;"></div>
-        `;
-  
-        const list = document.getElementById("ordersList");
-        if (orders.length === 0) {
-          list.innerHTML = '<p class="center">No saved orders yet.</p>';
-        } else {
-          list.innerHTML = orders.map(order => `
-            <div class="order-row">
-              <a href="index.html?item=${order.item}&track=${order.price}">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
-              <button class="remove-btn" data-id="${order.id}">â€“</button>
-            </div>
-          `).join("");
-        }
-  
-        document.querySelectorAll(".remove-btn").forEach(btn => {
-          btn.onclick = () => deleteOrder(btn.dataset.id);
-        });
-  
-        document.getElementById("addBtn").onclick = () => {
-          const item = document.getElementById("itemInput").value.trim();
-          const price = document.getElementById("priceInput").value.trim();
-          if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-          addOrder(item, price);
-        };
+        `).join("");
       }
-  
-      fetchOrders();
+
+      document.querySelectorAll(".remove-btn").forEach(btn => {
+        btn.onclick = async () => {
+          const orderId = btn.dataset.id;
+          await supabase.from("saved_orders").delete().eq("id", orderId);
+          renderSavedOrders();
+        };
+      });
+
+      document.getElementById("addBtn").onclick = async () => {
+        const item = document.getElementById("itemInput").value.trim();
+        const price = document.getElementById("priceInput").value.trim();
+        if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
+        await supabase.from("saved_orders").insert({ user_id, item, price });
+        renderSavedOrders();
+      };
     }
-  </script>    
+  </script>
 </body>
 </html>

commit 0fb1f5c796fd8157839de2f38ced028966af54b6
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 21:33:15 2025 +0100

    aaa

diff --git a/public/auth.html b/public/auth.html
index a1421e9..3be1a3d 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -82,7 +82,7 @@
   <script type="module">
     import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";
   
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
     const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
   
diff --git a/public/saved-orders.html b/public/saved-orders.html
index 47208b9..94b32ba 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -100,7 +100,7 @@
   <script type="module">
     import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
   
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
     const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
   

commit be2f07b324b49a7c4b666c6bcbf81684977e7b0f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 20:36:04 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 868832d..a1421e9 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -80,77 +80,73 @@
   </div>
 
   <script type="module">
-    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
+    import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm";
   
     const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
     const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
-
-  const loginTab = document.getElementById("loginTab");
-  const signupTab = document.getElementById("signupTab");
-  const submitBtn = document.getElementById("submitBtn");
-  const form = document.getElementById("form");
-  const errorMsg = document.getElementById("errorMsg");
-
-  let mode = "login";
-
-  loginTab.onclick = () => {
-    mode = "login";
-    loginTab.classList.add("active");
-    signupTab.classList.remove("active");
-    submitBtn.textContent = "Login";
-    errorMsg.textContent = "";
-  };
-
-  signupTab.onclick = () => {
-    mode = "signup";
-    signupTab.classList.add("active");
-    loginTab.classList.remove("active");
-    submitBtn.textContent = "Sign Up";
-    errorMsg.textContent = "";
-  };
-
-  submitBtn.onclick = async () => {
-    const username = document.getElementById("username").value.trim();
-    const password = document.getElementById("password").value.trim();
-
-    if (!username || !password) {
-      errorMsg.textContent = "Please enter both fields.";
-      return;
-    }
-
-    if (isLogin) {
-      const { data, error } = await supabase
-        .from("users")
-        .select("*")
-        .eq("username", username)
-        .eq("password", password)
-        .maybeSingle();
-
-      if (error || !data) {
-        errorMsg.textContent = error ? `Supabase error: ${error.message}` : "No matching user found.";
+  
+    const loginTab = document.getElementById("loginTab");
+    const signupTab = document.getElementById("signupTab");
+    const submitBtn = document.getElementById("submitBtn");
+    const errorMsg = document.getElementById("errorMsg");
+  
+    let isLogin = true;
+  
+    loginTab.onclick = () => {
+      isLogin = true;
+      loginTab.classList.add("active");
+      signupTab.classList.remove("active");
+      submitBtn.textContent = "Login";
+    };
+  
+    signupTab.onclick = () => {
+      isLogin = false;
+      signupTab.classList.add("active");
+      loginTab.classList.remove("active");
+      submitBtn.textContent = "Sign Up";
+    };
+  
+    submitBtn.onclick = async () => {
+      const username = document.getElementById("username").value.trim();
+      const password = document.getElementById("password").value.trim();
+  
+      if (!username || !password) {
+        errorMsg.textContent = "Please enter both fields.";
         return;
       }
-
-      const session = supabase.auth.setSession({ access_token: "manual", refresh_token: "manual" });
-      document.cookie = `session_id=${data.id}; path=/`;
-      window.location.href = "saved-orders.html";
-    } else {
-      const { data, error } = await supabase
-        .from("users")
-        .insert([{ username, password }])
-        .select()
-        .maybeSingle();
-
-      if (error) {
-        errorMsg.textContent = `Supabase error: ${error.message}`;
-        return;
+  
+      if (isLogin) {
+        const { data, error } = await supabase
+          .from("users")
+          .select("*")
+          .eq("username", username)
+          .eq("password", password)
+          .maybeSingle();
+  
+        if (error || !data) {
+          errorMsg.textContent = error ? `Supabase error: ${error.message}` : "No matching user found.";
+          return;
+        }
+  
+        document.cookie = `session_id=${data.id}; path=/`;
+        window.location.href = "saved-orders.html";
+      } else {
+        const { data, error } = await supabase
+          .from("users")
+          .insert([{ username, password }])
+          .select()
+          .maybeSingle();
+  
+        if (error) {
+          errorMsg.textContent = `Supabase error: ${error.message}`;
+          return;
+        }
+  
+        document.cookie = `session_id=${data.id}; path=/`;
+        window.location.href = "saved-orders.html";
       }
-
-      document.cookie = `session_id=${data.id}; path=/`;
-      window.location.href = "saved-orders.html";
-    }
-  };
-</script> 
+    };
+  </script>  
 </body>
 </html>

commit 52ee8e4a9b2061adedf239c079d16dbc5dc2ba78
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 20:33:18 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 7519651..868832d 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -111,58 +111,46 @@
   };
 
   submitBtn.onclick = async () => {
-  const username = document.getElementById("username").value.trim();
-  const password = document.getElementById("password").value.trim();
-  if (!username || !password) {
-    errorMsg.textContent = "Please enter both username and password.";
-    return;
-  }
+    const username = document.getElementById("username").value.trim();
+    const password = document.getElementById("password").value.trim();
 
-  if (mode === "signup") {
-    const { data: existingUser } = await supabase
-      .from("users")
-      .select("*")
-      .eq("username", username)
-      .single();
-
-    if (existingUser) {
-      errorMsg.textContent = "Username already exists.";
+    if (!username || !password) {
+      errorMsg.textContent = "Please enter both fields.";
       return;
     }
 
-    const { error: insertError } = await supabase
-      .from("users")
-      .insert({ username, password });
-
-    if (insertError) {
-      errorMsg.textContent = "Failed to sign up. Please try again.";
-      return;
-    }
+    if (isLogin) {
+      const { data, error } = await supabase
+        .from("users")
+        .select("*")
+        .eq("username", username)
+        .eq("password", password)
+        .maybeSingle();
 
-    mode = "login";
-    loginTab.classList.add("active");
-    signupTab.classList.remove("active");
-    submitBtn.textContent = "Login";
-    errorMsg.textContent = "Account created! Please log in.";
-  } else {
-    // âœ… LOG IN
-    const { data: user, error } = await supabase
-      .from("users")
-      .select("*")
-      .eq("username", username)
-      .eq("password", password)
-      .maybeSingle();
+      if (error || !data) {
+        errorMsg.textContent = error ? `Supabase error: ${error.message}` : "No matching user found.";
+        return;
+      }
 
-    if (error || !user) {
-      errorMsg.textContent = "Invalid login credentials.";
-      return;
-    }
+      const session = supabase.auth.setSession({ access_token: "manual", refresh_token: "manual" });
+      document.cookie = `session_id=${data.id}; path=/`;
+      window.location.href = "saved-orders.html";
+    } else {
+      const { data, error } = await supabase
+        .from("users")
+        .insert([{ username, password }])
+        .select()
+        .maybeSingle();
 
-    // Redirect with username
-    window.location.href = `saved-orders.html?user=${encodeURIComponent(user.username)}`;
-  }
-};
+      if (error) {
+        errorMsg.textContent = `Supabase error: ${error.message}`;
+        return;
+      }
 
-  </script> 
+      document.cookie = `session_id=${data.id}; path=/`;
+      window.location.href = "saved-orders.html";
+    }
+  };
+</script> 
 </body>
 </html>

commit a41410f85fa12e791d98b63b0d8093bf84334232
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 20:20:27 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index b7a4aba..7519651 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -111,61 +111,58 @@
   };
 
   submitBtn.onclick = async () => {
-    const username = document.getElementById("username").value.trim();
-    const password = document.getElementById("password").value.trim();
-    if (!username || !password) {
-      errorMsg.textContent = "Please enter both username and password.";
+  const username = document.getElementById("username").value.trim();
+  const password = document.getElementById("password").value.trim();
+  if (!username || !password) {
+    errorMsg.textContent = "Please enter both username and password.";
+    return;
+  }
+
+  if (mode === "signup") {
+    const { data: existingUser } = await supabase
+      .from("users")
+      .select("*")
+      .eq("username", username)
+      .single();
+
+    if (existingUser) {
+      errorMsg.textContent = "Username already exists.";
       return;
     }
 
-    if (mode === "signup") {
-      // Check if username already exists
-      const { data: existingUser } = await supabase
-        .from("users")
-        .select("*")
-        .eq("username", username)
-        .single();
+    const { error: insertError } = await supabase
+      .from("users")
+      .insert({ username, password });
 
-      if (existingUser) {
-        errorMsg.textContent = "Username already exists.";
-        return;
-      }
-
-      // Add new user
-      const { error: insertError } = await supabase
-        .from("users")
-        .insert({ username, password });
+    if (insertError) {
+      errorMsg.textContent = "Failed to sign up. Please try again.";
+      return;
+    }
 
-      if (insertError) {
-        errorMsg.textContent = "Failed to sign up. Please try again.";
-        console.error(insertError);
-        return;
-      }
+    mode = "login";
+    loginTab.classList.add("active");
+    signupTab.classList.remove("active");
+    submitBtn.textContent = "Login";
+    errorMsg.textContent = "Account created! Please log in.";
+  } else {
+    // âœ… LOG IN
+    const { data: user, error } = await supabase
+      .from("users")
+      .select("*")
+      .eq("username", username)
+      .eq("password", password)
+      .maybeSingle();
 
-      // Success, switch to login
-      mode = "login";
-      loginTab.classList.add("active");
-      signupTab.classList.remove("active");
-      submitBtn.textContent = "Login";
-      errorMsg.textContent = "Account created! Please log in.";
-    } else {
-      // Login
-      const { data: user, error } = await supabase
-        .from("users")
-        .select("*")
-        .eq("username", username)
-        .eq("password", password)
-        .single();
+    if (error || !user) {
+      errorMsg.textContent = "Invalid login credentials.";
+      return;
+    }
 
-      if (error || !user) {
-        errorMsg.textContent = "Invalid login credentials.";
-        return;
-      }
+    // Redirect with username
+    window.location.href = `saved-orders.html?user=${encodeURIComponent(user.username)}`;
+  }
+};
 
-      // Redirect and pass username in query param or use Supabase session if needed
-      window.location.href = `saved-orders.html?user=${encodeURIComponent(username)}`;
-    }
-  };
-</script> 
+  </script> 
 </body>
 </html>

commit ce976d0db43b4e437bfed57c8b2de272979d9e5c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 20:17:22 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 96c0798..b7a4aba 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -85,80 +85,87 @@
     const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
     const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
-  
-    const usernameInput = document.getElementById("username");
-    const passwordInput = document.getElementById("password");
-    const submitBtn = document.getElementById("submitBtn");
-    const errorMsg = document.getElementById("errorMsg");
-  
-    const loginTab = document.getElementById("loginTab");
-    const signupTab = document.getElementById("signupTab");
-    let isLogin = true;
-  
-    loginTab.onclick = () => {
-      isLogin = true;
+
+  const loginTab = document.getElementById("loginTab");
+  const signupTab = document.getElementById("signupTab");
+  const submitBtn = document.getElementById("submitBtn");
+  const form = document.getElementById("form");
+  const errorMsg = document.getElementById("errorMsg");
+
+  let mode = "login";
+
+  loginTab.onclick = () => {
+    mode = "login";
+    loginTab.classList.add("active");
+    signupTab.classList.remove("active");
+    submitBtn.textContent = "Login";
+    errorMsg.textContent = "";
+  };
+
+  signupTab.onclick = () => {
+    mode = "signup";
+    signupTab.classList.add("active");
+    loginTab.classList.remove("active");
+    submitBtn.textContent = "Sign Up";
+    errorMsg.textContent = "";
+  };
+
+  submitBtn.onclick = async () => {
+    const username = document.getElementById("username").value.trim();
+    const password = document.getElementById("password").value.trim();
+    if (!username || !password) {
+      errorMsg.textContent = "Please enter both username and password.";
+      return;
+    }
+
+    if (mode === "signup") {
+      // Check if username already exists
+      const { data: existingUser } = await supabase
+        .from("users")
+        .select("*")
+        .eq("username", username)
+        .single();
+
+      if (existingUser) {
+        errorMsg.textContent = "Username already exists.";
+        return;
+      }
+
+      // Add new user
+      const { error: insertError } = await supabase
+        .from("users")
+        .insert({ username, password });
+
+      if (insertError) {
+        errorMsg.textContent = "Failed to sign up. Please try again.";
+        console.error(insertError);
+        return;
+      }
+
+      // Success, switch to login
+      mode = "login";
       loginTab.classList.add("active");
       signupTab.classList.remove("active");
       submitBtn.textContent = "Login";
-      errorMsg.textContent = "";
-    };
-  
-    signupTab.onclick = () => {
-      isLogin = false;
-      signupTab.classList.add("active");
-      loginTab.classList.remove("active");
-      submitBtn.textContent = "Sign Up";
-      errorMsg.textContent = "";
-    };
-  
-    submitBtn.onclick = async () => {
-      const username = usernameInput.value.trim();
-      const password = passwordInput.value;
-  
-      if (!username || !password) {
-        errorMsg.textContent = "Please fill in all fields.";
+      errorMsg.textContent = "Account created! Please log in.";
+    } else {
+      // Login
+      const { data: user, error } = await supabase
+        .from("users")
+        .select("*")
+        .eq("username", username)
+        .eq("password", password)
+        .single();
+
+      if (error || !user) {
+        errorMsg.textContent = "Invalid login credentials.";
         return;
       }
-  
-      if (isLogin) {
-        const { data, error } = await supabase
-          .from("users")
-          .select("*")
-          .eq("username", username)
-          .eq("password", password)
-          .single();
-  
-        if (error || !data) {
-          errorMsg.textContent = "Invalid login credentials.";
-        } else {
-          sessionStorage.setItem("user_id", data.id);
-          window.location.href = "saved-orders.html";
-        }
-      } else {
-        const { data: existing } = await supabase
-          .from("users")
-          .select("id")
-          .eq("username", username);
-  
-        if (existing.length > 0) {
-          errorMsg.textContent = "Username already taken.";
-          return;
-        }
-  
-        const { data, error } = await supabase
-          .from("users")
-          .insert([{ username, password }])
-          .select()
-          .single();
-  
-        if (error || !data) {
-          errorMsg.textContent = "Signup failed.";
-        } else {
-          sessionStorage.setItem("user_id", data.id);
-          window.location.href = "saved-orders.html";
-        }
-      }
-    };
-  </script>  
+
+      // Redirect and pass username in query param or use Supabase session if needed
+      window.location.href = `saved-orders.html?user=${encodeURIComponent(username)}`;
+    }
+  };
+</script> 
 </body>
 </html>

commit d406e7be5ab8edeccbd36d1bc230537447821fea
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 20:12:18 2025 +0100

    ...

diff --git a/public/auth.html b/public/auth.html
index 670fc32..96c0798 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -79,81 +79,83 @@
     </div>
   </div>
 
-  <script>
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co'; // your project URL
+  <script type="module">
+    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
+  
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
+    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+  
+    const usernameInput = document.getElementById("username");
+    const passwordInput = document.getElementById("password");
+    const submitBtn = document.getElementById("submitBtn");
+    const errorMsg = document.getElementById("errorMsg");
   
-    let isSignup = false;
+    const loginTab = document.getElementById("loginTab");
+    const signupTab = document.getElementById("signupTab");
+    let isLogin = true;
   
-    document.getElementById("loginTab").onclick = () => {
-      isSignup = false;
-      document.getElementById("loginTab").classList.add("active");
-      document.getElementById("signupTab").classList.remove("active");
-      document.getElementById("submitBtn").innerText = "Login";
-      document.getElementById("errorMsg").innerText = "";
+    loginTab.onclick = () => {
+      isLogin = true;
+      loginTab.classList.add("active");
+      signupTab.classList.remove("active");
+      submitBtn.textContent = "Login";
+      errorMsg.textContent = "";
     };
   
-    document.getElementById("signupTab").onclick = () => {
-      isSignup = true;
-      document.getElementById("signupTab").classList.add("active");
-      document.getElementById("loginTab").classList.remove("active");
-      document.getElementById("submitBtn").innerText = "Sign Up";
-      document.getElementById("errorMsg").innerText = "";
+    signupTab.onclick = () => {
+      isLogin = false;
+      signupTab.classList.add("active");
+      loginTab.classList.remove("active");
+      submitBtn.textContent = "Sign Up";
+      errorMsg.textContent = "";
     };
   
-    document.getElementById("submitBtn").onclick = async () => {
-      const username = document.getElementById("username").value.trim();
-      const password = document.getElementById("password").value.trim();
-      const errorMsg = document.getElementById("errorMsg");
-      errorMsg.innerText = "";
+    submitBtn.onclick = async () => {
+      const username = usernameInput.value.trim();
+      const password = passwordInput.value;
   
       if (!username || !password) {
-        errorMsg.innerText = "Please enter both fields.";
+        errorMsg.textContent = "Please fill in all fields.";
         return;
       }
   
-      if (isSignup) {
-        try {
-          const res = await fetch(`${SUPABASE_URL}/rest/v1/users`, {
-            method: "POST",
-            headers: {
-              apikey: SUPABASE_ANON_KEY,
-              Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
-              "Content-Type": "application/json",
-              Prefer: "return=representation"
-            },
-            body: JSON.stringify({ username, password })
-          });
+      if (isLogin) {
+        const { data, error } = await supabase
+          .from("users")
+          .select("*")
+          .eq("username", username)
+          .eq("password", password)
+          .single();
   
-          if (!res.ok) {
-            const json = await res.json();
-            errorMsg.innerText = json.message || "Sign up failed.";
-          } else {
-            localStorage.setItem("currentUser", username);
-            window.location.href = "index.html";
-          }
-        } catch (e) {
-          errorMsg.innerText = "Request failed.";
+        if (error || !data) {
+          errorMsg.textContent = "Invalid login credentials.";
+        } else {
+          sessionStorage.setItem("user_id", data.id);
+          window.location.href = "saved-orders.html";
         }
-  
       } else {
-        try {
-          const res = await fetch(`${SUPABASE_URL}/rest/v1/users?select=*&&username=eq.${username}`, {
-            headers: {
-              apikey: SUPABASE_ANON_KEY,
-              Authorization: `Bearer ${SUPABASE_ANON_KEY}`
-            }
-          });
+        const { data: existing } = await supabase
+          .from("users")
+          .select("id")
+          .eq("username", username);
+  
+        if (existing.length > 0) {
+          errorMsg.textContent = "Username already taken.";
+          return;
+        }
+  
+        const { data, error } = await supabase
+          .from("users")
+          .insert([{ username, password }])
+          .select()
+          .single();
   
-          const data = await res.json();
-          if (data.length && data[0].password === password) {
-            localStorage.setItem("currentUser", username);
-            window.location.href = "index.html";
-          } else {
-            errorMsg.innerText = "Incorrect login.";
-          }
-        } catch (e) {
-          errorMsg.innerText = "Login failed.";
+        if (error || !data) {
+          errorMsg.textContent = "Signup failed.";
+        } else {
+          sessionStorage.setItem("user_id", data.id);
+          window.location.href = "saved-orders.html";
         }
       }
     };
diff --git a/public/saved-orders.html b/public/saved-orders.html
index ac2b438..47208b9 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -99,109 +99,87 @@
 
   <script type="module">
     import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
-
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co'; // your project URL
+  
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
-const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
-
-const currentUser = localStorage.getItem("currentUser");
-const content = document.getElementById("content");
-const authStatus = document.getElementById("authStatus");
-
-let userId = null;
-let orders = [];
-
-if (currentUser) {
-  authStatus.innerHTML = `
-    Logged in as <strong>${currentUser}</strong>
-    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-  `;
-  document.getElementById("logoutLink").onclick = () => {
-    localStorage.removeItem("currentUser");
-    location.reload();
-  };
-  loadUser();
-} else {
-  content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
-}
-
-async function loadUser() {
-  const password = localStorage.getItem("password");
-  const { data, error } = await supabase
-    .from("users")
-    .select("id")
-    .eq("username", currentUser)
-    .eq("password", password)
-    .single();
-
-  if (error || !data) {
-    content.innerHTML = `<p class="center">Session expired. <a href="auth.html" style="color:#00bfff;">Log in</a> again.</p>`;
-    return;
-  }
-
-  userId = data.id;
-  loadOrders();
-}
-
-async function loadOrders() {
-  const { data, error } = await supabase
-    .from("saved_orders")
-    .select("*")
-    .eq("user_id", userId);
-
-  if (error) {
-    content.innerHTML = `<p class="center">Failed to load orders.</p>`;
-    return;
-  }
-
-  orders = data;
-  renderOrders();
-}
-
-async function addOrder(item, price) {
-  const { error } = await supabase.from("saved_orders").insert([
-    { user_id: userId, item, price }
-  ]);
-  if (error) return alert("Failed to add order.");
-  loadOrders();
-}
-
-async function deleteOrder(id) {
-  await supabase.from("saved_orders").delete().eq("id", id);
-  loadOrders();
-}
-
-function renderOrders() {
-  content.innerHTML = `
-    <div class="center">
-      <input id="itemInput" placeholder="Item Type" />
-      <input id="priceInput" placeholder="Order Price" />
-      <button id="addBtn">+ Add Order</button>
-    </div>
-    <div id="ordersList" style="margin-top: 30px;"></div>
-  `;
-
-  const list = document.getElementById("ordersList");
-  if (orders.length === 0) {
-    list.innerHTML = '<p class="center">No saved orders yet.</p>';
-  } else {
-    list.innerHTML = orders.map(order => `
-      <div class="order-row">
-        <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
-        <button class="remove-btn" onclick="deleteOrder('${order.id}')">â€“</button>
-      </div>
-    `).join("");
-  }
-
-  document.getElementById("addBtn").onclick = () => {
-    const item = document.getElementById("itemInput").value.trim();
-    const price = document.getElementById("priceInput").value.trim();
-    if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-    addOrder(item, price);
-  };
-}
-
-window.deleteOrder = deleteOrder;
-  </script>
+    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+  
+    const userId = sessionStorage.getItem("user_id");
+    const content = document.getElementById("content");
+    const authStatus = document.getElementById("authStatus");
+  
+    if (!userId) {
+      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
+    } else {
+      authStatus.innerHTML = `
+        Logged in
+        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+      `;
+      document.getElementById("logoutLink").onclick = () => {
+        sessionStorage.removeItem("user_id");
+        location.reload();
+      };
+  
+      async function fetchOrders() {
+        const { data, error } = await supabase
+          .from("saved_orders")
+          .select("*")
+          .eq("user_id", userId);
+  
+        if (error) {
+          content.innerHTML = `<p class="center">Error loading saved orders.</p>`;
+          return;
+        }
+  
+        renderOrders(data);
+      }
+  
+      async function addOrder(item, price) {
+        await supabase.from("saved_orders").insert([{ user_id: userId, item, price }]);
+        fetchOrders();
+      }
+  
+      async function deleteOrder(id) {
+        await supabase.from("saved_orders").delete().eq("id", id);
+        fetchOrders();
+      }
+  
+      function renderOrders(orders) {
+        content.innerHTML = `
+          <div class="center">
+            <input id="itemInput" placeholder="Item Type" />
+            <input id="priceInput" placeholder="Order Price" />
+            <button id="addBtn">+ Add Order</button>
+          </div>
+          <div id="ordersList" style="margin-top: 30px;"></div>
+        `;
+  
+        const list = document.getElementById("ordersList");
+        if (orders.length === 0) {
+          list.innerHTML = '<p class="center">No saved orders yet.</p>';
+        } else {
+          list.innerHTML = orders.map(order => `
+            <div class="order-row">
+              <a href="index.html?item=${order.item}&track=${order.price}">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+              <button class="remove-btn" data-id="${order.id}">â€“</button>
+            </div>
+          `).join("");
+        }
+  
+        document.querySelectorAll(".remove-btn").forEach(btn => {
+          btn.onclick = () => deleteOrder(btn.dataset.id);
+        });
+  
+        document.getElementById("addBtn").onclick = () => {
+          const item = document.getElementById("itemInput").value.trim();
+          const price = document.getElementById("priceInput").value.trim();
+          if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
+          addOrder(item, price);
+        };
+      }
+  
+      fetchOrders();
+    }
+  </script>    
 </body>
 </html>

commit c6e7aecfd77e8d5a79d9a26227eee5d0e8df248a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 20:00:48 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index f047cca..ac2b438 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -97,7 +97,7 @@
     <div id="content"></div>
   </div>
 
-  <script>
+  <script type="module">
     import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
 
     const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co'; // your project URL

commit 50c2428f2a53ac8264e6c70de006411b7d7413cf
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 19:58:36 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index 26acd44..f047cca 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -98,72 +98,110 @@
   </div>
 
   <script>
-    const currentUser = localStorage.getItem("currentUser");
-    const content = document.getElementById("content");
-    const authStatus = document.getElementById("authStatus");
-
-    // Auth status UI
-    if (currentUser) {
-      authStatus.innerHTML = `
-        Logged in as <strong>${currentUser}</strong>
-        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-      `;
-      document.getElementById("logoutLink").onclick = () => {
-        localStorage.removeItem("currentUser");
-        location.reload();
-      };
-    }
+    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
 
-    // Require login
-    if (!currentUser) {
-      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
-    } else {
-      const savedKey = `savedOrders_${currentUser}`;
-      let orders = JSON.parse(localStorage.getItem(savedKey) || "[]");
-
-      function renderOrders() {
-        content.innerHTML = `
-          <div class="center">
-            <input id="itemInput" placeholder="Item Type (e.g. HOT_STUFF)" />
-            <input id="priceInput" placeholder="Order Price (e.g. 5000000)" />
-            <button id="addBtn">+ Add Order</button>
-          </div>
-          <div id="ordersList" style="margin-top: 30px;"></div>
-        `;
-
-        const list = document.getElementById("ordersList");
-        if (orders.length === 0) {
-          list.innerHTML = '<p class="center">No saved orders yet.</p>';
-        } else {
-          list.innerHTML = orders.map((order, index) => `
-            <div class="order-row">
-              <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
-              <button class="remove-btn" data-index="${index}">â€“</button>
-            </div>
-          `).join("");
-        }
-
-        document.querySelectorAll(".remove-btn").forEach(btn => {
-          btn.onclick = () => {
-            const i = parseInt(btn.dataset.index);
-            orders.splice(i, 1);
-            localStorage.setItem(savedKey, JSON.stringify(orders));
-            renderOrders();
-          };
-        });
-
-        document.getElementById("addBtn").onclick = () => {
-          const item = document.getElementById("itemInput").value.trim();
-          const price = document.getElementById("priceInput").value.trim();
-          if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-          orders.push({ item, price });
-          localStorage.setItem(savedKey, JSON.stringify(orders));
-          renderOrders();
-        };
-      }
-
-      renderOrders();
-    }
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co'; // your project URL
+    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
+const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+
+const currentUser = localStorage.getItem("currentUser");
+const content = document.getElementById("content");
+const authStatus = document.getElementById("authStatus");
+
+let userId = null;
+let orders = [];
+
+if (currentUser) {
+  authStatus.innerHTML = `
+    Logged in as <strong>${currentUser}</strong>
+    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+  `;
+  document.getElementById("logoutLink").onclick = () => {
+    localStorage.removeItem("currentUser");
+    location.reload();
+  };
+  loadUser();
+} else {
+  content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
+}
+
+async function loadUser() {
+  const password = localStorage.getItem("password");
+  const { data, error } = await supabase
+    .from("users")
+    .select("id")
+    .eq("username", currentUser)
+    .eq("password", password)
+    .single();
+
+  if (error || !data) {
+    content.innerHTML = `<p class="center">Session expired. <a href="auth.html" style="color:#00bfff;">Log in</a> again.</p>`;
+    return;
+  }
+
+  userId = data.id;
+  loadOrders();
+}
+
+async function loadOrders() {
+  const { data, error } = await supabase
+    .from("saved_orders")
+    .select("*")
+    .eq("user_id", userId);
+
+  if (error) {
+    content.innerHTML = `<p class="center">Failed to load orders.</p>`;
+    return;
+  }
+
+  orders = data;
+  renderOrders();
+}
+
+async function addOrder(item, price) {
+  const { error } = await supabase.from("saved_orders").insert([
+    { user_id: userId, item, price }
+  ]);
+  if (error) return alert("Failed to add order.");
+  loadOrders();
+}
+
+async function deleteOrder(id) {
+  await supabase.from("saved_orders").delete().eq("id", id);
+  loadOrders();
+}
+
+function renderOrders() {
+  content.innerHTML = `
+    <div class="center">
+      <input id="itemInput" placeholder="Item Type" />
+      <input id="priceInput" placeholder="Order Price" />
+      <button id="addBtn">+ Add Order</button>
+    </div>
+    <div id="ordersList" style="margin-top: 30px;"></div>
+  `;
+
+  const list = document.getElementById("ordersList");
+  if (orders.length === 0) {
+    list.innerHTML = '<p class="center">No saved orders yet.</p>';
+  } else {
+    list.innerHTML = orders.map(order => `
+      <div class="order-row">
+        <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+        <button class="remove-btn" onclick="deleteOrder('${order.id}')">â€“</button>
+      </div>
+    `).join("");
+  }
+
+  document.getElementById("addBtn").onclick = () => {
+    const item = document.getElementById("itemInput").value.trim();
+    const price = document.getElementById("priceInput").value.trim();
+    if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
+    addOrder(item, price);
+  };
+}
+
+window.deleteOrder = deleteOrder;
   </script>
 </body>
 </html>

commit d5982f2475e69f569a4bc5020fb4adcc24f35593
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 18:25:06 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 473b8d2..670fc32 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -80,81 +80,83 @@
   </div>
 
   <script>
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co';
-    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsImlhdCI6MTY5NzYwNzYwMCwiZXhwIjoyMDEyMTg0MDAwLCJzdWIiOiJwdWJsaWMifQ.klUlFh2eMc1x9CRkbQoz0ZzFVmoyAx-gnlV4XehK-K8';
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co'; // your project URL
+    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
   
-    const usernameInput = document.getElementById("username");
-    const passwordInput = document.getElementById("password");
-    const submitBtn = document.getElementById("submitBtn");
-    const errorMsg = document.getElementById("errorMsg");
+    let isSignup = false;
   
-    let mode = "login";
     document.getElementById("loginTab").onclick = () => {
-      mode = "login";
-      submitBtn.innerText = "Login";
+      isSignup = false;
       document.getElementById("loginTab").classList.add("active");
       document.getElementById("signupTab").classList.remove("active");
+      document.getElementById("submitBtn").innerText = "Login";
+      document.getElementById("errorMsg").innerText = "";
     };
   
     document.getElementById("signupTab").onclick = () => {
-      mode = "signup";
-      submitBtn.innerText = "Sign Up";
+      isSignup = true;
       document.getElementById("signupTab").classList.add("active");
       document.getElementById("loginTab").classList.remove("active");
+      document.getElementById("submitBtn").innerText = "Sign Up";
+      document.getElementById("errorMsg").innerText = "";
     };
   
-    submitBtn.onclick = async () => {
-      const username = usernameInput.value.trim();
-      const password = passwordInput.value.trim();
+    document.getElementById("submitBtn").onclick = async () => {
+      const username = document.getElementById("username").value.trim();
+      const password = document.getElementById("password").value.trim();
+      const errorMsg = document.getElementById("errorMsg");
       errorMsg.innerText = "";
   
       if (!username || !password) {
-        errorMsg.innerText = "Please enter username and password.";
+        errorMsg.innerText = "Please enter both fields.";
         return;
       }
   
-      if (mode === "signup") {
-        // SIGN UP: Insert new user
-        const res = await fetch(`${SUPABASE_URL}/rest/v1/users`, {
-          method: "POST",
-          headers: {
-            apikey: SUPABASE_ANON_KEY,
-            Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
-            "Content-Type": "application/json",
-            Prefer: "return=representation"
-          },
-          body: JSON.stringify({ username, password })
-        });
+      if (isSignup) {
+        try {
+          const res = await fetch(`${SUPABASE_URL}/rest/v1/users`, {
+            method: "POST",
+            headers: {
+              apikey: SUPABASE_ANON_KEY,
+              Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
+              "Content-Type": "application/json",
+              Prefer: "return=representation"
+            },
+            body: JSON.stringify({ username, password })
+          });
   
-        if (res.ok) {
-          localStorage.setItem("currentUser", username);
-          window.location.href = "saved-orders.html";
-        } else {
-          errorMsg.innerText = "Sign up failed.";
+          if (!res.ok) {
+            const json = await res.json();
+            errorMsg.innerText = json.message || "Sign up failed.";
+          } else {
+            localStorage.setItem("currentUser", username);
+            window.location.href = "index.html";
+          }
+        } catch (e) {
+          errorMsg.innerText = "Request failed.";
         }
   
       } else {
-        // LOGIN: Fetch user with matching credentials
-        const res = await fetch(
-          `${SUPABASE_URL}/rest/v1/users?select=*&username=eq.${username}&password=eq.${password}`,
-          {
+        try {
+          const res = await fetch(`${SUPABASE_URL}/rest/v1/users?select=*&&username=eq.${username}`, {
             headers: {
               apikey: SUPABASE_ANON_KEY,
               Authorization: `Bearer ${SUPABASE_ANON_KEY}`
             }
-          }
-        );
+          });
   
-        const data = await res.json();
-        if (data.length > 0) {
-          localStorage.setItem("currentUser", username);
-          window.location.href = "saved-orders.html";
-        } else {
+          const data = await res.json();
+          if (data.length && data[0].password === password) {
+            localStorage.setItem("currentUser", username);
+            window.location.href = "index.html";
+          } else {
+            errorMsg.innerText = "Incorrect login.";
+          }
+        } catch (e) {
           errorMsg.innerText = "Login failed.";
         }
       }
     };
-  </script>
-  
+  </script>  
 </body>
 </html>

commit 304d178f7d5db407366358ff9d47f541479a1bb5
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 18:22:07 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 85dbb09..473b8d2 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -79,82 +79,82 @@
     </div>
   </div>
 
-  <script type="module">
-    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
-
-    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
-    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
-    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
-
-    const loginTab = document.getElementById('loginTab');
-    const signupTab = document.getElementById('signupTab');
-    const submitBtn = document.getElementById('submitBtn');
-    const errorMsg = document.getElementById('errorMsg');
-
-    let isLogin = true;
-
-    loginTab.onclick = () => {
-      isLogin = true;
-      loginTab.classList.add('active');
-      signupTab.classList.remove('active');
-      submitBtn.textContent = 'Login';
-      errorMsg.textContent = '';
+  <script>
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsretlhvm.supabase.co';
+    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsImlhdCI6MTY5NzYwNzYwMCwiZXhwIjoyMDEyMTg0MDAwLCJzdWIiOiJwdWJsaWMifQ.klUlFh2eMc1x9CRkbQoz0ZzFVmoyAx-gnlV4XehK-K8';
+  
+    const usernameInput = document.getElementById("username");
+    const passwordInput = document.getElementById("password");
+    const submitBtn = document.getElementById("submitBtn");
+    const errorMsg = document.getElementById("errorMsg");
+  
+    let mode = "login";
+    document.getElementById("loginTab").onclick = () => {
+      mode = "login";
+      submitBtn.innerText = "Login";
+      document.getElementById("loginTab").classList.add("active");
+      document.getElementById("signupTab").classList.remove("active");
     };
-
-    signupTab.onclick = () => {
-      isLogin = false;
-      signupTab.classList.add('active');
-      loginTab.classList.remove('active');
-      submitBtn.textContent = 'Sign Up';
-      errorMsg.textContent = '';
+  
+    document.getElementById("signupTab").onclick = () => {
+      mode = "signup";
+      submitBtn.innerText = "Sign Up";
+      document.getElementById("signupTab").classList.add("active");
+      document.getElementById("loginTab").classList.remove("active");
     };
-
+  
     submitBtn.onclick = async () => {
-      const username = document.getElementById('username').value.trim();
-      const password = document.getElementById('password').value.trim();
+      const username = usernameInput.value.trim();
+      const password = passwordInput.value.trim();
+      errorMsg.innerText = "";
+  
       if (!username || !password) {
-        errorMsg.textContent = "Please enter both username and password.";
+        errorMsg.innerText = "Please enter username and password.";
         return;
       }
-
-      if (isLogin) {
-        const { data, error } = await supabase
-          .from('users')
-          .select()
-          .eq('username', username)
-          .eq('password', password)
-          .single();
-
-        if (error || !data) {
-          errorMsg.textContent = "Invalid login credentials.";
-        } else {
+  
+      if (mode === "signup") {
+        // SIGN UP: Insert new user
+        const res = await fetch(`${SUPABASE_URL}/rest/v1/users`, {
+          method: "POST",
+          headers: {
+            apikey: SUPABASE_ANON_KEY,
+            Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
+            "Content-Type": "application/json",
+            Prefer: "return=representation"
+          },
+          body: JSON.stringify({ username, password })
+        });
+  
+        if (res.ok) {
           localStorage.setItem("currentUser", username);
-          window.location.href = "index.html";
+          window.location.href = "saved-orders.html";
+        } else {
+          errorMsg.innerText = "Sign up failed.";
         }
+  
       } else {
-        const { data: existing } = await supabase
-          .from('users')
-          .select()
-          .eq('username', username)
-          .maybeSingle();
-
-        if (existing) {
-          errorMsg.textContent = "Username already exists.";
-          return;
-        }
-
-        const { error: insertError } = await supabase
-          .from('users')
-          .insert([{ username, password }]);
-
-        if (insertError) {
-          errorMsg.textContent = "Sign up failed.";
-        } else {
+        // LOGIN: Fetch user with matching credentials
+        const res = await fetch(
+          `${SUPABASE_URL}/rest/v1/users?select=*&username=eq.${username}&password=eq.${password}`,
+          {
+            headers: {
+              apikey: SUPABASE_ANON_KEY,
+              Authorization: `Bearer ${SUPABASE_ANON_KEY}`
+            }
+          }
+        );
+  
+        const data = await res.json();
+        if (data.length > 0) {
           localStorage.setItem("currentUser", username);
-          window.location.href = "index.html";
+          window.location.href = "saved-orders.html";
+        } else {
+          errorMsg.innerText = "Login failed.";
         }
       }
     };
   </script>
+  
 </body>
 </html>

commit e0d83b2c4185a5fc8cc0e5e5c7fbf5759d4cdc40
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 17:28:34 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 477d813..85dbb09 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -79,50 +79,82 @@
     </div>
   </div>
 
-  <script>
+  <script type="module">
+    import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
+
     const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
     const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
-    
-    const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
+
+    const loginTab = document.getElementById('loginTab');
+    const signupTab = document.getElementById('signupTab');
+    const submitBtn = document.getElementById('submitBtn');
+    const errorMsg = document.getElementById('errorMsg');
+
+    let isLogin = true;
 
-    document.getElementById('authForm').addEventListener('submit', async (e) => {
-      e.preventDefault();
+    loginTab.onclick = () => {
+      isLogin = true;
+      loginTab.classList.add('active');
+      signupTab.classList.remove('active');
+      submitBtn.textContent = 'Login';
+      errorMsg.textContent = '';
+    };
 
+    signupTab.onclick = () => {
+      isLogin = false;
+      signupTab.classList.add('active');
+      loginTab.classList.remove('active');
+      submitBtn.textContent = 'Sign Up';
+      errorMsg.textContent = '';
+    };
+
+    submitBtn.onclick = async () => {
       const username = document.getElementById('username').value.trim();
       const password = document.getElementById('password').value.trim();
-      const messageEl = document.getElementById('authMessage');
-
       if (!username || !password) {
-        messageEl.textContent = 'Please fill in both fields.';
+        errorMsg.textContent = "Please enter both username and password.";
         return;
       }
 
-      // Attempt to log in
-      const { data, error } = await supabase
-        .from('users')
-        .select('*')
-        .eq('username', username)
-        .eq('password', password)
-        .single();
+      if (isLogin) {
+        const { data, error } = await supabase
+          .from('users')
+          .select()
+          .eq('username', username)
+          .eq('password', password)
+          .single();
 
-      if (data) {
-        // Logged in successfully
-        localStorage.setItem('currentUser', username);
-        window.location.href = 'index.html';
+        if (error || !data) {
+          errorMsg.textContent = "Invalid login credentials.";
+        } else {
+          localStorage.setItem("currentUser", username);
+          window.location.href = "index.html";
+        }
       } else {
-        // Try to sign up
-        const { error: signupError } = await supabase
+        const { data: existing } = await supabase
+          .from('users')
+          .select()
+          .eq('username', username)
+          .maybeSingle();
+
+        if (existing) {
+          errorMsg.textContent = "Username already exists.";
+          return;
+        }
+
+        const { error: insertError } = await supabase
           .from('users')
           .insert([{ username, password }]);
 
-        if (signupError) {
-          messageEl.textContent = 'Login failed.';
+        if (insertError) {
+          errorMsg.textContent = "Sign up failed.";
         } else {
-          localStorage.setItem('currentUser', username);
-          window.location.href = 'index.html';
+          localStorage.setItem("currentUser", username);
+          window.location.href = "index.html";
         }
       }
-    });
+    };
   </script>
 </body>
 </html>

commit 7d93ee96e128b8b48eabc9ea221e7d07d51e940a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 17:24:57 2025 +0100

    fix

diff --git a/public/auth.html b/public/auth.html
index 35fdd6c..477d813 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -4,7 +4,6 @@
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>Login / Sign Up</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -13,59 +12,71 @@
       background-size: cover;
       background-attachment: fixed;
       color: #fff;
+      display: flex;
+      align-items: center;
+      justify-content: center;
+      height: 100vh;
     }
     .auth-container {
+      background-color: rgba(0, 0, 0, 0.8);
+      padding: 30px 40px;
+      border-radius: 12px;
+      width: 100%;
       max-width: 400px;
-      margin: 100px auto;
-      background-color: rgba(0, 0, 0, 0.75);
-      padding: 30px;
-      border-radius: 16px;
       text-align: center;
     }
-    .auth-tabs {
+    .tabs {
       display: flex;
       justify-content: center;
       margin-bottom: 20px;
     }
-    .auth-tab {
+    .tab {
       padding: 10px 20px;
-      background-color: rgba(255,255,255,0.1);
-      border: none;
-      color: #fff;
       cursor: pointer;
+      background: rgba(255,255,255,0.1);
+      border-radius: 8px 8px 0 0;
+      margin: 0 5px;
     }
-    .auth-tab.active {
-      background-color: #00bfff;
+    .tab.active {
+      background: rgba(255,255,255,0.25);
+      border-bottom: 2px solid #00bfff;
     }
     input {
       width: 100%;
-      padding: 12px;
+      padding: 10px;
       margin: 10px 0;
+      border-radius: 6px;
       border: none;
-      border-radius: 8px;
+      font-size: 16px;
     }
     button {
-      width: 100%;
-      padding: 12px;
+      padding: 10px 20px;
       background-color: #00bfff;
       border: none;
-      color: #fff;
+      border-radius: 6px;
       font-size: 16px;
-      border-radius: 8px;
       cursor: pointer;
+    }
+    .error {
+      color: red;
       margin-top: 10px;
+      font-size: 14px;
     }
   </style>
 </head>
 <body>
   <div class="auth-container">
-    <div class="auth-tabs">
-      <button class="auth-tab active" onclick="switchMode('login')">Login</button>
-      <button class="auth-tab" onclick="switchMode('signup')">Sign Up</button>
+    <div class="tabs">
+      <div id="loginTab" class="tab active">Login</div>
+      <div id="signupTab" class="tab">Sign Up</div>
+    </div>
+
+    <div id="form">
+      <input id="username" type="text" placeholder="Username" />
+      <input id="password" type="password" placeholder="Password" />
+      <button id="submitBtn">Login</button>
+      <div class="error" id="errorMsg"></div>
     </div>
-    <input type="text" id="username" placeholder="Username" />
-    <input type="password" id="password" placeholder="Password" />
-    <button onclick="handleAuth()">Login</button>
   </div>
 
   <script>

commit 590d75cdd5e0180f91d61538342b9dadb6b84248
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 17:01:24 2025 +0100

    Update auth.html

diff --git a/public/auth.html b/public/auth.html
index 5f03bd2..35fdd6c 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -5,7 +5,6 @@
   <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>Login / Sign Up</title>
   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
   <style>
     body {
       margin: 0;
@@ -14,56 +13,59 @@
       background-size: cover;
       background-attachment: fixed;
       color: #fff;
-      display: flex;
-      align-items: center;
-      justify-content: center;
-      height: 100vh;
     }
-
-    .auth-box {
+    .auth-container {
+      max-width: 400px;
+      margin: 100px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
       border-radius: 16px;
-      width: 300px;
       text-align: center;
     }
-
+    .auth-tabs {
+      display: flex;
+      justify-content: center;
+      margin-bottom: 20px;
+    }
+    .auth-tab {
+      padding: 10px 20px;
+      background-color: rgba(255,255,255,0.1);
+      border: none;
+      color: #fff;
+      cursor: pointer;
+    }
+    .auth-tab.active {
+      background-color: #00bfff;
+    }
     input {
       width: 100%;
-      padding: 10px;
+      padding: 12px;
       margin: 10px 0;
       border: none;
       border-radius: 8px;
-      font-size: 16px;
     }
-
     button {
-      padding: 10px 20px;
+      width: 100%;
+      padding: 12px;
       background-color: #00bfff;
       border: none;
-      color: white;
+      color: #fff;
       font-size: 16px;
       border-radius: 8px;
       cursor: pointer;
-      width: 100%;
-    }
-
-    #authMessage {
       margin-top: 10px;
-      font-size: 14px;
-      color: red;
     }
   </style>
 </head>
 <body>
-  <div class="auth-box">
-    <h2>Login / Sign Up</h2>
-    <form id="authForm">
-      <input type="text" id="username" placeholder="Username" required>
-      <input type="password" id="password" placeholder="Password" required>
-      <button type="submit">Log In / Sign Up</button>
-    </form>
-    <p id="authMessage"></p>
+  <div class="auth-container">
+    <div class="auth-tabs">
+      <button class="auth-tab active" onclick="switchMode('login')">Login</button>
+      <button class="auth-tab" onclick="switchMode('signup')">Sign Up</button>
+    </div>
+    <input type="text" id="username" placeholder="Username" />
+    <input type="password" id="password" placeholder="Password" />
+    <button onclick="handleAuth()">Login</button>
   </div>
 
   <script>

commit bae5f6a6dcf1c78bf57d54bfb2f1da08d355494a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Tue Apr 15 16:49:06 2025 +0100

    start database!

diff --git a/.DS_Store b/.DS_Store
index 3fb9528..ca9d3de 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/auth.html b/public/auth.html
index 9a3d4a7..5f03bd2 100644
--- a/public/auth.html
+++ b/public/auth.html
@@ -4,6 +4,8 @@
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>Login / Sign Up</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
   <style>
     body {
       margin: 0;
@@ -17,115 +19,97 @@
       justify-content: center;
       height: 100vh;
     }
-    .auth-container {
-      background-color: rgba(0, 0, 0, 0.8);
-      padding: 30px 40px;
-      border-radius: 12px;
-      width: 100%;
-      max-width: 400px;
+
+    .auth-box {
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 30px;
+      border-radius: 16px;
+      width: 300px;
       text-align: center;
     }
-    .tabs {
-      display: flex;
-      justify-content: center;
-      margin-bottom: 20px;
-    }
-    .tab {
-      padding: 10px 20px;
-      cursor: pointer;
-      background: rgba(255,255,255,0.1);
-      border-radius: 8px 8px 0 0;
-      margin: 0 5px;
-    }
-    .tab.active {
-      background: rgba(255,255,255,0.25);
-      border-bottom: 2px solid #00bfff;
-    }
+
     input {
       width: 100%;
       padding: 10px;
       margin: 10px 0;
-      border-radius: 6px;
       border: none;
+      border-radius: 8px;
       font-size: 16px;
     }
+
     button {
       padding: 10px 20px;
       background-color: #00bfff;
       border: none;
-      border-radius: 6px;
+      color: white;
       font-size: 16px;
+      border-radius: 8px;
       cursor: pointer;
+      width: 100%;
     }
-    .error {
-      color: red;
+
+    #authMessage {
       margin-top: 10px;
       font-size: 14px;
+      color: red;
     }
   </style>
 </head>
 <body>
-  <div class="auth-container">
-    <div class="tabs">
-      <div id="loginTab" class="tab active">Login</div>
-      <div id="signupTab" class="tab">Sign Up</div>
-    </div>
-
-    <div id="form">
-      <input id="username" type="text" placeholder="Username" />
-      <input id="password" type="password" placeholder="Password" />
-      <button id="submitBtn">Login</button>
-      <div class="error" id="errorMsg"></div>
-    </div>
+  <div class="auth-box">
+    <h2>Login / Sign Up</h2>
+    <form id="authForm">
+      <input type="text" id="username" placeholder="Username" required>
+      <input type="password" id="password" placeholder="Password" required>
+      <button type="submit">Log In / Sign Up</button>
+    </form>
+    <p id="authMessage"></p>
   </div>
 
   <script>
-    let isLogin = true;
-    const loginTab = document.getElementById("loginTab");
-    const signupTab = document.getElementById("signupTab");
-    const submitBtn = document.getElementById("submitBtn");
-    const errorMsg = document.getElementById("errorMsg");
+    const SUPABASE_URL = 'https://dhgfmbsyndfbsetlhvm.supabase.co';
+    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoZ2ZtYnN5bmRmYnNyZXRsaHZtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzA2MDUsImV4cCI6MjA2MDMwNjYwNX0.Xy6a2BMXaEOBQV2vJrKWbivaP4tYE6nAQ8tSQG-wTZI';
+    
+    const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
 
-    loginTab.onclick = () => switchMode(true);
-    signupTab.onclick = () => switchMode(false);
+    document.getElementById('authForm').addEventListener('submit', async (e) => {
+      e.preventDefault();
 
-    function switchMode(login) {
-      isLogin = login;
-      loginTab.classList.toggle("active", login);
-      signupTab.classList.toggle("active", !login);
-      submitBtn.textContent = login ? "Login" : "Sign Up";
-      errorMsg.textContent = "";
-    }
-
-    submitBtn.onclick = () => {
-      const username = document.getElementById("username").value.trim();
-      const password = document.getElementById("password").value.trim();
+      const username = document.getElementById('username').value.trim();
+      const password = document.getElementById('password').value.trim();
+      const messageEl = document.getElementById('authMessage');
 
       if (!username || !password) {
-        errorMsg.textContent = "Please fill in both fields.";
+        messageEl.textContent = 'Please fill in both fields.';
         return;
       }
 
-      const users = JSON.parse(localStorage.getItem("users") || "{}");
+      // Attempt to log in
+      const { data, error } = await supabase
+        .from('users')
+        .select('*')
+        .eq('username', username)
+        .eq('password', password)
+        .single();
 
-      if (isLogin) {
-        if (users[username] && users[username] === password) {
-          localStorage.setItem("currentUser", username);
-          window.location.href = "index.html";
-        } else {
-          errorMsg.textContent = "Invalid username or password.";
-        }
+      if (data) {
+        // Logged in successfully
+        localStorage.setItem('currentUser', username);
+        window.location.href = 'index.html';
       } else {
-        if (users[username]) {
-          errorMsg.textContent = "Username already exists.";
+        // Try to sign up
+        const { error: signupError } = await supabase
+          .from('users')
+          .insert([{ username, password }]);
+
+        if (signupError) {
+          messageEl.textContent = 'Login failed.';
         } else {
-          users[username] = password;
-          localStorage.setItem("users", JSON.stringify(users));
-          localStorage.setItem("currentUser", username);
-          window.location.href = "index.html";
+          localStorage.setItem('currentUser', username);
+          window.location.href = 'index.html';
         }
       }
-    };
+    });
   </script>
 </body>
 </html>

commit 6fb627f99b9f9f8c239cb91d84787dacf46123b6
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 09:18:14 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 722be68..194a0a2 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>Buy Order Volume Drain</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -53,14 +53,6 @@
     th {
       background-color: rgba(255,255,255,0.1);
     }
-    a.item-link {
-      color: #00bfff;
-      text-decoration: none;
-      cursor: pointer;
-    }
-    a.item-link:hover {
-      text-decoration: underline;
-    }
   </style>
 </head>
 <body>
@@ -71,18 +63,16 @@
       <a class="tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
+    </div>
+
     <h1>Buy Order Volume Drain</h1>
     <div id="tables"></div>
   </div>
 
   <script>
-    const itemsToTrack = [
-      "PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM",
-      "PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM",
-      "PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM",
-      "UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE",
-      "TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"
-    ];
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
 
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
@@ -92,13 +82,14 @@
     }
 
     function categorizeItems(products) {
-      let cat1 = [], cat2 = [], cat3 = [];
+      let cat1=[], cat2=[], cat3=[];
 
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
 
-        const buyOrders = [...data.sell_summary].reverse(); // players sell => buy instantly
+        // REMEMBER: API is inverted
+        const buyOrders = data.sell_summary; // players sell => buy instantly
         const sellOrders = data.buy_summary; // players buy => sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
 
@@ -111,11 +102,12 @@
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
           return;
         }
 
         // === Category 2 ===
+        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
@@ -124,12 +116,17 @@
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-            const percentChange = ((price2 - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - price2;
-            cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
-            return;
+
+            if (volume <= 10 * instaSellsHour) {
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+              foundCat2 = true;
+              break;
+            }
           }
         }
+        if (foundCat2) return;
 
         // === Category 3 ===
         let maxDrop = -Infinity;
@@ -138,20 +135,19 @@
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
           const drop = (curr - prev) / curr;
-          if (drop > maxDrop) {
-            maxDrop = drop;
-            bestIndex = i;
-          }
+          if (drop < maxDrop) continue;
+          maxDrop = drop;
+          bestIndex = i;
         }
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
       });
 
-      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
+      cat2.sort((a,b) => b[4] - a[4]);
 
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
@@ -169,7 +165,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -181,7 +177,21 @@
     }
 
     fetchData();
-    setInterval(fetchData, 10000);
-  </script>
+    setInterval(fetchData,30000);
+    const currentUser = localStorage.getItem("currentUser");
+const authStatus = document.getElementById("authStatus");
+
+if (currentUser) {
+  authStatus.innerHTML = `
+    Logged in as <strong>${currentUser}</strong>
+    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+  `;
+  document.getElementById("logoutLink").onclick = () => {
+    localStorage.removeItem("currentUser");
+    location.reload();
+  };
+}
+
+    </script>    
 </body>
 </html>

commit cbd1b178fb650a0bf5429c5bfc495ec0f5b7f713
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 09:07:26 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index b56132b..722be68 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>Buy Order Volume Drain</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
   <style>
     body {
       margin: 0;
@@ -53,6 +53,14 @@
     th {
       background-color: rgba(255,255,255,0.1);
     }
+    a.item-link {
+      color: #00bfff;
+      text-decoration: none;
+      cursor: pointer;
+    }
+    a.item-link:hover {
+      text-decoration: underline;
+    }
   </style>
 </head>
 <body>
@@ -63,21 +71,18 @@
       <a class="tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
-    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
-      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
-    </div>
-
     <h1>Buy Order Volume Drain</h1>
-    <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-      <input type="checkbox" id="recordToggle" />
-      <span style="font-size:16px;">Record Prices and Notify</span>
-    </label>
-    
     <div id="tables"></div>
   </div>
 
   <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+    const itemsToTrack = [
+      "PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM",
+      "PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM",
+      "PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM",
+      "UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE",
+      "TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"
+    ];
 
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
@@ -87,14 +92,13 @@
     }
 
     function categorizeItems(products) {
-      let cat1=[], cat2=[], cat3=[];
+      let cat1 = [], cat2 = [], cat3 = [];
 
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
 
-        // REMEMBER: API is inverted
-        const buyOrders = data.sell_summary; // players sell => buy instantly
+        const buyOrders = [...data.sell_summary].reverse(); // players sell => buy instantly
         const sellOrders = data.buy_summary; // players buy => sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
 
@@ -107,12 +111,11 @@
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
           return;
         }
 
         // === Category 2 ===
-        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
@@ -121,17 +124,12 @@
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-
-            if (volume <= 10 * instaSellsHour) {
-              const percentChange = ((price2 - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-              foundCat2 = true;
-              break;
-            }
+            const percentChange = ((price2 - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - price2;
+            cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+            return;
           }
         }
-        if (foundCat2) return;
 
         // === Category 3 ===
         let maxDrop = -Infinity;
@@ -140,19 +138,20 @@
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
           const drop = (curr - prev) / curr;
-          if (drop < maxDrop) continue;
-          maxDrop = drop;
-          bestIndex = i;
+          if (drop > maxDrop) {
+            maxDrop = drop;
+            bestIndex = i;
+          }
         }
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
       });
 
-      cat2.sort((a,b) => b[4] - a[4]);
+      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
 
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
@@ -170,7 +169,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
+              <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -182,21 +181,7 @@
     }
 
     fetchData();
-    setInterval(fetchData,30000);
-    const currentUser = localStorage.getItem("currentUser");
-const authStatus = document.getElementById("authStatus");
-
-if (currentUser) {
-  authStatus.innerHTML = `
-    Logged in as <strong>${currentUser}</strong>
-    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-  `;
-  document.getElementById("logoutLink").onclick = () => {
-    localStorage.removeItem("currentUser");
-    location.reload();
-  };
-}
-
-    </script> 
+    setInterval(fetchData, 10000);
+  </script>
 </body>
 </html>

commit 46100e4d1ba93175d48a9a9e2afb300b47ca1987
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 09:04:46 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 9da1ad8..b56132b 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -77,98 +77,62 @@
   </div>
 
   <script>
-    const itemsToTrack = [
-      "PERFECT_AMBER_GEM", "PERFECT_TOPAZ_GEM", "PERFECT_SAPPHIRE_GEM", "PERFECT_AMETHYST_GEM", "PERFECT_JASPER_GEM",
-      "PERFECT_RUBY_GEM", "PERFECT_JADE_GEM", "PERFECT_OPAL_GEM", "PERFECT_AQUAMARINE_GEM", "PERFECT_CITRINE_GEM",
-      "PERFECT_ONYX_GEM", "PERFECT_PERIDOT_GEM", "UMBER_PLATE", "TUNGSTEN_PLATE", "MITHRIL_PLATE", "PERFECT_PLATE",
-      "GOLDEN_PLATE", "TITANIUM_TESSERACT", "HOT_STUFF", "FRIGID_HUSK", "TUNGSTEN_KEY", "UMBER_KEY", "SKELETON_KEY"
-    ];
-    
-    let recordEnabled = false;
-    let lastCat2Items = new Set();
-    let priceHistory = {};
-    
-    document.getElementById("recordToggle").addEventListener("change", (e) => {
-      recordEnabled = e.target.checked;
-      if (recordEnabled) Notification.requestPermission();
-    });
-    
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
       const json = await res.json();
       categorizeItems(json.products);
     }
-    
+
     function categorizeItems(products) {
-      let cat1 = [], cat2 = [], cat3 = [];
-      const timestamp = Date.now();
-    
+      let cat1=[], cat2=[], cat3=[];
+
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
-    
+
+        // REMEMBER: API is inverted
         const buyOrders = data.sell_summary; // players sell => buy instantly
         const sellOrders = data.buy_summary; // players buy => sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-    
+
         if (!buyOrders.length || !sellOrders.length) return;
-    
+
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
-    
+
         // === Category 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([
-            id,
-            percentChange.toFixed(1),
-            "Already Price Dropped: No Volume",
-            instaSellsHour.toFixed(1),
-            (coinsGap / 1e6).toFixed(2) + 'M'
-          ]);
-          if (recordEnabled && lastCat2Items.has(id)) {
-            new Notification(`${id} price dropped!`);
-          }
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
           return;
         }
-    
+
         // === Category 2 ===
+        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
           const drop = (price2 - price1) / price2;
-    
+
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-    
-            const totalCoinValue = price2 * volume;
-            const percentChange = ((price2 - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - price2;
-    
-            cat2.push([
-              id,
-              percentChange.toFixed(1),
-              volume.toFixed(1),
-              instaSellsHour.toFixed(1),
-              (coinsGap / 1e6).toFixed(2) + 'M'
-            ]);
-    
-            if (recordEnabled) {
-              if (totalCoinValue <= 1e8 && !lastCat2Items.has(id)) {
-                new Notification(`${id} is about to drop in price`);
-              }
-    
-              if (!priceHistory[id]) priceHistory[id] = [];
-              priceHistory[id].push({ time: timestamp, price: price2, volume });
+
+            if (volume <= 10 * instaSellsHour) {
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+              foundCat2 = true;
+              break;
             }
-    
-            return;
           }
         }
-    
+        if (foundCat2) return;
+
         // === Category 3 ===
         let maxDrop = -Infinity;
         let bestIndex = 1;
@@ -176,28 +140,20 @@
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
           const drop = (curr - prev) / curr;
-          if (drop > maxDrop) {
-            maxDrop = drop;
-            bestIndex = i;
-          }
+          if (drop < maxDrop) continue;
+          maxDrop = drop;
+          bestIndex = i;
         }
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([
-          id,
-          percentChange.toFixed(1),
-          volume.toFixed(1),
-          instaSellsHour.toFixed(1),
-          (coinsGap / 1e6).toFixed(2) + 'M'
-        ]);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
       });
-    
-      lastCat2Items = new Set(cat2.map(row => row[0]));
-      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
-    
+
+      cat2.sort((a,b) => b[4] - a[4]);
+
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
         ['About To Price Drop', cat2],
@@ -214,7 +170,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #00bfff; text-decoration: none;">${row[0]}</a></td>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -224,22 +180,23 @@
         </table>
       `).join('');
     }
-    
+
     fetchData();
-    setInterval(fetchData, 30000);
-    
+    setInterval(fetchData,30000);
     const currentUser = localStorage.getItem("currentUser");
-    const authStatus = document.getElementById("authStatus");
-    if (currentUser) {
-      authStatus.innerHTML = `
-        Logged in as <strong>${currentUser}</strong>
-        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-      `;
-      document.getElementById("logoutLink").onclick = () => {
-        localStorage.removeItem("currentUser");
-        location.reload();
-      };
-    }
-    </script>    
+const authStatus = document.getElementById("authStatus");
+
+if (currentUser) {
+  authStatus.innerHTML = `
+    Logged in as <strong>${currentUser}</strong>
+    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+  `;
+  document.getElementById("logoutLink").onclick = () => {
+    localStorage.removeItem("currentUser");
+    location.reload();
+  };
+}
+
+    </script> 
 </body>
 </html>

commit 8a04544a58d7d77ecbbfe4587f7740ec3b33ba34
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 00:30:55 2025 +0100

    aaa

diff --git a/.DS_Store b/.DS_Store
index 6026582..3fb9528 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/volume-drain.html b/public/volume-drain.html
index b280958..9da1ad8 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -135,7 +135,6 @@
         }
     
         // === Category 2 ===
-        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
@@ -145,8 +144,10 @@
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
     
+            const totalCoinValue = price2 * volume;
             const percentChange = ((price2 - activeSell) / activeSell) * 100;
             const coinsGap = activeSell - price2;
+    
             cat2.push([
               id,
               percentChange.toFixed(1),
@@ -154,21 +155,19 @@
               instaSellsHour.toFixed(1),
               (coinsGap / 1e6).toFixed(2) + 'M'
             ]);
-            foundCat2 = true;
-    
-            if (recordEnabled && !lastCat2Items.has(id)) {
-              new Notification(`${id} is about to drop in price`);
-            }
     
             if (recordEnabled) {
+              if (totalCoinValue <= 1e8 && !lastCat2Items.has(id)) {
+                new Notification(`${id} is about to drop in price`);
+              }
+    
               if (!priceHistory[id]) priceHistory[id] = [];
               priceHistory[id].push({ time: timestamp, price: price2, volume });
             }
     
-            break;
+            return;
           }
         }
-        if (foundCat2) return;
     
         // === Category 3 ===
         let maxDrop = -Infinity;

commit a367425a4eb748156b52c3c4f836df2f559f42d1
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 00:21:27 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index b1d4746..b280958 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -68,67 +68,108 @@
     </div>
 
     <h1>Buy Order Volume Drain</h1>
-
+    <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+      <input type="checkbox" id="recordToggle" />
+      <span style="font-size:16px;">Record Prices and Notify</span>
+    </label>
+    
     <div id="tables"></div>
   </div>
 
   <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-
+    const itemsToTrack = [
+      "PERFECT_AMBER_GEM", "PERFECT_TOPAZ_GEM", "PERFECT_SAPPHIRE_GEM", "PERFECT_AMETHYST_GEM", "PERFECT_JASPER_GEM",
+      "PERFECT_RUBY_GEM", "PERFECT_JADE_GEM", "PERFECT_OPAL_GEM", "PERFECT_AQUAMARINE_GEM", "PERFECT_CITRINE_GEM",
+      "PERFECT_ONYX_GEM", "PERFECT_PERIDOT_GEM", "UMBER_PLATE", "TUNGSTEN_PLATE", "MITHRIL_PLATE", "PERFECT_PLATE",
+      "GOLDEN_PLATE", "TITANIUM_TESSERACT", "HOT_STUFF", "FRIGID_HUSK", "TUNGSTEN_KEY", "UMBER_KEY", "SKELETON_KEY"
+    ];
+    
+    let recordEnabled = false;
+    let lastCat2Items = new Set();
+    let priceHistory = {};
+    
+    document.getElementById("recordToggle").addEventListener("change", (e) => {
+      recordEnabled = e.target.checked;
+      if (recordEnabled) Notification.requestPermission();
+    });
+    
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
       const json = await res.json();
       categorizeItems(json.products);
     }
-
+    
     function categorizeItems(products) {
-      let cat1=[], cat2=[], cat3=[];
-
+      let cat1 = [], cat2 = [], cat3 = [];
+      const timestamp = Date.now();
+    
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
-
-        // REMEMBER: API is inverted
+    
         const buyOrders = data.sell_summary; // players sell => buy instantly
         const sellOrders = data.buy_summary; // players buy => sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-
+    
         if (!buyOrders.length || !sellOrders.length) return;
-
+    
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
-
+    
         // === Category 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+          cat1.push([
+            id,
+            percentChange.toFixed(1),
+            "Already Price Dropped: No Volume",
+            instaSellsHour.toFixed(1),
+            (coinsGap / 1e6).toFixed(2) + 'M'
+          ]);
+          if (recordEnabled && lastCat2Items.has(id)) {
+            new Notification(`${id} price dropped!`);
+          }
           return;
         }
-
+    
         // === Category 2 ===
         let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
           const drop = (price2 - price1) / price2;
-
+    
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-
-            if (volume <= 10 * instaSellsHour) {
-              const percentChange = ((price2 - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-              foundCat2 = true;
-              break;
+    
+            const percentChange = ((price2 - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - price2;
+            cat2.push([
+              id,
+              percentChange.toFixed(1),
+              volume.toFixed(1),
+              instaSellsHour.toFixed(1),
+              (coinsGap / 1e6).toFixed(2) + 'M'
+            ]);
+            foundCat2 = true;
+    
+            if (recordEnabled && !lastCat2Items.has(id)) {
+              new Notification(`${id} is about to drop in price`);
+            }
+    
+            if (recordEnabled) {
+              if (!priceHistory[id]) priceHistory[id] = [];
+              priceHistory[id].push({ time: timestamp, price: price2, volume });
             }
+    
+            break;
           }
         }
         if (foundCat2) return;
-
+    
         // === Category 3 ===
         let maxDrop = -Infinity;
         let bestIndex = 1;
@@ -136,20 +177,28 @@
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
           const drop = (curr - prev) / curr;
-          if (drop < maxDrop) continue;
-          maxDrop = drop;
-          bestIndex = i;
+          if (drop > maxDrop) {
+            maxDrop = drop;
+            bestIndex = i;
+          }
         }
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+        cat3.push([
+          id,
+          percentChange.toFixed(1),
+          volume.toFixed(1),
+          instaSellsHour.toFixed(1),
+          (coinsGap / 1e6).toFixed(2) + 'M'
+        ]);
       });
-
-      cat2.sort((a,b) => b[4] - a[4]);
-
+    
+      lastCat2Items = new Set(cat2.map(row => row[0]));
+      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
+    
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
         ['About To Price Drop', cat2],
@@ -166,7 +215,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #00bfff; text-decoration: none;">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -176,23 +225,22 @@
         </table>
       `).join('');
     }
-
+    
     fetchData();
-    setInterval(fetchData,30000);
+    setInterval(fetchData, 30000);
+    
     const currentUser = localStorage.getItem("currentUser");
-const authStatus = document.getElementById("authStatus");
-
-if (currentUser) {
-  authStatus.innerHTML = `
-    Logged in as <strong>${currentUser}</strong>
-    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-  `;
-  document.getElementById("logoutLink").onclick = () => {
-    localStorage.removeItem("currentUser");
-    location.reload();
-  };
-}
-
-    </script> 
+    const authStatus = document.getElementById("authStatus");
+    if (currentUser) {
+      authStatus.innerHTML = `
+        Logged in as <strong>${currentUser}</strong>
+        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+      `;
+      document.getElementById("logoutLink").onclick = () => {
+        localStorage.removeItem("currentUser");
+        location.reload();
+      };
+    }
+    </script>    
 </body>
 </html>

commit aa45ed7a149151fb4c0f850daa3ee6a962e22134
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 00:09:50 2025 +0100

    fix attempt...

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 722be68..b1d4746 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>Buy Order Volume Drain</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -53,14 +53,6 @@
     th {
       background-color: rgba(255,255,255,0.1);
     }
-    a.item-link {
-      color: #00bfff;
-      text-decoration: none;
-      cursor: pointer;
-    }
-    a.item-link:hover {
-      text-decoration: underline;
-    }
   </style>
 </head>
 <body>
@@ -71,18 +63,17 @@
       <a class="tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
+    </div>
+
     <h1>Buy Order Volume Drain</h1>
+
     <div id="tables"></div>
   </div>
 
   <script>
-    const itemsToTrack = [
-      "PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM",
-      "PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM",
-      "PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM",
-      "UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE",
-      "TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"
-    ];
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
 
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
@@ -92,13 +83,14 @@
     }
 
     function categorizeItems(products) {
-      let cat1 = [], cat2 = [], cat3 = [];
+      let cat1=[], cat2=[], cat3=[];
 
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
 
-        const buyOrders = [...data.sell_summary].reverse(); // players sell => buy instantly
+        // REMEMBER: API is inverted
+        const buyOrders = data.sell_summary; // players sell => buy instantly
         const sellOrders = data.buy_summary; // players buy => sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
 
@@ -111,11 +103,12 @@
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
           return;
         }
 
         // === Category 2 ===
+        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
@@ -124,12 +117,17 @@
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-            const percentChange = ((price2 - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - price2;
-            cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
-            return;
+
+            if (volume <= 10 * instaSellsHour) {
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+              foundCat2 = true;
+              break;
+            }
           }
         }
+        if (foundCat2) return;
 
         // === Category 3 ===
         let maxDrop = -Infinity;
@@ -138,20 +136,19 @@
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
           const drop = (curr - prev) / curr;
-          if (drop > maxDrop) {
-            maxDrop = drop;
-            bestIndex = i;
-          }
+          if (drop < maxDrop) continue;
+          maxDrop = drop;
+          bestIndex = i;
         }
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
       });
 
-      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
+      cat2.sort((a,b) => b[4] - a[4]);
 
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
@@ -169,7 +166,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -181,7 +178,21 @@
     }
 
     fetchData();
-    setInterval(fetchData, 10000);
-  </script>
+    setInterval(fetchData,30000);
+    const currentUser = localStorage.getItem("currentUser");
+const authStatus = document.getElementById("authStatus");
+
+if (currentUser) {
+  authStatus.innerHTML = `
+    Logged in as <strong>${currentUser}</strong>
+    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+  `;
+  document.getElementById("logoutLink").onclick = () => {
+    localStorage.removeItem("currentUser");
+    location.reload();
+  };
+}
+
+    </script> 
 </body>
 </html>

commit f2a9626fd997d7206220cf36542b5e8a215d342e
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 00:03:59 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 489f643..722be68 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -72,12 +72,6 @@
     </div>
 
     <h1>Buy Order Volume Drain</h1>
-
-    <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-      <input type="checkbox" id="recordToggle"/>
-      <span>Record Prices and Notify</span>
-    </label>
-
     <div id="tables"></div>
   </div>
 
@@ -104,8 +98,8 @@
         const data = products[id];
         if (!data) return;
 
-        const buyOrders = [...data.sell_summary].reverse(); // player sell orders â†’ buy instantly
-        const sellOrders = data.buy_summary; // player buy orders â†’ sell instantly
+        const buyOrders = [...data.sell_summary].reverse(); // players sell => buy instantly
+        const sellOrders = data.buy_summary; // players buy => sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
 
         if (!buyOrders.length || !sellOrders.length) return;
@@ -138,7 +132,8 @@
         }
 
         // === Category 3 ===
-        let maxDrop = -Infinity, bestIndex = 1;
+        let maxDrop = -Infinity;
+        let bestIndex = 1;
         for (let i = 1; i < buyOrders.length; i++) {
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;

commit 470d419840ea7e7be282b2e2b6c363f24f1512cb
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sun Apr 13 00:01:41 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 471e79b..489f643 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>Buy Order Volume Drain</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
   <style>
     body {
       margin: 0;
@@ -71,30 +71,24 @@
       <a class="tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
-    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
-      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
-    </div>
-
     <h1>Buy Order Volume Drain</h1>
 
     <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-      <input type="checkbox" id="recordToggle" />
-      <span style="font-size:16px;">Record Prices and Notify</span>
+      <input type="checkbox" id="recordToggle"/>
+      <span>Record Prices and Notify</span>
     </label>
 
     <div id="tables"></div>
   </div>
 
   <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-
-    let recordEnabled = false;
-    let lastCat2Items = new Set();
-
-    document.getElementById("recordToggle").addEventListener("change", (e) => {
-      recordEnabled = e.target.checked;
-      if (recordEnabled) Notification.requestPermission();
-    });
+    const itemsToTrack = [
+      "PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM",
+      "PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM",
+      "PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM",
+      "UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE",
+      "TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"
+    ];
 
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
@@ -103,22 +97,15 @@
       categorizeItems(json.products);
     }
 
-    function notify(text) {
-      if (Notification.permission === "granted") {
-        new Notification(text);
-      }
-    }
-
     function categorizeItems(products) {
       let cat1 = [], cat2 = [], cat3 = [];
-      let newCat2 = new Set();
 
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
 
-        const buyOrders = [...data.sell_summary].reverse();  // inverted API
-        const sellOrders = data.buy_summary;
+        const buyOrders = [...data.sell_summary].reverse(); // player sell orders â†’ buy instantly
+        const sellOrders = data.buy_summary; // player buy orders â†’ sell instantly
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
 
         if (!buyOrders.length || !sellOrders.length) return;
@@ -126,16 +113,15 @@
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
 
-        // === CAT 1 ===
+        // === Category 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
           cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
-          if (recordEnabled && lastCat2Items.has(id)) notify(`${id} price dropped!`);
           return;
         }
 
-        // === CAT 2 ===
+        // === Category 2 ===
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
@@ -144,19 +130,15 @@
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-
             const percentChange = ((price2 - activeSell) / activeSell) * 100;
             const coinsGap = activeSell - price2;
             cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
-            newCat2.add(id);
-            if (recordEnabled && !lastCat2Items.has(id)) notify(`${id} is about to drop in price`);
             return;
           }
         }
 
-        // === CAT 3 ===
-        let maxDrop = -Infinity;
-        let bestIndex = 1;
+        // === Category 3 ===
+        let maxDrop = -Infinity, bestIndex = 1;
         for (let i = 1; i < buyOrders.length; i++) {
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
@@ -166,7 +148,6 @@
             bestIndex = i;
           }
         }
-
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
@@ -175,14 +156,14 @@
         cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
       });
 
-      lastCat2Items = newCat2;
+      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
 
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
         ['About To Price Drop', cat2],
         ['Not Price Dropping', cat3]
-      ].map(([label, items]) => `
-        <h2>${label}</h2>
+      ].map(cat => `
+        <h2>${cat[0]}</h2>
         <table>
           <tr>
             <th>Item</th>
@@ -191,7 +172,7 @@
             <th>Insta-sells/hour</th>
             <th>Coin Gap</th>
           </tr>
-          ${items.map(row => `
+          ${cat[1].map(row => `
             <tr>
               <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
               <td>${row[1]}%</td>

commit 8242cae91e57a569c1e45eafed507bd86f1ee0dc
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:35:39 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index e2e252d..471e79b 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -71,54 +71,62 @@
       <a class="tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
+    </div>
+
     <h1>Buy Order Volume Drain</h1>
+
+    <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+      <input type="checkbox" id="recordToggle" />
+      <span style="font-size:16px;">Record Prices and Notify</span>
+    </label>
+
     <div id="tables"></div>
   </div>
 
   <script>
     const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-    
+
     let recordEnabled = false;
     let lastCat2Items = new Set();
-    let priceHistory = {};
-    
+
     document.getElementById("recordToggle").addEventListener("change", (e) => {
       recordEnabled = e.target.checked;
       if (recordEnabled) Notification.requestPermission();
     });
-    
-    function notify(text) {
-      if (Notification.permission === "granted") {
-        new Notification(text);
-      }
-    }
-    
+
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
       const json = await res.json();
       categorizeItems(json.products);
     }
-    
+
+    function notify(text) {
+      if (Notification.permission === "granted") {
+        new Notification(text);
+      }
+    }
+
     function categorizeItems(products) {
       let cat1 = [], cat2 = [], cat3 = [];
       let newCat2 = new Set();
-      const timestamp = Date.now();
-    
+
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
-    
-        const buyOrders = [...data.sell_summary].reverse();  // API inversion
+
+        const buyOrders = [...data.sell_summary].reverse();  // inverted API
         const sellOrders = data.buy_summary;
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-    
+
         if (!buyOrders.length || !sellOrders.length) return;
-    
+
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
-    
-        // === Category 1 ===
+
+        // === CAT 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
@@ -126,32 +134,27 @@
           if (recordEnabled && lastCat2Items.has(id)) notify(`${id} price dropped!`);
           return;
         }
-    
-        // === Category 2 ===
+
+        // === CAT 2 ===
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
           const drop = (price2 - price1) / price2;
-    
+
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-    
+
             const percentChange = ((price2 - activeSell) / activeSell) * 100;
             const coinsGap = activeSell - price2;
             cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
             newCat2.add(id);
-    
             if (recordEnabled && !lastCat2Items.has(id)) notify(`${id} is about to drop in price`);
-            if (recordEnabled) {
-              if (!priceHistory[id]) priceHistory[id] = [];
-              priceHistory[id].push({ time: timestamp, price: price2, volume });
-            }
             return;
           }
         }
-    
-        // === Category 3 ===
+
+        // === CAT 3 ===
         let maxDrop = -Infinity;
         let bestIndex = 1;
         for (let i = 1; i < buyOrders.length; i++) {
@@ -163,26 +166,23 @@
             bestIndex = i;
           }
         }
-    
+
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-    
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
         cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
       });
-    
+
       lastCat2Items = newCat2;
-    
-      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
-    
+
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
         ['About To Price Drop', cat2],
         ['Not Price Dropping', cat3]
-      ].map(cat => `
-        <h2>${cat[0]}</h2>
+      ].map(([label, items]) => `
+        <h2>${label}</h2>
         <table>
           <tr>
             <th>Item</th>
@@ -191,9 +191,9 @@
             <th>Insta-sells/hour</th>
             <th>Coin Gap</th>
           </tr>
-          ${cat[1].map(row => `
+          ${items.map(row => `
             <tr>
-              <td><a class="item-link" onclick="handleItemClick('${row[0]}')">${row[0]}</a></td>
+              <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -203,13 +203,9 @@
         </table>
       `).join('');
     }
-    
-    function handleItemClick(item) {
-      window.open(`https://skyblock.finance/items/${item}/chart`, "_blank");
-    }
-    
+
     fetchData();
     setInterval(fetchData, 10000);
-    </script>    
+  </script>
 </body>
 </html>

commit 3c4b4469f154a0ea74986d65a25fd87cae554ed3
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:32:46 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 30b58e6..e2e252d 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -77,84 +77,106 @@
 
   <script>
     const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-
+    
+    let recordEnabled = false;
+    let lastCat2Items = new Set();
+    let priceHistory = {};
+    
+    document.getElementById("recordToggle").addEventListener("change", (e) => {
+      recordEnabled = e.target.checked;
+      if (recordEnabled) Notification.requestPermission();
+    });
+    
+    function notify(text) {
+      if (Notification.permission === "granted") {
+        new Notification(text);
+      }
+    }
+    
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
       const json = await res.json();
       categorizeItems(json.products);
     }
-
+    
     function categorizeItems(products) {
       let cat1 = [], cat2 = [], cat3 = [];
-
+      let newCat2 = new Set();
+      const timestamp = Date.now();
+    
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
-
-        const buyOrders = data.sell_summary; // API inverted
+    
+        const buyOrders = [...data.sell_summary].reverse();  // API inversion
         const sellOrders = data.buy_summary;
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-
+    
         if (!buyOrders.length || !sellOrders.length) return;
-
+    
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
-
+    
         // === Category 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
           cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+          if (recordEnabled && lastCat2Items.has(id)) notify(`${id} price dropped!`);
           return;
         }
-
+    
         // === Category 2 ===
-        let found = false;
         for (let i = 1; i < buyOrders.length; i++) {
-          const prev = buyOrders[i - 1];
-          const curr = buyOrders[i];
-          const drop = (prev.pricePerUnit - curr.pricePerUnit) / curr.pricePerUnit;
-
+          const price1 = buyOrders[i - 1].pricePerUnit;
+          const price2 = buyOrders[i].pricePerUnit;
+          const drop = (price2 - price1) / price2;
+    
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-
-            if (volume <= 10 * instaSellsHour) {
-              const percentChange = ((curr.pricePerUnit - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - curr.pricePerUnit;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
-              found = true;
-              break;
+    
+            const percentChange = ((price2 - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - price2;
+            cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+            newCat2.add(id);
+    
+            if (recordEnabled && !lastCat2Items.has(id)) notify(`${id} is about to drop in price`);
+            if (recordEnabled) {
+              if (!priceHistory[id]) priceHistory[id] = [];
+              priceHistory[id].push({ time: timestamp, price: price2, volume });
             }
+            return;
           }
         }
-
-        if (!found) {
-          // === Category 3 ===
-          let maxDrop = -Infinity;
-          let bestIndex = 1;
-          for (let i = 1; i < buyOrders.length; i++) {
-            const prev = buyOrders[i - 1];
-            const curr = buyOrders[i];
-            const drop = (prev.pricePerUnit - curr.pricePerUnit) / curr.pricePerUnit;
-            if (drop < maxDrop) continue;
+    
+        // === Category 3 ===
+        let maxDrop = -Infinity;
+        let bestIndex = 1;
+        for (let i = 1; i < buyOrders.length; i++) {
+          const prev = buyOrders[i - 1].pricePerUnit;
+          const curr = buyOrders[i].pricePerUnit;
+          const drop = (curr - prev) / curr;
+          if (drop > maxDrop) {
             maxDrop = drop;
             bestIndex = i;
           }
-
-          let volume = 0;
-          for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-
-          const bestOrder = buyOrders[bestIndex];
-          const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
-          const coinsGap = activeSell - bestOrder.pricePerUnit;
-          cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
         }
+    
+        const bestOrder = buyOrders[bestIndex];
+        let volume = 0;
+        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+    
+        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+        const coinsGap = activeSell - bestOrder.pricePerUnit;
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
       });
-
+    
+      lastCat2Items = newCat2;
+    
       cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
-
+    
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
         ['About To Price Drop', cat2],
@@ -171,7 +193,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+              <td><a class="item-link" onclick="handleItemClick('${row[0]}')">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -181,9 +203,13 @@
         </table>
       `).join('');
     }
-
+    
+    function handleItemClick(item) {
+      window.open(`https://skyblock.finance/items/${item}/chart`, "_blank");
+    }
+    
     fetchData();
     setInterval(fetchData, 10000);
-  </script>
+    </script>    
 </body>
 </html>

commit ea9023ea4e71f46e51152e6d215cbad6239f337e
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:28:56 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 58830ad..30b58e6 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -92,7 +92,7 @@
         const data = products[id];
         if (!data) return;
 
-        const buyOrders = [...data.sell_summary].reverse();
+        const buyOrders = data.sell_summary; // API inverted
         const sellOrders = data.buy_summary;
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
 
@@ -110,40 +110,47 @@
         }
 
         // === Category 2 ===
+        let found = false;
         for (let i = 1; i < buyOrders.length; i++) {
-          const price1 = buyOrders[i - 1].pricePerUnit;
-          const price2 = buyOrders[i].pricePerUnit;
-          const drop = (price2 - price1) / price2;
+          const prev = buyOrders[i - 1];
+          const curr = buyOrders[i];
+          const drop = (prev.pricePerUnit - curr.pricePerUnit) / curr.pricePerUnit;
 
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
 
-            const percentChange = ((price2 - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - price2;
-            cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
-            return;
+            if (volume <= 10 * instaSellsHour) {
+              const percentChange = ((curr.pricePerUnit - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - curr.pricePerUnit;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+              found = true;
+              break;
+            }
           }
         }
 
-        // === Category 3 ===
-        let maxDrop = -Infinity;
-        let bestIndex = 1;
-        for (let i = 1; i < buyOrders.length; i++) {
-          const prev = buyOrders[i - 1].pricePerUnit;
-          const curr = buyOrders[i].pricePerUnit;
-          const drop = (curr - prev) / curr;
-          if (drop > maxDrop) {
+        if (!found) {
+          // === Category 3 ===
+          let maxDrop = -Infinity;
+          let bestIndex = 1;
+          for (let i = 1; i < buyOrders.length; i++) {
+            const prev = buyOrders[i - 1];
+            const curr = buyOrders[i];
+            const drop = (prev.pricePerUnit - curr.pricePerUnit) / curr.pricePerUnit;
+            if (drop < maxDrop) continue;
             maxDrop = drop;
             bestIndex = i;
           }
+
+          let volume = 0;
+          for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+
+          const bestOrder = buyOrders[bestIndex];
+          const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+          const coinsGap = activeSell - bestOrder.pricePerUnit;
+          cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
         }
-        const bestOrder = buyOrders[bestIndex];
-        let volume = 0;
-        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
-        const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
       });
 
       cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));

commit 642cade7ef739e55fe0f9d65c5081745c43d8af0
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:26:23 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index dae7afe..58830ad 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -54,15 +54,13 @@
       background-color: rgba(255,255,255,0.1);
     }
     a.item-link {
-  color: #00bfff;
-  text-decoration: none;
-  cursor: pointer;
-}
-
-a.item-link:hover {
-  text-decoration: underline;
-}
-
+      color: #00bfff;
+      text-decoration: none;
+      cursor: pointer;
+    }
+    a.item-link:hover {
+      text-decoration: underline;
+    }
   </style>
 </head>
 <body>
@@ -73,116 +71,61 @@ a.item-link:hover {
       <a class="tab" href="saved-orders.html">Saved Orders</a>
     </div>
 
-    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
-      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
-    </div>
-
     <h1>Buy Order Volume Drain</h1>
-
-<label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-  <input type="checkbox" id="recordToggle" />
-  <span style="font-size:16px;">Record Prices and Notify</span>
-</label>
-
-<div id="tables"></div>
-
+    <div id="tables"></div>
   </div>
 
   <script>
     const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-    
-    let recordEnabled = false;
-    let lastCat2Items = new Set();
-    let priceHistory = {};  // { ITEM_ID: [ { time, price, volume } ] }
-    
-    document.getElementById("tables").insertAdjacentHTML('beforebegin', `
-      <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-        <input type="checkbox" id="recordToggle" />
-        <span>Record Prices and Notify</span>
-      </label>
-    `);
-    
-    document.getElementById("recordToggle").addEventListener("change", (e) => {
-      recordEnabled = e.target.checked;
-      if (recordEnabled) {
-        Notification.requestPermission();
-      }
-    });
-    
+
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";
       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
       const json = await res.json();
       categorizeItems(json.products);
     }
-    
-    function notify(text) {
-      if (Notification.permission === "granted") {
-        new Notification(text);
-      }
-    }
-    
+
     function categorizeItems(products) {
       let cat1 = [], cat2 = [], cat3 = [];
-      let newCat2 = new Set();
-      const timestamp = Date.now();
-    
+
       itemsToTrack.forEach(id => {
         const data = products[id];
         if (!data) return;
-    
+
         const buyOrders = [...data.sell_summary].reverse();
         const sellOrders = data.buy_summary;
         const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-    
+
         if (!buyOrders.length || !sellOrders.length) return;
-    
+
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
-    
+
         // === Category 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-          if (recordEnabled && lastCat2Items.has(id)) {
-            notify(`${id} price dropped!`);
-          }
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
           return;
         }
-    
+
         // === Category 2 ===
         for (let i = 1; i < buyOrders.length; i++) {
           const price1 = buyOrders[i - 1].pricePerUnit;
           const price2 = buyOrders[i].pricePerUnit;
           const drop = (price2 - price1) / price2;
-    
+
           if (drop <= -0.2) {
             let volume = 0;
             for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-    
-            const totalCoinValue = price2 * volume;
-            if (true) { // we skip volume â‰¤ 100m check for now, or put: (totalCoinValue <= 1e8)
-              const percentChange = ((price2 - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-    
-              newCat2.add(id);
-    
-              if (recordEnabled && !lastCat2Items.has(id) && totalCoinValue <= 1e8) {
-                notify(`${id} is about to drop in price`);
-              }
-    
-              if (recordEnabled) {
-                if (!priceHistory[id]) priceHistory[id] = [];
-                priceHistory[id].push({ time: timestamp, price: price2, volume });
-              }
-    
-              return;
-            }
+
+            const percentChange = ((price2 - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - price2;
+            cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
+            return;
           }
         }
-    
+
         // === Category 3 ===
         let maxDrop = -Infinity;
         let bestIndex = 1;
@@ -200,13 +143,11 @@ a.item-link:hover {
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap / 1e6).toFixed(2) + 'M']);
       });
-    
-      lastCat2Items = newCat2;
-    
-      cat2.sort((a, b) => b[4] - a[4]);
-    
+
+      cat2.sort((a, b) => parseFloat(b[4]) - parseFloat(a[4]));
+
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
         ['About To Price Drop', cat2],
@@ -223,7 +164,7 @@ a.item-link:hover {
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+              <td><a class="item-link" href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -233,9 +174,9 @@ a.item-link:hover {
         </table>
       `).join('');
     }
-    
+
     fetchData();
     setInterval(fetchData, 10000);
-    </script>    
+  </script>
 </body>
 </html>

commit 73e7f11e017e4c009609b97354561b9247bd96ab
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:19:47 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index c5e6d3a..dae7afe 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -53,6 +53,16 @@
     th {
       background-color: rgba(255,255,255,0.1);
     }
+    a.item-link {
+  color: #00bfff;
+  text-decoration: none;
+  cursor: pointer;
+}
+
+a.item-link:hover {
+  text-decoration: underline;
+}
+
   </style>
 </head>
 <body>

commit 806a0200fc869f6b22d0dca3c8e98a0c4967736d
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:17:32 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index a24661c..c5e6d3a 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -69,161 +69,163 @@
 
     <h1>Buy Order Volume Drain</h1>
 
-    <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-      <input type="checkbox" id="recordToggle" />
-      <span style="font-size:16px;">Record Prices and Notify</span>
-    </label>
+<label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+  <input type="checkbox" id="recordToggle" />
+  <span style="font-size:16px;">Record Prices and Notify</span>
+</label>
 
-    <div id="tables"></div>
+<div id="tables"></div>
 
-    <script>
-      const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-      
-      let recordEnabled = false;
-      let lastCat2Items = new Set();
-      let priceHistory = {};  // { ITEM_ID: [ { time, price, volume } ] }
-      
-      document.getElementById("tables").insertAdjacentHTML('beforebegin', `
-        <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-          <input type="checkbox" id="recordToggle" />
-          <span>Record Prices and Notify</span>
-        </label>
-      `);
-      
-      document.getElementById("recordToggle").addEventListener("change", (e) => {
-        recordEnabled = e.target.checked;
-        if (recordEnabled) {
-          Notification.requestPermission();
-        }
-      });
-      
-      async function fetchData() {
-        const apiKey = "YOUR_API_KEY_HERE";
-        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-        const json = await res.json();
-        categorizeItems(json.products);
+  </div>
+
+  <script>
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+    
+    let recordEnabled = false;
+    let lastCat2Items = new Set();
+    let priceHistory = {};  // { ITEM_ID: [ { time, price, volume } ] }
+    
+    document.getElementById("tables").insertAdjacentHTML('beforebegin', `
+      <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+        <input type="checkbox" id="recordToggle" />
+        <span>Record Prices and Notify</span>
+      </label>
+    `);
+    
+    document.getElementById("recordToggle").addEventListener("change", (e) => {
+      recordEnabled = e.target.checked;
+      if (recordEnabled) {
+        Notification.requestPermission();
       }
-      
-      function notify(text) {
-        if (Notification.permission === "granted") {
-          new Notification(text);
-        }
+    });
+    
+    async function fetchData() {
+      const apiKey = "YOUR_API_KEY_HERE";
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      categorizeItems(json.products);
+    }
+    
+    function notify(text) {
+      if (Notification.permission === "granted") {
+        new Notification(text);
       }
-      
-      function categorizeItems(products) {
-        let cat1 = [], cat2 = [], cat3 = [];
-        let newCat2 = new Set();
-        const timestamp = Date.now();
-      
-        itemsToTrack.forEach(id => {
-          const data = products[id];
-          if (!data) return;
-      
-          const buyOrders = [...data.sell_summary].reverse();
-          const sellOrders = data.buy_summary;
-          const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-      
-          if (!buyOrders.length || !sellOrders.length) return;
-      
-          const activeBuy = buyOrders[0].pricePerUnit;
-          const activeSell = sellOrders[0].pricePerUnit;
-      
-          // === Category 1 ===
-          if (activeBuy * 1.25 <= activeSell) {
-            const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - activeBuy;
-            cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-            if (recordEnabled && lastCat2Items.has(id)) {
-              notify(`${id} price dropped!`);
-            }
-            return;
+    }
+    
+    function categorizeItems(products) {
+      let cat1 = [], cat2 = [], cat3 = [];
+      let newCat2 = new Set();
+      const timestamp = Date.now();
+    
+      itemsToTrack.forEach(id => {
+        const data = products[id];
+        if (!data) return;
+    
+        const buyOrders = [...data.sell_summary].reverse();
+        const sellOrders = data.buy_summary;
+        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
+    
+        if (!buyOrders.length || !sellOrders.length) return;
+    
+        const activeBuy = buyOrders[0].pricePerUnit;
+        const activeSell = sellOrders[0].pricePerUnit;
+    
+        // === Category 1 ===
+        if (activeBuy * 1.25 <= activeSell) {
+          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
+          const coinsGap = activeSell - activeBuy;
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+          if (recordEnabled && lastCat2Items.has(id)) {
+            notify(`${id} price dropped!`);
           }
-      
-          // === Category 2 ===
-          for (let i = 1; i < buyOrders.length; i++) {
-            const price1 = buyOrders[i - 1].pricePerUnit;
-            const price2 = buyOrders[i].pricePerUnit;
-            const drop = (price2 - price1) / price2;
-      
-            if (drop <= -0.2) {
-              let volume = 0;
-              for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-      
-              const totalCoinValue = price2 * volume;
-              if (true) { // we skip volume â‰¤ 100m check for now, or put: (totalCoinValue <= 1e8)
-                const percentChange = ((price2 - activeSell) / activeSell) * 100;
-                const coinsGap = activeSell - price2;
-                cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-      
-                newCat2.add(id);
-      
-                if (recordEnabled && !lastCat2Items.has(id) && totalCoinValue <= 1e8) {
-                  notify(`${id} is about to drop in price`);
-                }
-      
-                if (recordEnabled) {
-                  if (!priceHistory[id]) priceHistory[id] = [];
-                  priceHistory[id].push({ time: timestamp, price: price2, volume });
-                }
-      
-                return;
+          return;
+        }
+    
+        // === Category 2 ===
+        for (let i = 1; i < buyOrders.length; i++) {
+          const price1 = buyOrders[i - 1].pricePerUnit;
+          const price2 = buyOrders[i].pricePerUnit;
+          const drop = (price2 - price1) / price2;
+    
+          if (drop <= -0.2) {
+            let volume = 0;
+            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
+    
+            const totalCoinValue = price2 * volume;
+            if (true) { // we skip volume â‰¤ 100m check for now, or put: (totalCoinValue <= 1e8)
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+    
+              newCat2.add(id);
+    
+              if (recordEnabled && !lastCat2Items.has(id) && totalCoinValue <= 1e8) {
+                notify(`${id} is about to drop in price`);
               }
+    
+              if (recordEnabled) {
+                if (!priceHistory[id]) priceHistory[id] = [];
+                priceHistory[id].push({ time: timestamp, price: price2, volume });
+              }
+    
+              return;
             }
           }
-      
-          // === Category 3 ===
-          let maxDrop = -Infinity;
-          let bestIndex = 1;
-          for (let i = 1; i < buyOrders.length; i++) {
-            const prev = buyOrders[i - 1].pricePerUnit;
-            const curr = buyOrders[i].pricePerUnit;
-            const drop = (curr - prev) / curr;
-            if (drop > maxDrop) {
-              maxDrop = drop;
-              bestIndex = i;
-            }
+        }
+    
+        // === Category 3 ===
+        let maxDrop = -Infinity;
+        let bestIndex = 1;
+        for (let i = 1; i < buyOrders.length; i++) {
+          const prev = buyOrders[i - 1].pricePerUnit;
+          const curr = buyOrders[i].pricePerUnit;
+          const drop = (curr - prev) / curr;
+          if (drop > maxDrop) {
+            maxDrop = drop;
+            bestIndex = i;
           }
-          const bestOrder = buyOrders[bestIndex];
-          let volume = 0;
-          for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-          const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
-          const coinsGap = activeSell - bestOrder.pricePerUnit;
-          cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-        });
-      
-        lastCat2Items = newCat2;
-      
-        cat2.sort((a, b) => b[4] - a[4]);
-      
-        document.getElementById('tables').innerHTML = [
-          ['Under Price Drop', cat1],
-          ['About To Price Drop', cat2],
-          ['Not Price Dropping', cat3]
-        ].map(cat => `
-          <h2>${cat[0]}</h2>
-          <table>
+        }
+        const bestOrder = buyOrders[bestIndex];
+        let volume = 0;
+        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+        const coinsGap = activeSell - bestOrder.pricePerUnit;
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+      });
+    
+      lastCat2Items = newCat2;
+    
+      cat2.sort((a, b) => b[4] - a[4]);
+    
+      document.getElementById('tables').innerHTML = [
+        ['Under Price Drop', cat1],
+        ['About To Price Drop', cat2],
+        ['Not Price Dropping', cat3]
+      ].map(cat => `
+        <h2>${cat[0]}</h2>
+        <table>
+          <tr>
+            <th>Item</th>
+            <th>% Price Change</th>
+            <th>Item Volume</th>
+            <th>Insta-sells/hour</th>
+            <th>Coin Gap</th>
+          </tr>
+          ${cat[1].map(row => `
             <tr>
-              <th>Item</th>
-              <th>% Price Change</th>
-              <th>Item Volume</th>
-              <th>Insta-sells/hour</th>
-              <th>Coin Gap</th>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+              <td>${row[1]}%</td>
+              <td>${row[2]}</td>
+              <td>${row[3]}</td>
+              <td>${row[4]}</td>
             </tr>
-            ${cat[1].map(row => `
-              <tr>
-                <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
-                <td>${row[1]}%</td>
-                <td>${row[2]}</td>
-                <td>${row[3]}</td>
-                <td>${row[4]}</td>
-              </tr>
-            `).join('')}
-          </table>
-        `).join('');
-      }
-      
-      fetchData();
-      setInterval(fetchData, 10000);
-      </script>      
+          `).join('')}
+        </table>
+      `).join('');
+    }
+    
+    fetchData();
+    setInterval(fetchData, 10000);
+    </script>    
 </body>
 </html>

commit a9359bcb82f21f5eac357d03ebb66f2d79f10e1b
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:14:11 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 57d9ff6..a24661c 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -69,130 +69,161 @@
 
     <h1>Buy Order Volume Drain</h1>
 
+    <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+      <input type="checkbox" id="recordToggle" />
+      <span style="font-size:16px;">Record Prices and Notify</span>
+    </label>
+
     <div id="tables"></div>
-  </div>
 
-  <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-    
-    async function fetchData() {
-      const apiKey = "YOUR_API_KEY_HERE";
-      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-      const json = await res.json();
-      categorizeItems(json.products);
-    }
-    
-    function categorizeItems(products) {
-      let cat1=[], cat2=[], cat3=[];
-    
-      itemsToTrack.forEach(id => {
-        const data = products[id];
-        if (!data) return;
-    
-        // REMEMBER: API is inverted
-        const buyOrders = data.sell_summary; // players sell => buy instantly
-        const sellOrders = data.buy_summary; // players buy => sell instantly
-        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-    
-        if (!buyOrders.length || !sellOrders.length) return;
-    
-        const activeBuy = buyOrders[0].pricePerUnit;
-        const activeSell = sellOrders[0].pricePerUnit;
-    
-        // === Category 1 ===
-        if (activeBuy * 1.25 <= activeSell) {
-          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
-          const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-          return;
+    <script>
+      const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+      
+      let recordEnabled = false;
+      let lastCat2Items = new Set();
+      let priceHistory = {};  // { ITEM_ID: [ { time, price, volume } ] }
+      
+      document.getElementById("tables").insertAdjacentHTML('beforebegin', `
+        <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+          <input type="checkbox" id="recordToggle" />
+          <span>Record Prices and Notify</span>
+        </label>
+      `);
+      
+      document.getElementById("recordToggle").addEventListener("change", (e) => {
+        recordEnabled = e.target.checked;
+        if (recordEnabled) {
+          Notification.requestPermission();
+        }
+      });
+      
+      async function fetchData() {
+        const apiKey = "YOUR_API_KEY_HERE";
+        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+        const json = await res.json();
+        categorizeItems(json.products);
+      }
+      
+      function notify(text) {
+        if (Notification.permission === "granted") {
+          new Notification(text);
         }
-    
-        // === Category 2 ===
-        let foundCat2 = false;
-        for (let i = 1; i < buyOrders.length; i++) {
-          const price1 = buyOrders[i - 1].pricePerUnit;
-          const price2 = buyOrders[i].pricePerUnit;
-          const drop = (price2 - price1) / price2;
-    
-          if (drop <= -0.2) {
-            let volume = 0;
-            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-    
-            if (volume <= 10 * instaSellsHour) {
-              const percentChange = ((price2 - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-              foundCat2 = true;
-              break;
+      }
+      
+      function categorizeItems(products) {
+        let cat1 = [], cat2 = [], cat3 = [];
+        let newCat2 = new Set();
+        const timestamp = Date.now();
+      
+        itemsToTrack.forEach(id => {
+          const data = products[id];
+          if (!data) return;
+      
+          const buyOrders = [...data.sell_summary].reverse();
+          const sellOrders = data.buy_summary;
+          const instaSellsHour = data.quick_status.buyMovingWeek / 168;
+      
+          if (!buyOrders.length || !sellOrders.length) return;
+      
+          const activeBuy = buyOrders[0].pricePerUnit;
+          const activeSell = sellOrders[0].pricePerUnit;
+      
+          // === Category 1 ===
+          if (activeBuy * 1.25 <= activeSell) {
+            const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - activeBuy;
+            cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+            if (recordEnabled && lastCat2Items.has(id)) {
+              notify(`${id} price dropped!`);
             }
+            return;
           }
-        }
-        if (foundCat2) return;
-    
-        // === Category 3 ===
-        let maxDrop = -Infinity;
-        let bestIndex = 1;
-        for (let i = 1; i < buyOrders.length; i++) {
-          const prev = buyOrders[i - 1].pricePerUnit;
-          const curr = buyOrders[i].pricePerUnit;
-          const drop = (curr - prev) / curr;
-          if (drop < maxDrop) continue;
-          maxDrop = drop;
-          bestIndex = i;
-        }
-        const bestOrder = buyOrders[bestIndex];
-        let volume = 0;
-        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
-        const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-      });
-    
-      cat2.sort((a,b) => b[4] - a[4]);
-    
-      document.getElementById('tables').innerHTML = [
-        ['Under Price Drop', cat1],
-        ['About To Price Drop', cat2],
-        ['Not Price Dropping', cat3]
-      ].map(cat => `
-        <h2>${cat[0]}</h2>
-        <table>
-          <tr>
-            <th>Item</th>
-            <th>% Price Change</th>
-            <th>Item Volume</th>
-            <th>Insta-sells/hour</th>
-            <th>Coin Gap</th>
-          </tr>
-          ${cat[1].map(row => `
+      
+          // === Category 2 ===
+          for (let i = 1; i < buyOrders.length; i++) {
+            const price1 = buyOrders[i - 1].pricePerUnit;
+            const price2 = buyOrders[i].pricePerUnit;
+            const drop = (price2 - price1) / price2;
+      
+            if (drop <= -0.2) {
+              let volume = 0;
+              for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
+      
+              const totalCoinValue = price2 * volume;
+              if (true) { // we skip volume â‰¤ 100m check for now, or put: (totalCoinValue <= 1e8)
+                const percentChange = ((price2 - activeSell) / activeSell) * 100;
+                const coinsGap = activeSell - price2;
+                cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+      
+                newCat2.add(id);
+      
+                if (recordEnabled && !lastCat2Items.has(id) && totalCoinValue <= 1e8) {
+                  notify(`${id} is about to drop in price`);
+                }
+      
+                if (recordEnabled) {
+                  if (!priceHistory[id]) priceHistory[id] = [];
+                  priceHistory[id].push({ time: timestamp, price: price2, volume });
+                }
+      
+                return;
+              }
+            }
+          }
+      
+          // === Category 3 ===
+          let maxDrop = -Infinity;
+          let bestIndex = 1;
+          for (let i = 1; i < buyOrders.length; i++) {
+            const prev = buyOrders[i - 1].pricePerUnit;
+            const curr = buyOrders[i].pricePerUnit;
+            const drop = (curr - prev) / curr;
+            if (drop > maxDrop) {
+              maxDrop = drop;
+              bestIndex = i;
+            }
+          }
+          const bestOrder = buyOrders[bestIndex];
+          let volume = 0;
+          for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+          const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+          const coinsGap = activeSell - bestOrder.pricePerUnit;
+          cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+        });
+      
+        lastCat2Items = newCat2;
+      
+        cat2.sort((a, b) => b[4] - a[4]);
+      
+        document.getElementById('tables').innerHTML = [
+          ['Under Price Drop', cat1],
+          ['About To Price Drop', cat2],
+          ['Not Price Dropping', cat3]
+        ].map(cat => `
+          <h2>${cat[0]}</h2>
+          <table>
             <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
-              <td>${row[1]}%</td>
-              <td>${row[2]}</td>
-              <td>${row[3]}</td>
-              <td>${row[4]}</td>
+              <th>Item</th>
+              <th>% Price Change</th>
+              <th>Item Volume</th>
+              <th>Insta-sells/hour</th>
+              <th>Coin Gap</th>
             </tr>
-          `).join('')}
-        </table>
-      `).join('');
-    }
-    
-    fetchData();
-    setInterval(fetchData,30000);
-    const currentUser = localStorage.getItem("currentUser");
-const authStatus = document.getElementById("authStatus");
-
-if (currentUser) {
-  authStatus.innerHTML = `
-    Logged in as <strong>${currentUser}</strong>
-    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-  `;
-  document.getElementById("logoutLink").onclick = () => {
-    localStorage.removeItem("currentUser");
-    location.reload();
-  };
-}
-
-    </script>    
+            ${cat[1].map(row => `
+              <tr>
+                <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+                <td>${row[1]}%</td>
+                <td>${row[2]}</td>
+                <td>${row[3]}</td>
+                <td>${row[4]}</td>
+              </tr>
+            `).join('')}
+          </table>
+        `).join('');
+      }
+      
+      fetchData();
+      setInterval(fetchData, 10000);
+      </script>      
 </body>
 </html>

commit 8178981f3af3821e4ad40bb2a7cb48bb3d269d0a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 23:12:00 2025 +0100

    fix?

diff --git a/.DS_Store b/.DS_Store
index 4c6605d..6026582 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/saved-orders.html b/public/saved-orders.html
index b9e1949..26acd44 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -98,153 +98,72 @@
   </div>
 
   <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-    
-    let recordEnabled = false;
-    let lastCat2Items = new Set();
-    let priceHistory = {};  // { ITEM_ID: [ { time, price, volume } ] }
-    
-    document.getElementById("tables").insertAdjacentHTML('beforebegin', `
-      <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
-        <input type="checkbox" id="recordToggle" />
-        <span>Record Prices and Notify</span>
-      </label>
-    `);
-    
-    document.getElementById("recordToggle").addEventListener("change", (e) => {
-      recordEnabled = e.target.checked;
-      if (recordEnabled) {
-        Notification.requestPermission();
-      }
-    });
-    
-    async function fetchData() {
-      const apiKey = "YOUR_API_KEY_HERE";
-      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-      const json = await res.json();
-      categorizeItems(json.products);
-    }
-    
-    function notify(text) {
-      if (Notification.permission === "granted") {
-        new Notification(text);
-      }
+    const currentUser = localStorage.getItem("currentUser");
+    const content = document.getElementById("content");
+    const authStatus = document.getElementById("authStatus");
+
+    // Auth status UI
+    if (currentUser) {
+      authStatus.innerHTML = `
+        Logged in as <strong>${currentUser}</strong>
+        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+      `;
+      document.getElementById("logoutLink").onclick = () => {
+        localStorage.removeItem("currentUser");
+        location.reload();
+      };
     }
-    
-    function categorizeItems(products) {
-      let cat1 = [], cat2 = [], cat3 = [];
-      let newCat2 = new Set();
-      const timestamp = Date.now();
-    
-      itemsToTrack.forEach(id => {
-        const data = products[id];
-        if (!data) return;
-    
-        const buyOrders = [...data.sell_summary].reverse();
-        const sellOrders = data.buy_summary;
-        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-    
-        if (!buyOrders.length || !sellOrders.length) return;
-    
-        const activeBuy = buyOrders[0].pricePerUnit;
-        const activeSell = sellOrders[0].pricePerUnit;
-    
-        // === Category 1 ===
-        if (activeBuy * 1.25 <= activeSell) {
-          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
-          const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-          if (recordEnabled && lastCat2Items.has(id)) {
-            notify(`${id} price dropped!`);
-          }
-          return;
-        }
-    
-        // === Category 2 ===
-        for (let i = 1; i < buyOrders.length; i++) {
-          const price1 = buyOrders[i - 1].pricePerUnit;
-          const price2 = buyOrders[i].pricePerUnit;
-          const drop = (price2 - price1) / price2;
-    
-          if (drop <= -0.2) {
-            let volume = 0;
-            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-    
-            const totalCoinValue = price2 * volume;
-            if (true) { // we skip volume â‰¤ 100m check for now, or put: (totalCoinValue <= 1e8)
-              const percentChange = ((price2 - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-    
-              newCat2.add(id);
-    
-              if (recordEnabled && !lastCat2Items.has(id) && totalCoinValue <= 1e8) {
-                notify(`${id} is about to drop in price`);
-              }
-    
-              if (recordEnabled) {
-                if (!priceHistory[id]) priceHistory[id] = [];
-                priceHistory[id].push({ time: timestamp, price: price2, volume });
-              }
-    
-              return;
-            }
-          }
-        }
-    
-        // === Category 3 ===
-        let maxDrop = -Infinity;
-        let bestIndex = 1;
-        for (let i = 1; i < buyOrders.length; i++) {
-          const prev = buyOrders[i - 1].pricePerUnit;
-          const curr = buyOrders[i].pricePerUnit;
-          const drop = (curr - prev) / curr;
-          if (drop > maxDrop) {
-            maxDrop = drop;
-            bestIndex = i;
-          }
+
+    // Require login
+    if (!currentUser) {
+      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
+    } else {
+      const savedKey = `savedOrders_${currentUser}`;
+      let orders = JSON.parse(localStorage.getItem(savedKey) || "[]");
+
+      function renderOrders() {
+        content.innerHTML = `
+          <div class="center">
+            <input id="itemInput" placeholder="Item Type (e.g. HOT_STUFF)" />
+            <input id="priceInput" placeholder="Order Price (e.g. 5000000)" />
+            <button id="addBtn">+ Add Order</button>
+          </div>
+          <div id="ordersList" style="margin-top: 30px;"></div>
+        `;
+
+        const list = document.getElementById("ordersList");
+        if (orders.length === 0) {
+          list.innerHTML = '<p class="center">No saved orders yet.</p>';
+        } else {
+          list.innerHTML = orders.map((order, index) => `
+            <div class="order-row">
+              <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+              <button class="remove-btn" data-index="${index}">â€“</button>
+            </div>
+          `).join("");
         }
-        const bestOrder = buyOrders[bestIndex];
-        let volume = 0;
-        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
-        const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
-      });
-    
-      lastCat2Items = newCat2;
-    
-      cat2.sort((a, b) => b[4] - a[4]);
-    
-      document.getElementById('tables').innerHTML = [
-        ['Under Price Drop', cat1],
-        ['About To Price Drop', cat2],
-        ['Not Price Dropping', cat3]
-      ].map(cat => `
-        <h2>${cat[0]}</h2>
-        <table>
-          <tr>
-            <th>Item</th>
-            <th>% Price Change</th>
-            <th>Item Volume</th>
-            <th>Insta-sells/hour</th>
-            <th>Coin Gap</th>
-          </tr>
-          ${cat[1].map(row => `
-            <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
-              <td>${row[1]}%</td>
-              <td>${row[2]}</td>
-              <td>${row[3]}</td>
-              <td>${row[4]}</td>
-            </tr>
-          `).join('')}
-        </table>
-      `).join('');
+
+        document.querySelectorAll(".remove-btn").forEach(btn => {
+          btn.onclick = () => {
+            const i = parseInt(btn.dataset.index);
+            orders.splice(i, 1);
+            localStorage.setItem(savedKey, JSON.stringify(orders));
+            renderOrders();
+          };
+        });
+
+        document.getElementById("addBtn").onclick = () => {
+          const item = document.getElementById("itemInput").value.trim();
+          const price = document.getElementById("priceInput").value.trim();
+          if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
+          orders.push({ item, price });
+          localStorage.setItem(savedKey, JSON.stringify(orders));
+          renderOrders();
+        };
+      }
+
+      renderOrders();
     }
-    
-    fetchData();
-    setInterval(fetchData, 10000);
-    </script>    
+  </script>
 </body>
 </html>

commit 40dfcff585990c4d3053f4bc31882f749fe01750
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Sat Apr 12 21:51:06 2025 +0100

    notifications!

diff --git a/.DS_Store b/.DS_Store
index 50d0ae5..4c6605d 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/saved-orders.html b/public/saved-orders.html
index 2fd6b79..b9e1949 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -98,75 +98,153 @@
   </div>
 
   <script>
-    const currentUser = localStorage.getItem("currentUser");
-    const content = document.getElementById("content");
-    const authStatus = document.getElementById("authStatus");
-
-    // Auth status UI
-    if (currentUser) {
-      authStatus.innerHTML = `
-        Logged in as <strong>${currentUser}</strong>
-        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
-      `;
-      document.getElementById("logoutLink").onclick = () => {
-        localStorage.removeItem("currentUser");
-        location.reload();
-      };
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+    
+    let recordEnabled = false;
+    let lastCat2Items = new Set();
+    let priceHistory = {};  // { ITEM_ID: [ { time, price, volume } ] }
+    
+    document.getElementById("tables").insertAdjacentHTML('beforebegin', `
+      <label style="display:flex;align-items:center;margin-bottom:10px;gap:10px;">
+        <input type="checkbox" id="recordToggle" />
+        <span>Record Prices and Notify</span>
+      </label>
+    `);
+    
+    document.getElementById("recordToggle").addEventListener("change", (e) => {
+      recordEnabled = e.target.checked;
+      if (recordEnabled) {
+        Notification.requestPermission();
+      }
+    });
+    
+    async function fetchData() {
+      const apiKey = "YOUR_API_KEY_HERE";
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      categorizeItems(json.products);
     }
-
-    // Require login
-    if (!currentUser) {
-      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
-    } else {
-      const savedKey = `savedOrders_${currentUser}`;
-      let orders = JSON.parse(localStorage.getItem(savedKey) || "[]");
-
-      function renderOrders() {
-        content.innerHTML = `
-          <div class="center">
-            <input id="itemInput" placeholder="Item Type (e.g. HOT_STUFF)" />
-            <input id="priceInput" placeholder="Order Price (e.g. 5000000)" />
-            <button id="addBtn">+ Add Order</button>
-          </div>
-          <div id="ordersList" style="margin-top: 30px;"></div>
-        `;
-
-        const list = document.getElementById("ordersList");
-        if (orders.length === 0) {
-          list.innerHTML = '<p class="center">No saved orders yet.</p>';
-        } else {
-          list.innerHTML = orders.map((order, index) => `
-            <div class="order-row">
-              <a href="index.html?item=${order.item}&track=${order.price}">
-  ${order.item} @ ${parseFloat(order.price).toLocaleString()} coins
-</a>
-
-              <button class="remove-btn" data-index="${index}">â€“</button>
-            </div>
-          `).join("");
-        }
-
-        document.querySelectorAll(".remove-btn").forEach(btn => {
-          btn.onclick = () => {
-            const i = parseInt(btn.dataset.index);
-            orders.splice(i, 1);
-            localStorage.setItem(savedKey, JSON.stringify(orders));
-            renderOrders();
-          };
-        });
-
-        document.getElementById("addBtn").onclick = () => {
-          const item = document.getElementById("itemInput").value.trim();
-          const price = document.getElementById("priceInput").value.trim();
-          if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
-          orders.push({ item, price });
-          localStorage.setItem(savedKey, JSON.stringify(orders));
-          renderOrders();
-        };
+    
+    function notify(text) {
+      if (Notification.permission === "granted") {
+        new Notification(text);
       }
-
-      renderOrders();
     }
-  </script>
+    
+    function categorizeItems(products) {
+      let cat1 = [], cat2 = [], cat3 = [];
+      let newCat2 = new Set();
+      const timestamp = Date.now();
+    
+      itemsToTrack.forEach(id => {
+        const data = products[id];
+        if (!data) return;
+    
+        const buyOrders = [...data.sell_summary].reverse();
+        const sellOrders = data.buy_summary;
+        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
+    
+        if (!buyOrders.length || !sellOrders.length) return;
+    
+        const activeBuy = buyOrders[0].pricePerUnit;
+        const activeSell = sellOrders[0].pricePerUnit;
+    
+        // === Category 1 ===
+        if (activeBuy * 1.25 <= activeSell) {
+          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
+          const coinsGap = activeSell - activeBuy;
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+          if (recordEnabled && lastCat2Items.has(id)) {
+            notify(`${id} price dropped!`);
+          }
+          return;
+        }
+    
+        // === Category 2 ===
+        for (let i = 1; i < buyOrders.length; i++) {
+          const price1 = buyOrders[i - 1].pricePerUnit;
+          const price2 = buyOrders[i].pricePerUnit;
+          const drop = (price2 - price1) / price2;
+    
+          if (drop <= -0.2) {
+            let volume = 0;
+            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
+    
+            const totalCoinValue = price2 * volume;
+            if (true) { // we skip volume â‰¤ 100m check for now, or put: (totalCoinValue <= 1e8)
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+    
+              newCat2.add(id);
+    
+              if (recordEnabled && !lastCat2Items.has(id) && totalCoinValue <= 1e8) {
+                notify(`${id} is about to drop in price`);
+              }
+    
+              if (recordEnabled) {
+                if (!priceHistory[id]) priceHistory[id] = [];
+                priceHistory[id].push({ time: timestamp, price: price2, volume });
+              }
+    
+              return;
+            }
+          }
+        }
+    
+        // === Category 3 ===
+        let maxDrop = -Infinity;
+        let bestIndex = 1;
+        for (let i = 1; i < buyOrders.length; i++) {
+          const prev = buyOrders[i - 1].pricePerUnit;
+          const curr = buyOrders[i].pricePerUnit;
+          const drop = (curr - prev) / curr;
+          if (drop > maxDrop) {
+            maxDrop = drop;
+            bestIndex = i;
+          }
+        }
+        const bestOrder = buyOrders[bestIndex];
+        let volume = 0;
+        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+        const coinsGap = activeSell - bestOrder.pricePerUnit;
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (coinsGap/1e6).toFixed(2) + 'M']);
+      });
+    
+      lastCat2Items = newCat2;
+    
+      cat2.sort((a, b) => b[4] - a[4]);
+    
+      document.getElementById('tables').innerHTML = [
+        ['Under Price Drop', cat1],
+        ['About To Price Drop', cat2],
+        ['Not Price Dropping', cat3]
+      ].map(cat => `
+        <h2>${cat[0]}</h2>
+        <table>
+          <tr>
+            <th>Item</th>
+            <th>% Price Change</th>
+            <th>Item Volume</th>
+            <th>Insta-sells/hour</th>
+            <th>Coin Gap</th>
+          </tr>
+          ${cat[1].map(row => `
+            <tr>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank">${row[0]}</a></td>
+              <td>${row[1]}%</td>
+              <td>${row[2]}</td>
+              <td>${row[3]}</td>
+              <td>${row[4]}</td>
+            </tr>
+          `).join('')}
+        </table>
+      `).join('');
+    }
+    
+    fetchData();
+    setInterval(fetchData, 10000);
+    </script>    
 </body>
 </html>

commit 5b7221e651458cc1cde8182a41fc8ae932399714
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 20:11:41 2025 +0100

    Update saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
index 26acd44..2fd6b79 100644
--- a/public/saved-orders.html
+++ b/public/saved-orders.html
@@ -137,7 +137,10 @@
         } else {
           list.innerHTML = orders.map((order, index) => `
             <div class="order-row">
-              <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+              <a href="index.html?item=${order.item}&track=${order.price}">
+  ${order.item} @ ${parseFloat(order.price).toLocaleString()} coins
+</a>
+
               <button class="remove-btn" data-index="${index}">â€“</button>
             </div>
           `).join("");

commit b8b718e8209eab7c3fa9286779d6a48c98c987d0
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 20:07:40 2025 +0100

    Update index.html

diff --git a/public/index.html b/public/index.html
index 0c22034..0c62906 100644
--- a/public/index.html
+++ b/public/index.html
@@ -48,6 +48,16 @@
       border-radius: 6px;
       border: none;
     }
+    .tables {
+  display: flex;
+  gap: 20px;
+  flex-wrap: wrap;
+}
+.tables > div {
+  flex: 1;
+  min-width: 400px;
+}
+
     table {
       width: 100%;
       border-collapse: collapse;

commit d6bb32ea877b681936624d3792fe8e4ad1253b0e
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 19:55:53 2025 +0100

    Create saved-orders.html

diff --git a/public/saved-orders.html b/public/saved-orders.html
new file mode 100644
index 0000000..26acd44
--- /dev/null
+++ b/public/saved-orders.html
@@ -0,0 +1,169 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>Saved Orders</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <style>
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      color: #fff;
+    }
+    .container {
+      max-width: 1200px;
+      margin: 40px auto;
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 30px;
+      border-radius: 16px;
+      position: relative;
+    }
+    .tabs {
+      display: flex;
+      gap: 10px;
+      position: absolute;
+      top: -40px;
+      left: 20px;
+    }
+    .tab {
+      padding: 8px 16px;
+      background-color: rgba(0, 0, 0, 0.6);
+      color: #fff;
+      text-decoration: none;
+      border-radius: 8px 8px 0 0;
+    }
+    .active-tab {
+      background-color: rgba(255,255,255,0.1);
+      border-bottom: 2px solid #00bfff;
+    }
+    input {
+      padding: 10px;
+      margin: 5px;
+      font-size: 16px;
+      border-radius: 6px;
+      border: none;
+      width: 200px;
+    }
+    button {
+      padding: 10px 14px;
+      font-size: 14px;
+      border-radius: 6px;
+      border: none;
+      cursor: pointer;
+      background-color: #00bfff;
+      color: #fff;
+    }
+    .order-row {
+      display: flex;
+      align-items: center;
+      justify-content: space-between;
+      background-color: rgba(255, 255, 255, 0.05);
+      margin: 8px 0;
+      padding: 10px 16px;
+      border-radius: 8px;
+    }
+    .order-row a {
+      color: #00bfff;
+      text-decoration: underline;
+    }
+    .remove-btn {
+      background-color: crimson;
+      margin-left: 12px;
+    }
+    .center {
+      text-align: center;
+      margin-top: 30px;
+    }
+  </style>
+</head>
+<body>
+  <div class="container">
+    <div class="tabs">
+      <a class="tab" href="index.html">Orders</a>
+      <a class="tab" href="volume-drain.html">Buy Order Volume Drain</a>
+      <a class="tab active-tab" href="saved-orders.html">Saved Orders</a>
+    </div>
+
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
+    </div>
+
+    <h1>Saved Orders</h1>
+
+    <div id="content"></div>
+  </div>
+
+  <script>
+    const currentUser = localStorage.getItem("currentUser");
+    const content = document.getElementById("content");
+    const authStatus = document.getElementById("authStatus");
+
+    // Auth status UI
+    if (currentUser) {
+      authStatus.innerHTML = `
+        Logged in as <strong>${currentUser}</strong>
+        <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+      `;
+      document.getElementById("logoutLink").onclick = () => {
+        localStorage.removeItem("currentUser");
+        location.reload();
+      };
+    }
+
+    // Require login
+    if (!currentUser) {
+      content.innerHTML = `<p class="center">Please <a href="auth.html" style="color:#00bfff;">log in</a> to view your saved orders.</p>`;
+    } else {
+      const savedKey = `savedOrders_${currentUser}`;
+      let orders = JSON.parse(localStorage.getItem(savedKey) || "[]");
+
+      function renderOrders() {
+        content.innerHTML = `
+          <div class="center">
+            <input id="itemInput" placeholder="Item Type (e.g. HOT_STUFF)" />
+            <input id="priceInput" placeholder="Order Price (e.g. 5000000)" />
+            <button id="addBtn">+ Add Order</button>
+          </div>
+          <div id="ordersList" style="margin-top: 30px;"></div>
+        `;
+
+        const list = document.getElementById("ordersList");
+        if (orders.length === 0) {
+          list.innerHTML = '<p class="center">No saved orders yet.</p>';
+        } else {
+          list.innerHTML = orders.map((order, index) => `
+            <div class="order-row">
+              <a href="index.html?item=${order.item}&track=${order.price}" target="_blank">${order.item} @ ${parseFloat(order.price).toLocaleString()} coins</a>
+              <button class="remove-btn" data-index="${index}">â€“</button>
+            </div>
+          `).join("");
+        }
+
+        document.querySelectorAll(".remove-btn").forEach(btn => {
+          btn.onclick = () => {
+            const i = parseInt(btn.dataset.index);
+            orders.splice(i, 1);
+            localStorage.setItem(savedKey, JSON.stringify(orders));
+            renderOrders();
+          };
+        });
+
+        document.getElementById("addBtn").onclick = () => {
+          const item = document.getElementById("itemInput").value.trim();
+          const price = document.getElementById("priceInput").value.trim();
+          if (!item || !price || isNaN(price)) return alert("Enter a valid item and price.");
+          orders.push({ item, price });
+          localStorage.setItem(savedKey, JSON.stringify(orders));
+          renderOrders();
+        };
+      }
+
+      renderOrders();
+    }
+  </script>
+</body>
+</html>

commit fbc6b924ca3515444f7f0df2d0da2530b774f707
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 19:48:04 2025 +0100

    auth button

diff --git a/public/index.html b/public/index.html
index 8c0ebe2..0c22034 100644
--- a/public/index.html
+++ b/public/index.html
@@ -3,7 +3,7 @@
 <head>
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <title>SkyBlock Bazaar Tracker - Orders</title>
+  <title>SkyBlock Bazaar Tracker</title>
   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
@@ -44,7 +44,7 @@
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin: 10px 0;
+      margin: 10px 0 10px;
       border-radius: 6px;
       border: none;
     }
@@ -62,14 +62,20 @@
     th {
       background-color: rgba(255, 255, 255, 0.1);
     }
-    .highlight-yellow { background-color: rgba(255,255,0,0.2); }
-    .highlight-red { background-color: rgba(255,0,0,0.4); }
-    .highlight-blue { background-color: rgba(0,191,255,0.3); }
+    .highlight-yellow {
+      background-color: rgba(255, 255, 0, 0.2);
+    }
+    .highlight-red {
+      background-color: rgba(255, 0, 0, 0.4);
+    }
+    .highlight-blue {
+      background-color: rgba(0, 191, 255, 0.3);
+    }
     .order-info {
       margin: 20px auto;
       max-width: 600px;
       text-align: center;
-      background-color: rgba(255,255,255,0.05);
+      background-color: rgba(255, 255, 255, 0.05);
       padding: 20px;
       border-radius: 10px;
     }
@@ -82,25 +88,28 @@
       border-radius: 12px;
     }
     .dropdown {
-      background-color: rgba(0,0,0,0.85);
+      background-color: rgba(0, 0, 0, 0.85);
       border-radius: 8px;
       padding: 10px;
       max-height: 300px;
       overflow-y: auto;
       display: none;
-      position: absolute;
-      z-index: 1000;
-      width: calc(100% - 60px);
     }
     .dropdown-item {
       display: flex;
       align-items: center;
       justify-content: space-between;
       padding: 8px 12px;
-      border-bottom: 1px solid rgba(255,255,255,0.1);
+      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
       cursor: pointer;
     }
-    .dropdown-item:hover { background-color: rgba(255,255,255,0.1); }
+    .dropdown-item:hover {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    .dropdown-label {
+      display: flex;
+      align-items: center;
+    }
     .dropdown-price {
       background-color: goldenrod;
       padding: 4px 8px;
@@ -108,8 +117,6 @@
       font-weight: bold;
       color: black;
     }
-    .tables { display: flex; gap: 20px; }
-    .tables > div { flex: 1; }
   </style>
 </head>
 <body>
@@ -117,6 +124,11 @@
     <div class="tabs">
       <a class="tab active-tab" href="index.html">Orders</a>
       <a class="tab" href="volume-drain.html">Buy Order Volume Drain</a>
+      <a class="tab" href="saved-orders.html">Saved Orders</a>
+    </div>
+
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
     </div>
 
     <h1>SkyBlock Bazaar Tracker</h1>
@@ -320,6 +332,20 @@
       setInterval(() => {
         if (currentItemId) loadData(currentItemId);
       }, 3000);
+      const currentUser = localStorage.getItem("currentUser");
+const authStatus = document.getElementById("authStatus");
+
+if (currentUser) {
+  authStatus.innerHTML = `
+    Logged in as <strong>${currentUser}</strong>
+    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+  `;
+  document.getElementById("logoutLink").onclick = () => {
+    localStorage.removeItem("currentUser");
+    location.reload();
+  };
+}
+
       </script>      
   </div>
 </body>
diff --git a/public/volume-drain.html b/public/volume-drain.html
index bcf2aac..57d9ff6 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -60,9 +60,15 @@
     <div class="tabs">
       <a class="tab" href="index.html">Orders</a>
       <a class="tab active-tab" href="volume-drain.html">Buy Order Volume Drain</a>
+      <a class="tab" href="saved-orders.html">Saved Orders</a>
+    </div>
+
+    <div id="authStatus" style="position: absolute; top: 10px; right: 20px; font-size: 14px;">
+      <a href="auth.html" id="loginLink" style="color: #00bfff; text-decoration: underline;">Log In / Sign Up</a>
     </div>
 
     <h1>Buy Order Volume Drain</h1>
+
     <div id="tables"></div>
   </div>
 
@@ -173,6 +179,20 @@
     
     fetchData();
     setInterval(fetchData,30000);
+    const currentUser = localStorage.getItem("currentUser");
+const authStatus = document.getElementById("authStatus");
+
+if (currentUser) {
+  authStatus.innerHTML = `
+    Logged in as <strong>${currentUser}</strong>
+    <a href="#" id="logoutLink" style="color:#00bfff; margin-left:10px; text-decoration:underline;">Log Out</a>
+  `;
+  document.getElementById("logoutLink").onclick = () => {
+    localStorage.removeItem("currentUser");
+    location.reload();
+  };
+}
+
     </script>    
 </body>
 </html>

commit f084338f43351fa2ba8e38cdda6055af56c5802f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 19:39:41 2025 +0100

    auth

diff --git a/.DS_Store b/.DS_Store
index 7061c71..50d0ae5 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/auth.html b/public/auth.html
new file mode 100644
index 0000000..9a3d4a7
--- /dev/null
+++ b/public/auth.html
@@ -0,0 +1,131 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <title>Login / Sign Up</title>
+  <style>
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      color: #fff;
+      display: flex;
+      align-items: center;
+      justify-content: center;
+      height: 100vh;
+    }
+    .auth-container {
+      background-color: rgba(0, 0, 0, 0.8);
+      padding: 30px 40px;
+      border-radius: 12px;
+      width: 100%;
+      max-width: 400px;
+      text-align: center;
+    }
+    .tabs {
+      display: flex;
+      justify-content: center;
+      margin-bottom: 20px;
+    }
+    .tab {
+      padding: 10px 20px;
+      cursor: pointer;
+      background: rgba(255,255,255,0.1);
+      border-radius: 8px 8px 0 0;
+      margin: 0 5px;
+    }
+    .tab.active {
+      background: rgba(255,255,255,0.25);
+      border-bottom: 2px solid #00bfff;
+    }
+    input {
+      width: 100%;
+      padding: 10px;
+      margin: 10px 0;
+      border-radius: 6px;
+      border: none;
+      font-size: 16px;
+    }
+    button {
+      padding: 10px 20px;
+      background-color: #00bfff;
+      border: none;
+      border-radius: 6px;
+      font-size: 16px;
+      cursor: pointer;
+    }
+    .error {
+      color: red;
+      margin-top: 10px;
+      font-size: 14px;
+    }
+  </style>
+</head>
+<body>
+  <div class="auth-container">
+    <div class="tabs">
+      <div id="loginTab" class="tab active">Login</div>
+      <div id="signupTab" class="tab">Sign Up</div>
+    </div>
+
+    <div id="form">
+      <input id="username" type="text" placeholder="Username" />
+      <input id="password" type="password" placeholder="Password" />
+      <button id="submitBtn">Login</button>
+      <div class="error" id="errorMsg"></div>
+    </div>
+  </div>
+
+  <script>
+    let isLogin = true;
+    const loginTab = document.getElementById("loginTab");
+    const signupTab = document.getElementById("signupTab");
+    const submitBtn = document.getElementById("submitBtn");
+    const errorMsg = document.getElementById("errorMsg");
+
+    loginTab.onclick = () => switchMode(true);
+    signupTab.onclick = () => switchMode(false);
+
+    function switchMode(login) {
+      isLogin = login;
+      loginTab.classList.toggle("active", login);
+      signupTab.classList.toggle("active", !login);
+      submitBtn.textContent = login ? "Login" : "Sign Up";
+      errorMsg.textContent = "";
+    }
+
+    submitBtn.onclick = () => {
+      const username = document.getElementById("username").value.trim();
+      const password = document.getElementById("password").value.trim();
+
+      if (!username || !password) {
+        errorMsg.textContent = "Please fill in both fields.";
+        return;
+      }
+
+      const users = JSON.parse(localStorage.getItem("users") || "{}");
+
+      if (isLogin) {
+        if (users[username] && users[username] === password) {
+          localStorage.setItem("currentUser", username);
+          window.location.href = "index.html";
+        } else {
+          errorMsg.textContent = "Invalid username or password.";
+        }
+      } else {
+        if (users[username]) {
+          errorMsg.textContent = "Username already exists.";
+        } else {
+          users[username] = password;
+          localStorage.setItem("users", JSON.stringify(users));
+          localStorage.setItem("currentUser", username);
+          window.location.href = "index.html";
+        }
+      }
+    };
+  </script>
+</body>
+</html>

commit f99b8b297dc43e14980d4541948aabac42cb45bd
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 19:23:25 2025 +0100

    fix

diff --git a/public/index.html b/public/index.html
index d50115e..8c0ebe2 100644
--- a/public/index.html
+++ b/public/index.html
@@ -160,156 +160,167 @@
 
     <script>
       const itemInput = document.getElementById("itemInput");
-const trackInput = document.getElementById("trackInput");
-const buyBody = document.querySelector("#buyTable tbody");
-const sellBody = document.querySelector("#sellTable tbody");
-const buyFoot = document.querySelector("#buyTable tfoot tr");
-const sellFoot = document.querySelector("#sellTable tfoot tr");
-const instabuys = document.getElementById("instabuys");
-const instasells = document.getElementById("instasells");
-const orderInfo = document.getElementById("orderInfo");
-const itemDropdown = document.getElementById("itemDropdown");
-
-let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
-let allItems = [];
-
-async function getApiKey() {
-  return "YOUR_API_KEY_HERE";
-}
-
-async function fetchAllItems() {
-  const apiKey = await getApiKey();
-  const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-  const json = await res.json();
-  const products = json.products;
-  allItems = Object.keys(products).map(id => {
-    const quick = products[id].quick_status;
-    const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
-    return {
-      id,
-      name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-      price
-    };
-  });
-}
-
-itemInput.addEventListener("input", () => {
-  const query = itemInput.value.trim().toLowerCase();
-  itemDropdown.innerHTML = "";
-  if (!query) return (itemDropdown.style.display = "none");
-  const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
-  for (const item of filtered.slice(0, 50)) {
-    const div = document.createElement("div");
-    div.className = "dropdown-item";
-    div.innerHTML = `
-      <div class="dropdown-label">
-        ${item.name}
-      </div>
-      <div class="dropdown-price">${item.price} /bz</div>
-    `;
-    div.onclick = () => {
-      itemInput.value = item.id;
-      itemDropdown.style.display = "none";
-      currentItemId = item.id;
-      loadData(item.id);
-    };
-    itemDropdown.appendChild(div);
-  }
-  itemDropdown.style.display = "block";
-});
-
-trackInput.addEventListener("change", () => {
-  const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
-  highlightTrackedOrder(tracked);
-});
-
-async function loadData(itemId) {
-  const apiKey = await getApiKey();
-  try {
-    const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-    const json = await res.json();
-    const data = json.products[itemId];
-    if (!data) throw new Error("Item not found");
-    instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
-    instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
-    latestBuySummary = data.sell_summary;
-    latestSellSummary = data.buy_summary;
-    renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
-    renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
-    highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
-  } catch (err) {
-    alert("Failed to load data. Check the item ID and API key.");
-    console.error(err);
-  }
-}
-
-function renderTable(summary, tbody, tfootRow, hourlyVolume) {
-  tbody.innerHTML = "";
-  let totalAmount = 0, totalCoins = 0;
-  for (const row of summary) {
-    const total = row.amount * row.pricePerUnit;
-    totalAmount += row.amount;
-    totalCoins += total;
-    const tr = document.createElement("tr");
-    tr.innerHTML = `
-      <td>${row.orders}</td>
-      <td>${row.amount}</td>
-      <td>${row.pricePerUnit.toLocaleString()} coins</td>
-      <td>${total.toLocaleString()} coins</td>
-    `;
-    if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
-    else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-    tbody.appendChild(tr);
-  }
-  tfootRow.innerHTML = `
-    <td>Total:</td>
-    <td>${totalAmount}</td>
-    <td></td>
-    <td>${totalCoins.toLocaleString()} coins</td>
-  `;
-}
-
-function highlightTrackedOrder(price) {
-  orderInfo.innerHTML = "";
-  if (!price || isNaN(price)) return;
-  const allRows = [...buyBody.children, ...sellBody.children];
-  allRows.forEach(row => row.classList.remove("highlight-blue"));
-  for (const [summary, body] of [
-    [latestBuySummary, buyBody],
-    [latestSellSummary, sellBody]
-  ]) {
-    let coinsBetween = 0, itemsBetween = 0, priority = 1;
-    for (const row of summary) {
-      const unit = parseFloat(row.pricePerUnit.toFixed(1));
-      if (Math.abs(unit - price) < 0.1) {
-        const index = summary.indexOf(row);
-        const tr = body.children[index];
-        if (tr) tr.classList.add("highlight-blue");
-        orderInfo.innerHTML = `
-          <div class="order-info">
-            <strong>Tracked Order Info</strong><br>
-            Priority position: ${priority}<br>
-            Items between: ${itemsBetween}<br>
-            Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
-            Items left in order: ${row.amount}
-          </div>
+      const trackInput = document.getElementById("trackInput");
+      const buyBody = document.querySelector("#buyTable tbody");
+      const sellBody = document.querySelector("#sellTable tbody");
+      const buyFoot = document.querySelector("#buyTable tfoot tr");
+      const sellFoot = document.querySelector("#sellTable tfoot tr");
+      const instabuys = document.getElementById("instabuys");
+      const instasells = document.getElementById("instasells");
+      const orderInfo = document.getElementById("orderInfo");
+      const itemDropdown = document.getElementById("itemDropdown");
+      
+      let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+      let allItems = [];
+      
+      async function getApiKey() {
+        return "YOUR_API_KEY_HERE";
+      }
+      
+      async function fetchAllItems() {
+        const apiKey = await getApiKey();
+        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+        const json = await res.json();
+        const products = json.products;
+        allItems = Object.keys(products).map(id => {
+          const quick = products[id].quick_status;
+          const price = quick.sellPrice > 1e6 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1e3 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
+          return {
+            id,
+            name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+            price
+          };
+        });
+      }
+      
+      itemInput.addEventListener("input", () => {
+        const query = itemInput.value.trim().toLowerCase();
+        itemDropdown.innerHTML = "";
+        if (!query) return (itemDropdown.style.display = "none");
+        const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+        for (const item of filtered.slice(0, 50)) {
+          const div = document.createElement("div");
+          div.className = "dropdown-item";
+          div.innerHTML = `
+            <div class="dropdown-label">
+              ${item.name}
+            </div>
+            <div class="dropdown-price">${item.price} /bz</div>
+          `;
+          div.onclick = () => {
+            itemInput.value = item.id;
+            itemDropdown.style.display = "none";
+            currentItemId = item.id;
+            loadData(item.id);
+          };
+          itemDropdown.appendChild(div);
+        }
+        itemDropdown.style.display = "block";
+      });
+      
+      trackInput.addEventListener("change", () => {
+        const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
+        highlightTrackedOrder(tracked);
+      });
+      
+      async function loadData(itemId) {
+        const apiKey = await getApiKey();
+        try {
+          const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+          const json = await res.json();
+          const data = json.products[itemId];
+          if (!data) throw new Error("Item not found");
+          instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / 168).toFixed(1) : "-";
+          instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / 168).toFixed(1) : "-";
+          latestBuySummary = data.sell_summary;
+          latestSellSummary = data.buy_summary;
+          renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+          renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+          highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
+        } catch (err) {
+          alert("Failed to load data. Check the item ID and API key.");
+          console.error(err);
+        }
+      }
+      
+      function renderTable(summary, tbody, tfootRow, hourlyVolume) {
+        tbody.innerHTML = "";
+        let totalAmount = 0, totalCoins = 0;
+        for (const row of summary) {
+          const total = row.amount * row.pricePerUnit;
+          totalAmount += row.amount;
+          totalCoins += total;
+          const tr = document.createElement("tr");
+          tr.innerHTML = `
+            <td>${row.orders}</td>
+            <td>${row.amount}</td>
+            <td>${row.pricePerUnit.toLocaleString()} coins</td>
+            <td>${total.toLocaleString()} coins</td>
+          `;
+          if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
+          else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+          tbody.appendChild(tr);
+        }
+        tfootRow.innerHTML = `
+          <td>Total:</td>
+          <td>${totalAmount}</td>
+          <td></td>
+          <td>${totalCoins.toLocaleString()} coins</td>
         `;
-        return;
       }
-      itemsBetween += row.amount;
-      coinsBetween += row.amount * row.pricePerUnit;
-      priority++;
-    }
-  }
-}
-
-fetchAllItems();
-setInterval(() => {
-  if (currentItemId) loadData(currentItemId);
-}, 3000);
-
-    </script>
-
+      
+      function highlightTrackedOrder(price) {
+        orderInfo.innerHTML = "";
+        if (!price || isNaN(price)) return;
+        const allRows = [...buyBody.children, ...sellBody.children];
+        allRows.forEach(row => row.classList.remove("highlight-blue"));
+        for (const [summary, body] of [
+          [latestBuySummary, buyBody],
+          [latestSellSummary, sellBody]
+        ]) {
+          let coinsBetween = 0, itemsBetween = 0, priority = 1;
+          for (const row of summary) {
+            const unit = parseFloat(row.pricePerUnit.toFixed(1));
+            if (Math.abs(unit - price) < 0.1) {
+              const index = summary.indexOf(row);
+              const tr = body.children[index];
+              if (tr) tr.classList.add("highlight-blue");
+              orderInfo.innerHTML = `
+                <div class="order-info">
+                  <strong>Tracked Order Info</strong><br>
+                  Priority position: ${priority}<br>
+                  Items between: ${itemsBetween}<br>
+                  Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
+                  Items left in order: ${row.amount}
+                </div>
+              `;
+              return;
+            }
+            itemsBetween += row.amount;
+            coinsBetween += row.amount * row.pricePerUnit;
+            priority++;
+          }
+        }
+      }
+      
+      // âœ… Handle ?item=ITEM_ID and ?track=PRICE
+      const urlParams = new URLSearchParams(window.location.search);
+      const preloadedItem = urlParams.get('item');
+      const preloadedTrack = urlParams.get('track');
+      if (preloadedItem) {
+        itemInput.value = preloadedItem;
+        currentItemId = preloadedItem;
+        loadData(preloadedItem);
+      }
+      if (preloadedTrack) {
+        trackInput.value = preloadedTrack;
+      }
+      
+      fetchAllItems();
+      setInterval(() => {
+        if (currentItemId) loadData(currentItemId);
+      }, 3000);
+      </script>      
   </div>
 </body>
 </html>
diff --git a/public/volume-drain.html b/public/volume-drain.html
index 768f3e6..bcf2aac 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -156,7 +156,7 @@
             <th>% Price Change</th>
             <th>Item Volume</th>
             <th>Insta-sells/hour</th>
-            <th>Coins Gap</th>
+            <th>Coin Gap</th>
           </tr>
           ${cat[1].map(row => `
             <tr>

commit efe4176eff60a15b0142ac5a35538fdd1cafda68
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:39:07 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index bd74157..768f3e6 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -67,7 +67,7 @@
   </div>
 
   <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","PERFECT_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
     
     async function fetchData() {
       const apiKey = "YOUR_API_KEY_HERE";

commit b549da2ff591058424fb5c014296f185bdf24935
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:32:18 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 35bc76c..bd74157 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -53,11 +53,6 @@
     th {
       background-color: rgba(255,255,255,0.1);
     }
-    .clickable-item {
-      text-decoration: underline;
-      cursor: pointer;
-      color: #00bfff;
-    }
   </style>
 </head>
 <body>
@@ -71,127 +66,113 @@
     <div id="tables"></div>
   </div>
 
-  <!-- Popup -->
-  <div id="itemPopup" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%,-50%); background-color:rgba(0,0,0,0.95); color:white; padding:20px 30px; border-radius:12px; z-index:1000; text-align:center; max-width:90%; box-shadow:0 0 20px black;">
-    <div style="text-align:right; margin:-10px -10px 10px 0;">
-      <span id="popupClose" style="cursor:pointer; font-size:20px;">âœ–</span>
-    </div>
-    <div style="margin-bottom:10px;">Would you like to open:</div>
-    <div style="display:flex; gap:15px; justify-content:center;">
-      <button id="popupChart" style="padding:8px 16px; font-size:15px; cursor:pointer;">ðŸ“ˆ Chart</button>
-      <button id="popupOrders" style="padding:8px 16px; font-size:15px; cursor:pointer;">ðŸ“‹ Orders</button>
-    </div>
-  </div>
-
   <script>
-const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-
-async function fetchData() {
-  const apiKey = "YOUR_API_KEY_HERE";
-  const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-  const json = await res.json();
-  categorizeItems(json.products);
-}
-
-function formatM(coins) {
-  return (coins / 1e6).toFixed(2) + "M";
-}
-
-function categorizeItems(products) {
-  let cat1=[], cat2=[], cat3=[];
-
-  itemsToTrack.forEach(id => {
-    const data = products[id];
-    if (!data) return;
-
-    const buyOrders = data.sell_summary;  // sell_summary = buy orders
-    const sellOrders = data.buy_summary;  // buy_summary = sell orders
-    const instaSellsHour = data.quick_status.sellMovingWeek / 168;
-    if (!buyOrders.length || !sellOrders.length) return;
-
-    const activeBuy = buyOrders[0].pricePerUnit;
-    const activeSell = sellOrders[0].pricePerUnit;
-
-    if (activeBuy * 1.25 <= activeSell) {
-      const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
-      const coinGap = activeSell - activeBuy;
-      cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), formatM(coinGap)]);
-    } else {
-      let foundCat2 = false;
-      for (let i = 1; i < buyOrders.length; i++) {
-        const priceDrop = (buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit) / buyOrders[i].pricePerUnit;
-        const volume = buyOrders.slice(0, i).reduce((sum, o) => sum + o.amount, 0);
-        if (priceDrop <= -0.2) {
-          const coinGap = activeSell - buyOrders[i].pricePerUnit;
-          const percentChange = ((buyOrders[i].pricePerUnit - activeSell) / activeSell) * 100;
-          cat2.push([id, percentChange.toFixed(1), volume, instaSellsHour.toFixed(1), formatM(coinGap)]);
-          foundCat2 = true;
-          break;
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+    
+    async function fetchData() {
+      const apiKey = "YOUR_API_KEY_HERE";
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      categorizeItems(json.products);
+    }
+    
+    function categorizeItems(products) {
+      let cat1=[], cat2=[], cat3=[];
+    
+      itemsToTrack.forEach(id => {
+        const data = products[id];
+        if (!data) return;
+    
+        // REMEMBER: API is inverted
+        const buyOrders = data.sell_summary; // players sell => buy instantly
+        const sellOrders = data.buy_summary; // players buy => sell instantly
+        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
+    
+        if (!buyOrders.length || !sellOrders.length) return;
+    
+        const activeBuy = buyOrders[0].pricePerUnit;
+        const activeSell = sellOrders[0].pricePerUnit;
+    
+        // === Category 1 ===
+        if (activeBuy * 1.25 <= activeSell) {
+          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
+          const coinsGap = activeSell - activeBuy;
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+          return;
         }
-      }
-
-      if (!foundCat2) {
-        let maxDrop = 0;
-        let maxDropIndex = 1;
+    
+        // === Category 2 ===
+        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
-          const drop = (buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit) / buyOrders[i].pricePerUnit;
-          if (drop < maxDrop) {
-            maxDrop = drop;
-            maxDropIndex = i;
+          const price1 = buyOrders[i - 1].pricePerUnit;
+          const price2 = buyOrders[i].pricePerUnit;
+          const drop = (price2 - price1) / price2;
+    
+          if (drop <= -0.2) {
+            let volume = 0;
+            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
+    
+            if (volume <= 10 * instaSellsHour) {
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+              foundCat2 = true;
+              break;
+            }
           }
         }
-        const volume = buyOrders.slice(0, maxDropIndex).reduce((sum, o) => sum + o.amount, 0);
-        const percentChange = ((buyOrders[maxDropIndex].pricePerUnit - activeSell) / activeSell) * 100;
-        const coinGap = activeSell - buyOrders[maxDropIndex].pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume, instaSellsHour.toFixed(1), formatM(coinGap)]);
-      }
+        if (foundCat2) return;
+    
+        // === Category 3 ===
+        let maxDrop = -Infinity;
+        let bestIndex = 1;
+        for (let i = 1; i < buyOrders.length; i++) {
+          const prev = buyOrders[i - 1].pricePerUnit;
+          const curr = buyOrders[i].pricePerUnit;
+          const drop = (curr - prev) / curr;
+          if (drop < maxDrop) continue;
+          maxDrop = drop;
+          bestIndex = i;
+        }
+        const bestOrder = buyOrders[bestIndex];
+        let volume = 0;
+        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+        const coinsGap = activeSell - bestOrder.pricePerUnit;
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
+      });
+    
+      cat2.sort((a,b) => b[4] - a[4]);
+    
+      document.getElementById('tables').innerHTML = [
+        ['Under Price Drop', cat1],
+        ['About To Price Drop', cat2],
+        ['Not Price Dropping', cat3]
+      ].map(cat => `
+        <h2>${cat[0]}</h2>
+        <table>
+          <tr>
+            <th>Item</th>
+            <th>% Price Change</th>
+            <th>Item Volume</th>
+            <th>Insta-sells/hour</th>
+            <th>Coins Gap</th>
+          </tr>
+          ${cat[1].map(row => `
+            <tr>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
+              <td>${row[1]}%</td>
+              <td>${row[2]}</td>
+              <td>${row[3]}</td>
+              <td>${row[4]}</td>
+            </tr>
+          `).join('')}
+        </table>
+      `).join('');
     }
-  });
-
-  document.getElementById('tables').innerHTML = [
-    ['Under Price Drop', cat1],
-    ['About To Price Drop', cat2],
-    ['Not Price Dropping', cat3]
-  ].map(cat => `
-    <h2>${cat[0]}</h2>
-    <table>
-      <tr><th>Item</th><th>% Price Change</th><th>Item Volume</th><th>Insta-sells/hour</th><th>Coins Gap</th></tr>
-      ${cat[1].map(row => `
-        <tr>
-          <td><span class="clickable-item" data-id="${row[0]}">${row[0]}</span></td>
-          <td>${row[1]}%</td>
-          <td>${row[2]}</td>
-          <td>${row[3]}</td>
-          <td>${row[4]}</td>
-        </tr>`).join('')}
-    </table>
-  `).join('');
-}
-
-fetchData();
-setInterval(fetchData, 30000);
-
-// Popup logic
-let currentPopupItem = "";
-document.addEventListener("click", (e) => {
-  const popup = document.getElementById("itemPopup");
-  if (e.target.matches(".clickable-item")) {
-    currentPopupItem = e.target.dataset.id;
-    popup.style.display = "block";
-  } else if (e.target.id === "popupClose") {
-    popup.style.display = "none";
-  } else if (e.target.id === "popupChart") {
-    if (currentPopupItem)
-      window.open(`https://skyblock.finance/items/${currentPopupItem}/chart`, '_blank');
-    popup.style.display = "none";
-  } else if (e.target.id === "popupOrders") {
-    if (currentPopupItem)
-      window.open(`index.html?item=${currentPopupItem}`, '_blank');
-    popup.style.display = "none";
-  } else if (!popup.contains(e.target)) {
-    popup.style.display = "none";
-  }
-});
-  </script>
+    
+    fetchData();
+    setInterval(fetchData,30000);
+    </script>    
 </body>
 </html>

commit ddb045cabd2718ee9ef9a6fe6a647ff782c3dc6a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:26:07 2025 +0100

    popup

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 31745c9..35bc76c 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -53,6 +53,11 @@
     th {
       background-color: rgba(255,255,255,0.1);
     }
+    .clickable-item {
+      text-decoration: underline;
+      cursor: pointer;
+      color: #00bfff;
+    }
   </style>
 </head>
 <body>
@@ -66,121 +71,127 @@
     <div id="tables"></div>
   </div>
 
+  <!-- Popup -->
+  <div id="itemPopup" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%,-50%); background-color:rgba(0,0,0,0.95); color:white; padding:20px 30px; border-radius:12px; z-index:1000; text-align:center; max-width:90%; box-shadow:0 0 20px black;">
+    <div style="text-align:right; margin:-10px -10px 10px 0;">
+      <span id="popupClose" style="cursor:pointer; font-size:20px;">âœ–</span>
+    </div>
+    <div style="margin-bottom:10px;">Would you like to open:</div>
+    <div style="display:flex; gap:15px; justify-content:center;">
+      <button id="popupChart" style="padding:8px 16px; font-size:15px; cursor:pointer;">ðŸ“ˆ Chart</button>
+      <button id="popupOrders" style="padding:8px 16px; font-size:15px; cursor:pointer;">ðŸ“‹ Orders</button>
+    </div>
+  </div>
+
   <script>
-    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-    
-    async function fetchData() {
-      const apiKey = "YOUR_API_KEY_HERE";
-      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-      const json = await res.json();
-      categorizeItems(json.products);
-    }
-    
-    function categorizeItems(products) {
-      let cat1=[], cat2=[], cat3=[];
-    
-      itemsToTrack.forEach(id => {
-        const data = products[id];
-        if (!data) return;
-    
-        // REMEMBER: API is inverted
-        const buyOrders = data.sell_summary; // players sell => buy instantly
-        const sellOrders = data.buy_summary; // players buy => sell instantly
-        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
-    
-        if (!buyOrders.length || !sellOrders.length) return;
-    
-        const activeBuy = buyOrders[0].pricePerUnit;
-        const activeSell = sellOrders[0].pricePerUnit;
-    
-        // === Category 1 ===
-        if (activeBuy * 1.25 <= activeSell) {
-          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
-          const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-          return;
+const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+
+async function fetchData() {
+  const apiKey = "YOUR_API_KEY_HERE";
+  const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+  const json = await res.json();
+  categorizeItems(json.products);
+}
+
+function formatM(coins) {
+  return (coins / 1e6).toFixed(2) + "M";
+}
+
+function categorizeItems(products) {
+  let cat1=[], cat2=[], cat3=[];
+
+  itemsToTrack.forEach(id => {
+    const data = products[id];
+    if (!data) return;
+
+    const buyOrders = data.sell_summary;  // sell_summary = buy orders
+    const sellOrders = data.buy_summary;  // buy_summary = sell orders
+    const instaSellsHour = data.quick_status.sellMovingWeek / 168;
+    if (!buyOrders.length || !sellOrders.length) return;
+
+    const activeBuy = buyOrders[0].pricePerUnit;
+    const activeSell = sellOrders[0].pricePerUnit;
+
+    if (activeBuy * 1.25 <= activeSell) {
+      const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
+      const coinGap = activeSell - activeBuy;
+      cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), formatM(coinGap)]);
+    } else {
+      let foundCat2 = false;
+      for (let i = 1; i < buyOrders.length; i++) {
+        const priceDrop = (buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit) / buyOrders[i].pricePerUnit;
+        const volume = buyOrders.slice(0, i).reduce((sum, o) => sum + o.amount, 0);
+        if (priceDrop <= -0.2) {
+          const coinGap = activeSell - buyOrders[i].pricePerUnit;
+          const percentChange = ((buyOrders[i].pricePerUnit - activeSell) / activeSell) * 100;
+          cat2.push([id, percentChange.toFixed(1), volume, instaSellsHour.toFixed(1), formatM(coinGap)]);
+          foundCat2 = true;
+          break;
         }
-    
-        // === Category 2 ===
-        let foundCat2 = false;
+      }
+
+      if (!foundCat2) {
+        let maxDrop = 0;
+        let maxDropIndex = 1;
         for (let i = 1; i < buyOrders.length; i++) {
-          const price1 = buyOrders[i - 1].pricePerUnit;
-          const price2 = buyOrders[i].pricePerUnit;
-          const drop = (price2 - price1) / price2;
-    
-          if (drop <= -0.2) {
-            let volume = 0;
-            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
-    
-            if (volume <= 10 * instaSellsHour) {
-              const percentChange = ((price2 - activeSell) / activeSell) * 100;
-              const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-              foundCat2 = true;
-              break;
-            }
+          const drop = (buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit) / buyOrders[i].pricePerUnit;
+          if (drop < maxDrop) {
+            maxDrop = drop;
+            maxDropIndex = i;
           }
         }
-        if (foundCat2) return;
-    
-        // === Category 3 ===
-        let maxDrop = -Infinity;
-        let bestIndex = 1;
-        for (let i = 1; i < buyOrders.length; i++) {
-          const prev = buyOrders[i - 1].pricePerUnit;
-          const curr = buyOrders[i].pricePerUnit;
-          const drop = (curr - prev) / curr;
-          if (drop < maxDrop) continue;
-          maxDrop = drop;
-          bestIndex = i;
-        }
-        const bestOrder = buyOrders[bestIndex];
-        let volume = 0;
-        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
-        const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
-      });
-    
-      cat2.sort((a,b) => b[4] - a[4]);
-    
-      document.getElementById('tables').innerHTML = [
-        ['Under Price Drop', cat1],
-        ['About To Price Drop', cat2],
-        ['Not Price Dropping', cat3]
-      ].map(cat => `
-        <h2>${cat[0]}</h2>
-        <table>
-          <tr>
-            <th>Item</th>
-            <th>% Price Change</th>
-            <th>Item Volume</th>
-            <th>Insta-sells/hour</th>
-            <th>Coins Gap</th>
-          </tr>
-          ${cat[1].map(row => `
-            <tr>
-              <td><a href="#" onclick="handleItemClick(event, '${row[0]}')" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
-              <td>${row[1]}%</td>
-              <td>${row[2]}</td>
-              <td>${row[3]}</td>
-              <td>${row[4]}</td>
-            </tr>
-          `).join('')}
-        </table>
-      `).join('');
-    }
-    
-    fetchData();
-    setInterval(fetchData,30000);
-    
-    function handleItemClick(event, itemId) {
-      if (event.shiftKey) {
-        window.open(`index.html?item=${itemId}`, '_blank');
-      } else {
-        window.open(`https://skyblock.finance/items/${itemId}/chart`, '_blank');
+        const volume = buyOrders.slice(0, maxDropIndex).reduce((sum, o) => sum + o.amount, 0);
+        const percentChange = ((buyOrders[maxDropIndex].pricePerUnit - activeSell) / activeSell) * 100;
+        const coinGap = activeSell - buyOrders[maxDropIndex].pricePerUnit;
+        cat3.push([id, percentChange.toFixed(1), volume, instaSellsHour.toFixed(1), formatM(coinGap)]);
       }
     }
-    </script>    
+  });
+
+  document.getElementById('tables').innerHTML = [
+    ['Under Price Drop', cat1],
+    ['About To Price Drop', cat2],
+    ['Not Price Dropping', cat3]
+  ].map(cat => `
+    <h2>${cat[0]}</h2>
+    <table>
+      <tr><th>Item</th><th>% Price Change</th><th>Item Volume</th><th>Insta-sells/hour</th><th>Coins Gap</th></tr>
+      ${cat[1].map(row => `
+        <tr>
+          <td><span class="clickable-item" data-id="${row[0]}">${row[0]}</span></td>
+          <td>${row[1]}%</td>
+          <td>${row[2]}</td>
+          <td>${row[3]}</td>
+          <td>${row[4]}</td>
+        </tr>`).join('')}
+    </table>
+  `).join('');
+}
+
+fetchData();
+setInterval(fetchData, 30000);
+
+// Popup logic
+let currentPopupItem = "";
+document.addEventListener("click", (e) => {
+  const popup = document.getElementById("itemPopup");
+  if (e.target.matches(".clickable-item")) {
+    currentPopupItem = e.target.dataset.id;
+    popup.style.display = "block";
+  } else if (e.target.id === "popupClose") {
+    popup.style.display = "none";
+  } else if (e.target.id === "popupChart") {
+    if (currentPopupItem)
+      window.open(`https://skyblock.finance/items/${currentPopupItem}/chart`, '_blank');
+    popup.style.display = "none";
+  } else if (e.target.id === "popupOrders") {
+    if (currentPopupItem)
+      window.open(`index.html?item=${currentPopupItem}`, '_blank');
+    popup.style.display = "none";
+  } else if (!popup.contains(e.target)) {
+    popup.style.display = "none";
+  }
+});
+  </script>
 </body>
 </html>

commit 8ed776493e3ebe131ead733b078c7f7ca8f285f5
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:16:19 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index bd74157..31745c9 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -160,7 +160,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
+              <td><a href="#" onclick="handleItemClick(event, '${row[0]}')" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>
@@ -173,6 +173,14 @@
     
     fetchData();
     setInterval(fetchData,30000);
+    
+    function handleItemClick(event, itemId) {
+      if (event.shiftKey) {
+        window.open(`index.html?item=${itemId}`, '_blank');
+      } else {
+        window.open(`https://skyblock.finance/items/${itemId}/chart`, '_blank');
+      }
+    }
     </script>    
 </body>
 </html>

commit b4d7055186fefd39624c74d05790c07a3973aa1f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:13:20 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 3a73dec..bd74157 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -160,7 +160,7 @@
           </tr>
           ${cat[1].map(row => `
             <tr>
-              <td>${row[0]}</td>
+              <td><a href="https://skyblock.finance/items/${row[0]}/chart" target="_blank" style="color: #fff; text-decoration: underline;">${row[0]}</a></td>
               <td>${row[1]}%</td>
               <td>${row[2]}</td>
               <td>${row[3]}</td>

commit ff1cfce28655efc4c24f9aa523e942f873a25118
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:08:50 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 97ff1c0..3a73dec 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -97,7 +97,7 @@
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
-          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
           return;
         }
     
@@ -115,7 +115,7 @@
             if (volume <= 10 * instaSellsHour) {
               const percentChange = ((price2 - activeSell) / activeSell) * 100;
               const coinsGap = activeSell - price2;
-              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
               foundCat2 = true;
               break;
             }
@@ -139,7 +139,7 @@
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), (parseFloat(coinsGap.toFixed(1))/1e6).toFixed(2) + 'M']);
       });
     
       cat2.sort((a,b) => b[4] - a[4]);

commit c73689f95023c97a86a3cf88106ce5dc169404d5
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 15:01:35 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 071d59b..97ff1c0 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -83,16 +83,17 @@
         const data = products[id];
         if (!data) return;
     
-        const buyOrders = data.buy_summary;
-        const sellOrders = data.sell_summary;
-        const instaSellsHour = data.quick_status.sellMovingWeek / 168;
+        // REMEMBER: API is inverted
+        const buyOrders = data.sell_summary; // players sell => buy instantly
+        const sellOrders = data.buy_summary; // players buy => sell instantly
+        const instaSellsHour = data.quick_status.buyMovingWeek / 168;
     
         if (!buyOrders.length || !sellOrders.length) return;
     
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
     
-        // === Category 1: activeBuy * 1.25 <= activeSell ===
+        // === Category 1 ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
@@ -100,43 +101,42 @@
           return;
         }
     
-        // === Category 2: look for big drop between adjacent orders and check volume in between ===
+        // === Category 2 ===
         let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
-          const prevPrice = buyOrders[i - 1].pricePerUnit;
-          const currPrice = buyOrders[i].pricePerUnit;
-          const dropRatio = (prevPrice - currPrice) / currPrice;
-          if (dropRatio <= -0.2) continue;
-    
-          let volumeBetween = 0;
-          for (let j = 0; j <= i; j++) volumeBetween += buyOrders[j].amount;
-    
-          if (volumeBetween <= 10 * instaSellsHour) {
-            const percentChange = ((currPrice - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - currPrice;
-            cat2.push([id, percentChange.toFixed(1), (volumeBetween - buyOrders[i].amount).toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
-            foundCat2 = true;
-            break;
+          const price1 = buyOrders[i - 1].pricePerUnit;
+          const price2 = buyOrders[i].pricePerUnit;
+          const drop = (price2 - price1) / price2;
+    
+          if (drop <= -0.2) {
+            let volume = 0;
+            for (let j = 0; j < i; j++) volume += buyOrders[j].amount;
+    
+            if (volume <= 10 * instaSellsHour) {
+              const percentChange = ((price2 - activeSell) / activeSell) * 100;
+              const coinsGap = activeSell - price2;
+              cat2.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+              foundCat2 = true;
+              break;
+            }
           }
         }
         if (foundCat2) return;
     
-        // === Category 3: find biggest drop between any two adjacent orders
+        // === Category 3 ===
         let maxDrop = -Infinity;
         let bestIndex = 1;
         for (let i = 1; i < buyOrders.length; i++) {
           const prev = buyOrders[i - 1].pricePerUnit;
           const curr = buyOrders[i].pricePerUnit;
-          const drop = (prev - curr) / curr;
+          const drop = (curr - prev) / curr;
           if (drop < maxDrop) continue;
           maxDrop = drop;
           bestIndex = i;
         }
-    
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
-    
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
         cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
@@ -173,6 +173,6 @@
     
     fetchData();
     setInterval(fetchData,30000);
-    </script>
+    </script>    
 </body>
 </html>

commit 5b63e3daa41a2e8c1ba2d76fe4fbca279ea9a3a6
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 14:50:44 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 1c9cc54..071d59b 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -92,7 +92,7 @@
         const activeBuy = buyOrders[0].pricePerUnit;
         const activeSell = sellOrders[0].pricePerUnit;
     
-        // === Category 1: Active buy is 25% or more below active sell ===
+        // === Category 1: activeBuy * 1.25 <= activeSell ===
         if (activeBuy * 1.25 <= activeSell) {
           const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
           const coinsGap = activeSell - activeBuy;
@@ -100,40 +100,46 @@
           return;
         }
     
-        // === Category 2: Look for sudden drop and small volume between ===
-        let foundDrop = false;
+        // === Category 2: look for big drop between adjacent orders and check volume in between ===
+        let foundCat2 = false;
         for (let i = 1; i < buyOrders.length; i++) {
-          const prev = buyOrders[i - 1];
-          const curr = buyOrders[i];
-          const priceChange = (curr.pricePerUnit - prev.pricePerUnit) / curr.pricePerUnit;
+          const prevPrice = buyOrders[i - 1].pricePerUnit;
+          const currPrice = buyOrders[i].pricePerUnit;
+          const dropRatio = (prevPrice - currPrice) / currPrice;
+          if (dropRatio <= -0.2) continue;
+    
           let volumeBetween = 0;
-          for (let j = 0; j < i; j++) volumeBetween += buyOrders[j].amount;
+          for (let j = 0; j <= i; j++) volumeBetween += buyOrders[j].amount;
     
-          if (priceChange <= -0.2 && volumeBetween <= 10 * instaSellsHour) {
-            const percentChange = ((curr.pricePerUnit - activeSell) / activeSell) * 100;
-            const coinsGap = activeSell - curr.pricePerUnit;
-            cat2.push([id, percentChange.toFixed(1), volumeBetween, instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
-            foundDrop = true;
+          if (volumeBetween <= 10 * instaSellsHour) {
+            const percentChange = ((currPrice - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - currPrice;
+            cat2.push([id, percentChange.toFixed(1), (volumeBetween - buyOrders[i].amount).toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+            foundCat2 = true;
             break;
           }
         }
-        if (foundDrop) return;
+        if (foundCat2) return;
     
-        // === Category 3: Not price dropping (find max gap between any 2 consecutive orders) ===
+        // === Category 3: find biggest drop between any two adjacent orders
         let maxDrop = -Infinity;
-        let bestIndex = 0;
+        let bestIndex = 1;
         for (let i = 1; i < buyOrders.length; i++) {
-          const change = (buyOrders[i].pricePerUnit - buyOrders[i - 1].pricePerUnit) / buyOrders[i].pricePerUnit;
-          if (change < maxDrop) continue;
-          maxDrop = change;
+          const prev = buyOrders[i - 1].pricePerUnit;
+          const curr = buyOrders[i].pricePerUnit;
+          const drop = (prev - curr) / curr;
+          if (drop < maxDrop) continue;
+          maxDrop = drop;
           bestIndex = i;
         }
+    
         const bestOrder = buyOrders[bestIndex];
         let volume = 0;
         for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+    
         const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
         const coinsGap = activeSell - bestOrder.pricePerUnit;
-        cat3.push([id, percentChange.toFixed(1), volume, instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+        cat3.push([id, percentChange.toFixed(1), volume.toFixed(1), instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
       });
     
       cat2.sort((a,b) => b[4] - a[4]);

commit 98abb359f747daafc1d554c5bdb40487211dc007
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 14:37:51 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 095cd6d..1c9cc54 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -89,39 +89,54 @@
     
         if (!buyOrders.length || !sellOrders.length) return;
     
-        const highestBuyPrice = Math.max(...buyOrders.map(o => o.pricePerUnit));
-        const lowestSellPrice = sellOrders[0].pricePerUnit;
+        const activeBuy = buyOrders[0].pricePerUnit;
+        const activeSell = sellOrders[0].pricePerUnit;
     
-        if (lowestSellPrice >= highestBuyPrice * 1.3) {
-          const percentGap = ((lowestSellPrice - highestBuyPrice) / highestBuyPrice) * 100;
-          cat1.push([id, percentGap.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (lowestSellPrice - highestBuyPrice).toFixed(1)]);
-        } else {
-          let foundDrop = false;
-          let cumulativeVolume = buyOrders[0].amount;
+        // === Category 1: Active buy is 25% or more below active sell ===
+        if (activeBuy * 1.25 <= activeSell) {
+          const percentChange = ((activeBuy - activeSell) / activeSell) * 100;
+          const coinsGap = activeSell - activeBuy;
+          cat1.push([id, percentChange.toFixed(1), "Already Price Dropped: No Volume", instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+          return;
+        }
     
-          for (let i = 1; i < buyOrders.length; i++) {
-            const higherPrice = buyOrders[i-1].pricePerUnit;
-            const lowerPrice = buyOrders[i].pricePerUnit;
-            const percentChange = ((lowerPrice - higherPrice) / higherPrice) * 100;
+        // === Category 2: Look for sudden drop and small volume between ===
+        let foundDrop = false;
+        for (let i = 1; i < buyOrders.length; i++) {
+          const prev = buyOrders[i - 1];
+          const curr = buyOrders[i];
+          const priceChange = (curr.pricePerUnit - prev.pricePerUnit) / curr.pricePerUnit;
+          let volumeBetween = 0;
+          for (let j = 0; j < i; j++) volumeBetween += buyOrders[j].amount;
     
-            if (percentChange <= -15 && cumulativeVolume < instaSellsHour * 10) {
-              const dropMultiplier = lowerPrice / higherPrice;
-              const scoreAmount = (Math.E * (1 - dropMultiplier) * instaSellsHour) / cumulativeVolume;
-              cat2.push([id, percentChange.toFixed(1), cumulativeVolume, instaSellsHour.toFixed(1), ((higherPrice - lowerPrice) * cumulativeVolume).toFixed(1), scoreAmount]);
-              foundDrop = true;
-              break;
-            }
-            cumulativeVolume += buyOrders[i].amount;
+          if (priceChange <= -0.2 && volumeBetween <= 10 * instaSellsHour) {
+            const percentChange = ((curr.pricePerUnit - activeSell) / activeSell) * 100;
+            const coinsGap = activeSell - curr.pricePerUnit;
+            cat2.push([id, percentChange.toFixed(1), volumeBetween, instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
+            foundDrop = true;
+            break;
           }
+        }
+        if (foundDrop) return;
     
-          if (!foundDrop) {
-            const percentGap = ((lowestSellPrice - highestBuyPrice) / highestBuyPrice) * 100;
-            cat3.push([id, percentGap.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (lowestSellPrice - highestBuyPrice).toFixed(1)]);
-          }
+        // === Category 3: Not price dropping (find max gap between any 2 consecutive orders) ===
+        let maxDrop = -Infinity;
+        let bestIndex = 0;
+        for (let i = 1; i < buyOrders.length; i++) {
+          const change = (buyOrders[i].pricePerUnit - buyOrders[i - 1].pricePerUnit) / buyOrders[i].pricePerUnit;
+          if (change < maxDrop) continue;
+          maxDrop = change;
+          bestIndex = i;
         }
+        const bestOrder = buyOrders[bestIndex];
+        let volume = 0;
+        for (let j = 0; j < bestIndex; j++) volume += buyOrders[j].amount;
+        const percentChange = ((bestOrder.pricePerUnit - activeSell) / activeSell) * 100;
+        const coinsGap = activeSell - bestOrder.pricePerUnit;
+        cat3.push([id, percentChange.toFixed(1), volume, instaSellsHour.toFixed(1), coinsGap.toFixed(1)]);
       });
     
-      cat2.sort((a,b) => b[5] - a[5]);
+      cat2.sort((a,b) => b[4] - a[4]);
     
       document.getElementById('tables').innerHTML = [
         ['Under Price Drop', cat1],
@@ -132,7 +147,7 @@
         <table>
           <tr>
             <th>Item</th>
-            <th>% Price Decrease</th>
+            <th>% Price Change</th>
             <th>Item Volume</th>
             <th>Insta-sells/hour</th>
             <th>Coins Gap</th>

commit 98cbcd635c41a0836955e949d452bb7c4bdf5530
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 12:16:12 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index e426bc6..095cd6d 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -89,7 +89,7 @@
     
         if (!buyOrders.length || !sellOrders.length) return;
     
-        const highestBuyPrice = buyOrders[0].pricePerUnit;
+        const highestBuyPrice = Math.max(...buyOrders.map(o => o.pricePerUnit));
         const lowestSellPrice = sellOrders[0].pricePerUnit;
     
         if (lowestSellPrice >= highestBuyPrice * 1.3) {

commit 682a8e257a4b2c08aec17422819bcc5c417b6dc3
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 12:13:18 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index d19472c..e426bc6 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -84,17 +84,17 @@
         if (!data) return;
     
         const buyOrders = data.buy_summary;
+        const sellOrders = data.sell_summary;
         const instaSellsHour = data.quick_status.sellMovingWeek / 168;
     
-        if (!buyOrders.length) return;
+        if (!buyOrders.length || !sellOrders.length) return;
     
-        const activePrice = buyOrders[0].pricePerUnit;
-        const avgBuyOrderPrice = buyOrders.reduce((sum, ord) => sum + ord.pricePerUnit, 0) / buyOrders.length;
+        const highestBuyPrice = buyOrders[0].pricePerUnit;
+        const lowestSellPrice = sellOrders[0].pricePerUnit;
     
-        const percentBelowAvg = ((avgBuyOrderPrice - activePrice) / avgBuyOrderPrice) * 100;
-    
-        if (percentBelowAvg >= 50) {
-          cat1.push([id, percentBelowAvg.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgBuyOrderPrice - activePrice).toFixed(1)]);
+        if (lowestSellPrice >= highestBuyPrice * 1.3) {
+          const percentGap = ((lowestSellPrice - highestBuyPrice) / highestBuyPrice) * 100;
+          cat1.push([id, percentGap.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (lowestSellPrice - highestBuyPrice).toFixed(1)]);
         } else {
           let foundDrop = false;
           let cumulativeVolume = buyOrders[0].amount;
@@ -115,7 +115,8 @@
           }
     
           if (!foundDrop) {
-            cat3.push([id, percentBelowAvg.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgBuyOrderPrice - activePrice).toFixed(1)]);
+            const percentGap = ((lowestSellPrice - highestBuyPrice) / highestBuyPrice) * 100;
+            cat3.push([id, percentGap.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (lowestSellPrice - highestBuyPrice).toFixed(1)]);
           }
         }
       });
@@ -151,6 +152,6 @@
     
     fetchData();
     setInterval(fetchData,30000);
-    </script>    
+    </script>
 </body>
 </html>

commit 23c5c097c3c6a30ebe1d084862a21e9c387de0c5
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 11:55:12 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 239202d..d19472c 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -66,61 +66,91 @@
     <div id="tables"></div>
   </div>
 
-<script>
-const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
-
-async function fetchData() {
-  const apiKey = "YOUR_API_KEY_HERE";
-  const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-  const json = await res.json();
-  categorizeItems(json.products);
-}
-
-function categorizeItems(products) {
-  let cat1=[], cat2=[], cat3=[];
-
-  itemsToTrack.forEach(id => {
-    const data = products[id];
-    if (!data) return;
-    const avgPrice = data.quick_status.buyPrice;
-    const buyOrders = data.buy_summary;
-    const instaSellsHour = data.quick_status.sellMovingWeek / 168;
-
-    if (!buyOrders.length) return;
-
-    const activePrice = buyOrders[0].pricePerUnit;
-    const percentDrop = ((avgPrice - activePrice) / avgPrice) * 100;
-
-    if (percentDrop >= 50) cat1.push([id, percentDrop.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgPrice - activePrice).toFixed(1)]);
-    else {
-      let found = false;
-      for (let i = 1; i < buyOrders.length; i++) {
-        const dropPerc = ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)/buyOrders[i-1].pricePerUnit)*100;
-        const volumeBetween = buyOrders.slice(0,i).reduce((a,c)=>a+c.amount,0);
-        if (dropPerc >= 15) {
-          const score = (Math.E*(1-(buyOrders[i].pricePerUnit/buyOrders[i-1].pricePerUnit))*instaSellsHour)/volumeBetween;
-          cat2.push([id, dropPerc.toFixed(1), volumeBetween, instaSellsHour.toFixed(1), ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)*volumeBetween).toFixed(1), score]);
-          found=true;
-          break;
+  <script>
+    const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
+    
+    async function fetchData() {
+      const apiKey = "YOUR_API_KEY_HERE";
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      categorizeItems(json.products);
+    }
+    
+    function categorizeItems(products) {
+      let cat1=[], cat2=[], cat3=[];
+    
+      itemsToTrack.forEach(id => {
+        const data = products[id];
+        if (!data) return;
+    
+        const buyOrders = data.buy_summary;
+        const instaSellsHour = data.quick_status.sellMovingWeek / 168;
+    
+        if (!buyOrders.length) return;
+    
+        const activePrice = buyOrders[0].pricePerUnit;
+        const avgBuyOrderPrice = buyOrders.reduce((sum, ord) => sum + ord.pricePerUnit, 0) / buyOrders.length;
+    
+        const percentBelowAvg = ((avgBuyOrderPrice - activePrice) / avgBuyOrderPrice) * 100;
+    
+        if (percentBelowAvg >= 50) {
+          cat1.push([id, percentBelowAvg.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgBuyOrderPrice - activePrice).toFixed(1)]);
+        } else {
+          let foundDrop = false;
+          let cumulativeVolume = buyOrders[0].amount;
+    
+          for (let i = 1; i < buyOrders.length; i++) {
+            const higherPrice = buyOrders[i-1].pricePerUnit;
+            const lowerPrice = buyOrders[i].pricePerUnit;
+            const percentChange = ((lowerPrice - higherPrice) / higherPrice) * 100;
+    
+            if (percentChange <= -15 && cumulativeVolume < instaSellsHour * 10) {
+              const dropMultiplier = lowerPrice / higherPrice;
+              const scoreAmount = (Math.E * (1 - dropMultiplier) * instaSellsHour) / cumulativeVolume;
+              cat2.push([id, percentChange.toFixed(1), cumulativeVolume, instaSellsHour.toFixed(1), ((higherPrice - lowerPrice) * cumulativeVolume).toFixed(1), scoreAmount]);
+              foundDrop = true;
+              break;
+            }
+            cumulativeVolume += buyOrders[i].amount;
+          }
+    
+          if (!foundDrop) {
+            cat3.push([id, percentBelowAvg.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgBuyOrderPrice - activePrice).toFixed(1)]);
+          }
         }
-      }
-      if (!found) cat3.push([id, percentDrop.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgPrice - activePrice).toFixed(1)]);
+      });
+    
+      cat2.sort((a,b) => b[5] - a[5]);
+    
+      document.getElementById('tables').innerHTML = [
+        ['Under Price Drop', cat1],
+        ['About To Price Drop', cat2],
+        ['Not Price Dropping', cat3]
+      ].map(cat => `
+        <h2>${cat[0]}</h2>
+        <table>
+          <tr>
+            <th>Item</th>
+            <th>% Price Decrease</th>
+            <th>Item Volume</th>
+            <th>Insta-sells/hour</th>
+            <th>Coins Gap</th>
+          </tr>
+          ${cat[1].map(row => `
+            <tr>
+              <td>${row[0]}</td>
+              <td>${row[1]}%</td>
+              <td>${row[2]}</td>
+              <td>${row[3]}</td>
+              <td>${row[4]}</td>
+            </tr>
+          `).join('')}
+        </table>
+      `).join('');
     }
-  });
-
-  cat2.sort((a,b)=>b[5]-a[5]);
-
-  document.getElementById('tables').innerHTML=[['Under Price Drop',cat1],['About To Price Drop',cat2],['Not Price Dropping',cat3]].map(cat=>`
-    <h2>${cat[0]}</h2>
-    <table>
-      <tr><th>Item</th><th>% Price Decrease</th><th>Item Volume</th><th>Insta-sells/hour</th><th>Coins Gap</th></tr>
-      ${cat[1].map(row=>`<tr><td>${row[0]}</td><td>${row[1]}%</td><td>${row[2]}</td><td>${row[3]}</td><td>${row[4]}</td></tr>`).join('')}
-    </table>
-  `).join('');
-}
-
-fetchData();
-setInterval(fetchData,30000);
-</script>
+    
+    fetchData();
+    setInterval(fetchData,30000);
+    </script>    
 </body>
 </html>

commit c5cb936c2d4b613f7974067c72fbbeb8d4cf88fb
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 11:04:18 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 8da3ada..239202d 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -82,39 +82,39 @@ function categorizeItems(products) {
   itemsToTrack.forEach(id => {
     const data = products[id];
     if (!data) return;
-    const sellPrice = data.quick_status.sellPrice;
+    const avgPrice = data.quick_status.buyPrice;
     const buyOrders = data.buy_summary;
     const instaSellsHour = data.quick_status.sellMovingWeek / 168;
 
     if (!buyOrders.length) return;
 
     const activePrice = buyOrders[0].pricePerUnit;
-    const percentDrop = ((sellPrice - activePrice) / sellPrice) * 100;
+    const percentDrop = ((avgPrice - activePrice) / avgPrice) * 100;
 
-    if (percentDrop > 50) cat1.push([id, percentDrop.toFixed(1), buyOrders[0].amount, (sellPrice - activePrice).toFixed(1)]);
+    if (percentDrop >= 50) cat1.push([id, percentDrop.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgPrice - activePrice).toFixed(1)]);
     else {
       let found = false;
       for (let i = 1; i < buyOrders.length; i++) {
         const dropPerc = ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)/buyOrders[i-1].pricePerUnit)*100;
         const volumeBetween = buyOrders.slice(0,i).reduce((a,c)=>a+c.amount,0);
-        if (dropPerc > 15 && volumeBetween < 10*instaSellsHour) {
+        if (dropPerc >= 15) {
           const score = (Math.E*(1-(buyOrders[i].pricePerUnit/buyOrders[i-1].pricePerUnit))*instaSellsHour)/volumeBetween;
-          cat2.push([id, dropPerc.toFixed(1), volumeBetween, ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)*volumeBetween).toFixed(1), score]);
+          cat2.push([id, dropPerc.toFixed(1), volumeBetween, instaSellsHour.toFixed(1), ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)*volumeBetween).toFixed(1), score]);
           found=true;
           break;
         }
       }
-      if (!found) cat3.push([id, percentDrop.toFixed(1), buyOrders[0].amount, (sellPrice - activePrice).toFixed(1)]);
+      if (!found) cat3.push([id, percentDrop.toFixed(1), buyOrders[0].amount, instaSellsHour.toFixed(1), (avgPrice - activePrice).toFixed(1)]);
     }
   });
 
-  cat2.sort((a,b)=>b[4]-a[4]);
+  cat2.sort((a,b)=>b[5]-a[5]);
 
   document.getElementById('tables').innerHTML=[['Under Price Drop',cat1],['About To Price Drop',cat2],['Not Price Dropping',cat3]].map(cat=>`
     <h2>${cat[0]}</h2>
     <table>
-      <tr><th>Item</th><th>% Price Decrease</th><th>Item Volume</th><th>Coins Gap</th></tr>
-      ${cat[1].map(row=>`<tr><td>${row[0]}</td><td>${row[1]}%</td><td>${row[2]}</td><td>${row[3]}</td></tr>`).join('')}
+      <tr><th>Item</th><th>% Price Decrease</th><th>Item Volume</th><th>Insta-sells/hour</th><th>Coins Gap</th></tr>
+      ${cat[1].map(row=>`<tr><td>${row[0]}</td><td>${row[1]}%</td><td>${row[2]}</td><td>${row[3]}</td><td>${row[4]}</td></tr>`).join('')}
     </table>
   `).join('');
 }

commit 0395e23ba1eef343534910d5f00ed78f87564fd6
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 09:55:28 2025 +0100

    aaaaa

diff --git a/.DS_Store b/.DS_Store
index de555c4..7061c71 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/index.html b/public/index.html
index 2c293dc..d50115e 100644
--- a/public/index.html
+++ b/public/index.html
@@ -62,20 +62,14 @@
     th {
       background-color: rgba(255, 255, 255, 0.1);
     }
-    .highlight-yellow {
-      background-color: rgba(255, 255, 0, 0.2);
-    }
-    .highlight-red {
-      background-color: rgba(255, 0, 0, 0.4);
-    }
-    .highlight-blue {
-      background-color: rgba(0, 191, 255, 0.3);
-    }
+    .highlight-yellow { background-color: rgba(255,255,0,0.2); }
+    .highlight-red { background-color: rgba(255,0,0,0.4); }
+    .highlight-blue { background-color: rgba(0,191,255,0.3); }
     .order-info {
       margin: 20px auto;
       max-width: 600px;
       text-align: center;
-      background-color: rgba(255, 255, 255, 0.05);
+      background-color: rgba(255,255,255,0.05);
       padding: 20px;
       border-radius: 10px;
     }
@@ -87,6 +81,35 @@
       padding: 20px;
       border-radius: 12px;
     }
+    .dropdown {
+      background-color: rgba(0,0,0,0.85);
+      border-radius: 8px;
+      padding: 10px;
+      max-height: 300px;
+      overflow-y: auto;
+      display: none;
+      position: absolute;
+      z-index: 1000;
+      width: calc(100% - 60px);
+    }
+    .dropdown-item {
+      display: flex;
+      align-items: center;
+      justify-content: space-between;
+      padding: 8px 12px;
+      border-bottom: 1px solid rgba(255,255,255,0.1);
+      cursor: pointer;
+    }
+    .dropdown-item:hover { background-color: rgba(255,255,255,0.1); }
+    .dropdown-price {
+      background-color: goldenrod;
+      padding: 4px 8px;
+      border-radius: 6px;
+      font-weight: bold;
+      color: black;
+    }
+    .tables { display: flex; gap: 20px; }
+    .tables > div { flex: 1; }
   </style>
 </head>
 <body>
@@ -99,14 +122,8 @@
     <h1>SkyBlock Bazaar Tracker</h1>
 
     <div class="volume-box">
-      <div>
-        <strong>Instabuys / hour:</strong>
-        <div id="instabuys"></div>
-      </div>
-      <div>
-        <strong>Instasells / hour:</strong>
-        <div id="instasells"></div>
-      </div>
+      <div><strong>Instabuys / hour:</strong><div id="instabuys"></div></div>
+      <div><strong>Instasells / hour:</strong><div id="instasells"></div></div>
     </div>
 
     <h3>Item ID:</h3>

commit 44ae5af8c755b6e9426adf4a47f9e578f8880d31
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 09:40:38 2025 +0100

    Update index.html

diff --git a/public/index.html b/public/index.html
index eaed1cf..2c293dc 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,316 +1,298 @@
 <!DOCTYPE html>
- <html lang="en">
- <head>
-   <meta charset="UTF-8" />
-   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-   <title>SkyBlock Bazaar Tracker</title>
-   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-   <style>
-     body {
-       margin: 0;
-       font-family: 'Segoe UI', sans-serif;
-       background-image: url('bgimage.jpeg');
-       background-size: cover;
-       background-attachment: fixed;
-       color: #fff;
-     }
-     .container {
-       max-width: 1200px;
-       margin: 40px auto;
-       background-color: rgba(0, 0, 0, 0.75);
-       padding: 30px;
-       border-radius: 16px;
-     }
-     h1, h2, h3 {
-       text-align: center;
-     }
-     input {
-       width: 100%;
-       padding: 10px;
-       font-size: 16px;
-       margin: 10px 0 10px;
-       border-radius: 6px;
-       border: none;
-     }
-     table {
-       width: 100%;
-       border-collapse: collapse;
-       margin-bottom: 30px;
-       background-color: rgba(255, 255, 255, 0.05);
-     }
-     th, td {
-       padding: 10px;
-       text-align: center;
-       border: 1px solid rgba(255, 255, 255, 0.2);
-     }
-     th {
-       background-color: rgba(255, 255, 255, 0.1);
-     }
-     tfoot td {
-       font-weight: bold;
-     }
-     .tables {
-       display: flex;
-       gap: 20px;
-     }
-     .tables > div {
-       flex: 1;
-     }
-     .highlight-yellow {
-       background-color: rgba(255, 255, 0, 0.2);
-     }
-     .highlight-red {
-       background-color: rgba(255, 0, 0, 0.4);
-     }
-     .highlight-blue {
-       background-color: rgba(0, 191, 255, 0.3);
-     }
-     .order-info {
-       margin: 20px auto;
-       max-width: 600px;
-       text-align: center;
-       background-color: rgba(255, 255, 255, 0.05);
-       padding: 20px;
-       border-radius: 10px;
-     }
-     .volume-box {
-       display: flex;
-       justify-content: space-around;
-       margin-bottom: 20px;
-       background-color: rgba(255,255,255,0.05);
-       padding: 20px;
-       border-radius: 12px;
-     }
-     .dropdown {
-       background-color: rgba(0, 0, 0, 0.85);
-       border-radius: 8px;
-       padding: 10px;
-       max-height: 300px;
-       overflow-y: auto;
-       display: none;
-     }
-     .dropdown-item {
-       display: flex;
-       align-items: center;
-       justify-content: space-between;
-       padding: 8px 12px;
-       border-bottom: 1px solid rgba(255, 255, 255, 0.1);
-       cursor: pointer;
-     }
-     .dropdown-item:hover {
-       background-color: rgba(255, 255, 255, 0.1);
-     }
-     .dropdown-label {
-       display: flex;
-       align-items: center;
-     }
-     .dropdown-price {
-       background-color: goldenrod;
-       padding: 4px 8px;
-       border-radius: 6px;
-       font-weight: bold;
-       color: black;
-     }
-   </style>
- </head>
- <body>
+<html lang="en">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>SkyBlock Bazaar Tracker - Orders</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <style>
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      color: #fff;
+    }
+    .container {
+      max-width: 1200px;
+      margin: 40px auto;
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 30px;
+      border-radius: 16px;
+      position: relative;
+    }
+    .tabs {
+      display: flex;
+      gap: 10px;
+      position: absolute;
+      top: -40px;
+      left: 20px;
+    }
+    .tab {
+      padding: 8px 16px;
+      background-color: rgba(0, 0, 0, 0.6);
+      color: #fff;
+      text-decoration: none;
+      border-radius: 8px 8px 0 0;
+    }
+    .active-tab {
+      background-color: rgba(255,255,255,0.1);
+      border-bottom: 2px solid #00bfff;
+    }
+    input {
+      width: 100%;
+      padding: 10px;
+      font-size: 16px;
+      margin: 10px 0;
+      border-radius: 6px;
+      border: none;
+    }
+    table {
+      width: 100%;
+      border-collapse: collapse;
+      margin-bottom: 30px;
+      background-color: rgba(255, 255, 255, 0.05);
+    }
+    th, td {
+      padding: 10px;
+      text-align: center;
+      border: 1px solid rgba(255, 255, 255, 0.2);
+    }
+    th {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    .highlight-yellow {
+      background-color: rgba(255, 255, 0, 0.2);
+    }
+    .highlight-red {
+      background-color: rgba(255, 0, 0, 0.4);
+    }
+    .highlight-blue {
+      background-color: rgba(0, 191, 255, 0.3);
+    }
+    .order-info {
+      margin: 20px auto;
+      max-width: 600px;
+      text-align: center;
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 20px;
+      border-radius: 10px;
+    }
+    .volume-box {
+      display: flex;
+      justify-content: space-around;
+      margin-bottom: 20px;
+      background-color: rgba(255,255,255,0.05);
+      padding: 20px;
+      border-radius: 12px;
+    }
+  </style>
+</head>
+<body>
   <div class="container">
-    <div class="tabs" style="display: flex; gap: 10px; position: absolute; top: -40px; left: 20px;">
-      <a class="tab active-tab" href="index.html" style="padding: 8px 16px; background-color: rgba(0,0,0,0.6); color:#fff; text-decoration:none; border-radius:8px 8px 0 0; background-color:rgba(255,255,255,0.1); border-bottom:2px solid #00bfff;">Orders</a>
-      <a class="tab" href="volume-drain.html" style="padding: 8px 16px; background-color: rgba(0,0,0,0.6); color:#fff; text-decoration:none; border-radius:8px 8px 0 0;">Buy Order Volume Drain</a>
+    <div class="tabs">
+      <a class="tab active-tab" href="index.html">Orders</a>
+      <a class="tab" href="volume-drain.html">Buy Order Volume Drain</a>
     </div>
-  
+
     <h1>SkyBlock Bazaar Tracker</h1>
-  
+
     <div class="volume-box">
       <div>
         <strong>Instabuys / hour:</strong>
         <div id="instabuys"></div>
-      </div>  
- 
-     <h3>Item ID:</h3>
-     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-     <div id="itemDropdown" class="dropdown"></div>
- 
-     <h3>Track Order By Price:</h3>
-     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
- 
-     <div id="orderInfo"></div>
- 
-     <div class="tables">
-       <div>
-         <h2>Buy Orders</h2>
-         <table id="buyTable">
-           <thead>
-             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-           </thead>
-           <tbody></tbody>
-           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-         </table>
-       </div>
-       <div>
-         <h2>Sell Orders</h2>
-         <table id="sellTable">
-           <thead>
-             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-           </thead>
-           <tbody></tbody>
-           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-         </table>
-       </div>
-     </div>
-   </div>
- 
-   <script>
-     const itemInput = document.getElementById("itemInput");
-     const trackInput = document.getElementById("trackInput");
-     const buyBody = document.querySelector("#buyTable tbody");
-     const sellBody = document.querySelector("#sellTable tbody");
-     const buyFoot = document.querySelector("#buyTable tfoot tr");
-     const sellFoot = document.querySelector("#sellTable tfoot tr");
-     const instabuys = document.getElementById("instabuys");
-     const instasells = document.getElementById("instasells");
-     const orderInfo = document.getElementById("orderInfo");
-     const itemDropdown = document.getElementById("itemDropdown");
- 
-     let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
-     let allItems = [];
- 
-     async function getApiKey() {
-       return "YOUR_API_KEY_HERE";
-     }
- 
-     async function fetchAllItems() {
-       const apiKey = await getApiKey();
-       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-       const json = await res.json();
-       const products = json.products;
-       allItems = Object.keys(products).map(id => {
-         const quick = products[id].quick_status;
-         const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
-         return {
-           id,
-           name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-           price
-         };
-       });
-     }
- 
-     itemInput.addEventListener("input", () => {
-       const query = itemInput.value.trim().toLowerCase();
-       itemDropdown.innerHTML = "";
-       if (!query) return (itemDropdown.style.display = "none");
-       const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
-       for (const item of filtered.slice(0, 50)) {
-         const div = document.createElement("div");
-         div.className = "dropdown-item";
-         div.innerHTML = `
-           <div class="dropdown-label">
-             ${item.name}
-           </div>
-           <div class="dropdown-price">${item.price} /bz</div>
-         `;
-         div.onclick = () => {
-           itemInput.value = item.id;
-           itemDropdown.style.display = "none";
-           currentItemId = item.id;
-           loadData(item.id);
-         };
-         itemDropdown.appendChild(div);
-       }
-       itemDropdown.style.display = "block";
-     });
- 
-     trackInput.addEventListener("change", () => {
-       const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
-       highlightTrackedOrder(tracked);
-     });
- 
-     async function loadData(itemId) {
-       const apiKey = await getApiKey();
-       try {
-         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-         const json = await res.json();
-         const data = json.products[itemId];
-         if (!data) throw new Error("Item not found");
-         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
-         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
-         latestBuySummary = data.sell_summary;
-         latestSellSummary = data.buy_summary;
-         renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
-         renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
-         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
-       } catch (err) {
-         alert("Failed to load data. Check the item ID and API key.");
-         console.error(err);
-       }
-     }
- 
-     function renderTable(summary, tbody, tfootRow, hourlyVolume) {
-       tbody.innerHTML = "";
-       let totalAmount = 0, totalCoins = 0;
-       for (const row of summary) {
-         const total = row.amount * row.pricePerUnit;
-         totalAmount += row.amount;
-         totalCoins += total;
-         const tr = document.createElement("tr");
-         tr.innerHTML = `
-           <td>${row.orders}</td>
-           <td>${row.amount}</td>
-           <td>${row.pricePerUnit.toLocaleString()} coins</td>
-           <td>${total.toLocaleString()} coins</td>
-         `;
-         if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
-         else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-         tbody.appendChild(tr);
-       }
-       tfootRow.innerHTML = `
-         <td>Total:</td>
-         <td>${totalAmount}</td>
-         <td></td>
-         <td>${totalCoins.toLocaleString()} coins</td>
-       `;
-     }
- 
-     function highlightTrackedOrder(price) {
-       orderInfo.innerHTML = "";
-       if (!price || isNaN(price)) return;
-       const allRows = [...buyBody.children, ...sellBody.children];
-       allRows.forEach(row => row.classList.remove("highlight-blue"));
-       for (const [summary, body] of [
-         [latestBuySummary, buyBody],
-         [latestSellSummary, sellBody]
-       ]) {
-         let coinsBetween = 0, itemsBetween = 0, priority = 1;
-         for (const row of summary) {
-           const unit = parseFloat(row.pricePerUnit.toFixed(1));
-           if (Math.abs(unit - price) < 0.1) {
-             const index = summary.indexOf(row);
-             const tr = body.children[index];
-             if (tr) tr.classList.add("highlight-blue");
-             orderInfo.innerHTML = `
-               <div class="order-info">
-                 <strong>Tracked Order Info</strong><br>
-                 Priority position: ${priority}<br>
-                 Items between: ${itemsBetween}<br>
-                 Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
-                 Items left in order: ${row.amount}
-               </div>
-             `;
-             return;
-           }
-           itemsBetween += row.amount;
-           coinsBetween += row.amount * row.pricePerUnit;
-           priority++;
-         }
-       }
-     }
- 
-     fetchAllItems();
-     setInterval(() => {
-       if (currentItemId) loadData(currentItemId);
-     }, 3000);
-   </script>
- </body>
- </html>
- </html>
\ No newline at end of file
+      </div>
+      <div>
+        <strong>Instasells / hour:</strong>
+        <div id="instasells"></div>
+      </div>
+    </div>
+
+    <h3>Item ID:</h3>
+    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+    <div id="itemDropdown" class="dropdown"></div>
+
+    <h3>Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+
+    <div id="orderInfo"></div>
+
+    <div class="tables">
+      <div>
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+      <div>
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+    </div>
+
+    <script>
+      const itemInput = document.getElementById("itemInput");
+const trackInput = document.getElementById("trackInput");
+const buyBody = document.querySelector("#buyTable tbody");
+const sellBody = document.querySelector("#sellTable tbody");
+const buyFoot = document.querySelector("#buyTable tfoot tr");
+const sellFoot = document.querySelector("#sellTable tfoot tr");
+const instabuys = document.getElementById("instabuys");
+const instasells = document.getElementById("instasells");
+const orderInfo = document.getElementById("orderInfo");
+const itemDropdown = document.getElementById("itemDropdown");
+
+let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+let allItems = [];
+
+async function getApiKey() {
+  return "YOUR_API_KEY_HERE";
+}
+
+async function fetchAllItems() {
+  const apiKey = await getApiKey();
+  const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+  const json = await res.json();
+  const products = json.products;
+  allItems = Object.keys(products).map(id => {
+    const quick = products[id].quick_status;
+    const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
+    return {
+      id,
+      name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+      price
+    };
+  });
+}
+
+itemInput.addEventListener("input", () => {
+  const query = itemInput.value.trim().toLowerCase();
+  itemDropdown.innerHTML = "";
+  if (!query) return (itemDropdown.style.display = "none");
+  const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+  for (const item of filtered.slice(0, 50)) {
+    const div = document.createElement("div");
+    div.className = "dropdown-item";
+    div.innerHTML = `
+      <div class="dropdown-label">
+        ${item.name}
+      </div>
+      <div class="dropdown-price">${item.price} /bz</div>
+    `;
+    div.onclick = () => {
+      itemInput.value = item.id;
+      itemDropdown.style.display = "none";
+      currentItemId = item.id;
+      loadData(item.id);
+    };
+    itemDropdown.appendChild(div);
+  }
+  itemDropdown.style.display = "block";
+});
+
+trackInput.addEventListener("change", () => {
+  const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
+  highlightTrackedOrder(tracked);
+});
+
+async function loadData(itemId) {
+  const apiKey = await getApiKey();
+  try {
+    const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+    const json = await res.json();
+    const data = json.products[itemId];
+    if (!data) throw new Error("Item not found");
+    instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
+    instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
+    latestBuySummary = data.sell_summary;
+    latestSellSummary = data.buy_summary;
+    renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+    renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+    highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
+  } catch (err) {
+    alert("Failed to load data. Check the item ID and API key.");
+    console.error(err);
+  }
+}
+
+function renderTable(summary, tbody, tfootRow, hourlyVolume) {
+  tbody.innerHTML = "";
+  let totalAmount = 0, totalCoins = 0;
+  for (const row of summary) {
+    const total = row.amount * row.pricePerUnit;
+    totalAmount += row.amount;
+    totalCoins += total;
+    const tr = document.createElement("tr");
+    tr.innerHTML = `
+      <td>${row.orders}</td>
+      <td>${row.amount}</td>
+      <td>${row.pricePerUnit.toLocaleString()} coins</td>
+      <td>${total.toLocaleString()} coins</td>
+    `;
+    if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
+    else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+    tbody.appendChild(tr);
+  }
+  tfootRow.innerHTML = `
+    <td>Total:</td>
+    <td>${totalAmount}</td>
+    <td></td>
+    <td>${totalCoins.toLocaleString()} coins</td>
+  `;
+}
+
+function highlightTrackedOrder(price) {
+  orderInfo.innerHTML = "";
+  if (!price || isNaN(price)) return;
+  const allRows = [...buyBody.children, ...sellBody.children];
+  allRows.forEach(row => row.classList.remove("highlight-blue"));
+  for (const [summary, body] of [
+    [latestBuySummary, buyBody],
+    [latestSellSummary, sellBody]
+  ]) {
+    let coinsBetween = 0, itemsBetween = 0, priority = 1;
+    for (const row of summary) {
+      const unit = parseFloat(row.pricePerUnit.toFixed(1));
+      if (Math.abs(unit - price) < 0.1) {
+        const index = summary.indexOf(row);
+        const tr = body.children[index];
+        if (tr) tr.classList.add("highlight-blue");
+        orderInfo.innerHTML = `
+          <div class="order-info">
+            <strong>Tracked Order Info</strong><br>
+            Priority position: ${priority}<br>
+            Items between: ${itemsBetween}<br>
+            Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
+            Items left in order: ${row.amount}
+          </div>
+        `;
+        return;
+      }
+      itemsBetween += row.amount;
+      coinsBetween += row.amount * row.pricePerUnit;
+      priority++;
+    }
+  }
+}
+
+fetchAllItems();
+setInterval(() => {
+  if (currentItemId) loadData(currentItemId);
+}, 3000);
+
+    </script>
+
+  </div>
+</body>
+</html>

commit 7debcb70f7e8586a82269bff92c385c0898c5827
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 09:35:31 2025 +0100

    Update index.html

diff --git a/public/index.html b/public/index.html
index e0230b2..eaed1cf 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,146 +1,167 @@
 <!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <title>SkyBlock Bazaar Tracker - Orders</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-  <style>
-    body {
-      margin: 0;
-      font-family: 'Segoe UI', sans-serif;
-      background-image: url('bgimage.jpeg');
-      background-size: cover;
-      background-attachment: fixed;
-      color: #fff;
-    }
-    .container {
-      max-width: 1200px;
-      margin: 40px auto;
-      background-color: rgba(0, 0, 0, 0.75);
-      padding: 30px;
-      border-radius: 16px;
-      position: relative;
-    }
-    .tabs {
-      display: flex;
-      gap: 10px;
-      position: absolute;
-      top: -40px;
-      left: 20px;
-    }
-    .tab {
-      padding: 8px 16px;
-      background-color: rgba(0, 0, 0, 0.6);
-      color: #fff;
-      text-decoration: none;
-      border-radius: 8px 8px 0 0;
-    }
-    .active-tab {
-      background-color: rgba(255,255,255,0.1);
-      border-bottom: 2px solid #00bfff;
-    }
-    input {
-      width: 100%;
-      padding: 10px;
-      font-size: 16px;
-      margin: 10px 0;
-      border-radius: 6px;
-      border: none;
-    }
-    table {
-      width: 100%;
-      border-collapse: collapse;
-      margin-bottom: 30px;
-      background-color: rgba(255, 255, 255, 0.05);
-    }
-    th, td {
-      padding: 10px;
-      text-align: center;
-      border: 1px solid rgba(255, 255, 255, 0.2);
-    }
-    th {
-      background-color: rgba(255, 255, 255, 0.1);
-    }
-    .highlight-yellow {
-      background-color: rgba(255, 255, 0, 0.2);
-    }
-    .highlight-red {
-      background-color: rgba(255, 0, 0, 0.4);
-    }
-    .highlight-blue {
-      background-color: rgba(0, 191, 255, 0.3);
-    }
-    .order-info {
-      margin: 20px auto;
-      max-width: 600px;
-      text-align: center;
-      background-color: rgba(255, 255, 255, 0.05);
-      padding: 20px;
-      border-radius: 10px;
-    }
-    .volume-box {
-      display: flex;
-      justify-content: space-around;
-      margin-bottom: 20px;
-      background-color: rgba(255,255,255,0.05);
-      padding: 20px;
-      border-radius: 12px;
-    }
-  </style>
-</head>
-<body>
+ <html lang="en">
+ <head>
+   <meta charset="UTF-8" />
+   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+   <title>SkyBlock Bazaar Tracker</title>
+   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+   <style>
+     body {
+       margin: 0;
+       font-family: 'Segoe UI', sans-serif;
+       background-image: url('bgimage.jpeg');
+       background-size: cover;
+       background-attachment: fixed;
+       color: #fff;
+     }
+     .container {
+       max-width: 1200px;
+       margin: 40px auto;
+       background-color: rgba(0, 0, 0, 0.75);
+       padding: 30px;
+       border-radius: 16px;
+     }
+     h1, h2, h3 {
+       text-align: center;
+     }
+     input {
+       width: 100%;
+       padding: 10px;
+       font-size: 16px;
+       margin: 10px 0 10px;
+       border-radius: 6px;
+       border: none;
+     }
+     table {
+       width: 100%;
+       border-collapse: collapse;
+       margin-bottom: 30px;
+       background-color: rgba(255, 255, 255, 0.05);
+     }
+     th, td {
+       padding: 10px;
+       text-align: center;
+       border: 1px solid rgba(255, 255, 255, 0.2);
+     }
+     th {
+       background-color: rgba(255, 255, 255, 0.1);
+     }
+     tfoot td {
+       font-weight: bold;
+     }
+     .tables {
+       display: flex;
+       gap: 20px;
+     }
+     .tables > div {
+       flex: 1;
+     }
+     .highlight-yellow {
+       background-color: rgba(255, 255, 0, 0.2);
+     }
+     .highlight-red {
+       background-color: rgba(255, 0, 0, 0.4);
+     }
+     .highlight-blue {
+       background-color: rgba(0, 191, 255, 0.3);
+     }
+     .order-info {
+       margin: 20px auto;
+       max-width: 600px;
+       text-align: center;
+       background-color: rgba(255, 255, 255, 0.05);
+       padding: 20px;
+       border-radius: 10px;
+     }
+     .volume-box {
+       display: flex;
+       justify-content: space-around;
+       margin-bottom: 20px;
+       background-color: rgba(255,255,255,0.05);
+       padding: 20px;
+       border-radius: 12px;
+     }
+     .dropdown {
+       background-color: rgba(0, 0, 0, 0.85);
+       border-radius: 8px;
+       padding: 10px;
+       max-height: 300px;
+       overflow-y: auto;
+       display: none;
+     }
+     .dropdown-item {
+       display: flex;
+       align-items: center;
+       justify-content: space-between;
+       padding: 8px 12px;
+       border-bottom: 1px solid rgba(255, 255, 255, 0.1);
+       cursor: pointer;
+     }
+     .dropdown-item:hover {
+       background-color: rgba(255, 255, 255, 0.1);
+     }
+     .dropdown-label {
+       display: flex;
+       align-items: center;
+     }
+     .dropdown-price {
+       background-color: goldenrod;
+       padding: 4px 8px;
+       border-radius: 6px;
+       font-weight: bold;
+       color: black;
+     }
+   </style>
+ </head>
+ <body>
   <div class="container">
-    <div class="tabs">
-      <a class="tab active-tab" href="index.html">Orders</a>
-      <a class="tab" href="volume-drain.html">Buy Order Volume Drain</a>
+    <div class="tabs" style="display: flex; gap: 10px; position: absolute; top: -40px; left: 20px;">
+      <a class="tab active-tab" href="index.html" style="padding: 8px 16px; background-color: rgba(0,0,0,0.6); color:#fff; text-decoration:none; border-radius:8px 8px 0 0; background-color:rgba(255,255,255,0.1); border-bottom:2px solid #00bfff;">Orders</a>
+      <a class="tab" href="volume-drain.html" style="padding: 8px 16px; background-color: rgba(0,0,0,0.6); color:#fff; text-decoration:none; border-radius:8px 8px 0 0;">Buy Order Volume Drain</a>
     </div>
-
-    <h1>SkyBlock Bazaar Tracker - Orders</h1>
-
+  
+    <h1>SkyBlock Bazaar Tracker</h1>
+  
     <div class="volume-box">
       <div>
         <strong>Instabuys / hour:</strong>
         <div id="instabuys"></div>
-      </div>
-      <div>
-        <strong>Instasells / hour:</strong>
-        <div id="instasells"></div>
-      </div>
-    </div>
-
-    <h3>Item ID:</h3>
-    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-    <div id="itemDropdown" class="dropdown"></div>
-
-    <h3>Track Order By Price:</h3>
-    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
-
-    <div id="orderInfo"></div>
-
-    <div class="tables">
-      <div>
-        <h2>Buy Orders</h2>
-        <table id="buyTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
-          <tbody></tbody>
-          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-        </table>
-      </div>
-      <div>
-        <h2>Sell Orders</h2>
-        <table id="sellTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
-          <tbody></tbody>
-          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-        </table>
-      </div>
-    </div>
-    <script>
+      </div>  
+ 
+     <h3>Item ID:</h3>
+     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+     <div id="itemDropdown" class="dropdown"></div>
+ 
+     <h3>Track Order By Price:</h3>
+     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+ 
+     <div id="orderInfo"></div>
+ 
+     <div class="tables">
+       <div>
+         <h2>Buy Orders</h2>
+         <table id="buyTable">
+           <thead>
+             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+           </thead>
+           <tbody></tbody>
+           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+         </table>
+       </div>
+       <div>
+         <h2>Sell Orders</h2>
+         <table id="sellTable">
+           <thead>
+             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+           </thead>
+           <tbody></tbody>
+           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+         </table>
+       </div>
+     </div>
+   </div>
+ 
+   <script>
      const itemInput = document.getElementById("itemInput");
      const trackInput = document.getElementById("trackInput");
      const buyBody = document.querySelector("#buyTable tbody");
@@ -290,6 +311,6 @@
        if (currentItemId) loadData(currentItemId);
      }, 3000);
    </script>
-  </div>
  </body>
+ </html>
  </html>
\ No newline at end of file

commit 1c89725c1aee247f115124c8a71dbf715655ecc6
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 09:25:14 2025 +0100

    Update index.html

diff --git a/public/index.html b/public/index.html
index edbe66b..e0230b2 100644
--- a/public/index.html
+++ b/public/index.html
@@ -140,9 +140,7 @@
         </table>
       </div>
     </div>
-   </div>
- 
-   <script>
+    <script>
      const itemInput = document.getElementById("itemInput");
      const trackInput = document.getElementById("trackInput");
      const buyBody = document.querySelector("#buyTable tbody");
@@ -292,5 +290,6 @@
        if (currentItemId) loadData(currentItemId);
      }, 3000);
    </script>
+  </div>
  </body>
  </html>
\ No newline at end of file

commit 253368d3fcb1350b5713e6834e58aed24bd9bf61
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 09:19:42 2025 +0100

    2nd tab #5

diff --git a/public/index.html b/public/index.html
index 0d6213d..edbe66b 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,164 +1,145 @@
 <!DOCTYPE html>
- <html lang="en">
- <head>
-   <meta charset="UTF-8" />
-   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-   <title>SkyBlock Bazaar Tracker</title>
-   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-   <style>
-     body {
-       margin: 0;
-       font-family: 'Segoe UI', sans-serif;
-       background-image: url('bgimage.jpeg');
-       background-size: cover;
-       background-attachment: fixed;
-       color: #fff;
-     }
-     .container {
-       max-width: 1200px;
-       margin: 40px auto;
-       background-color: rgba(0, 0, 0, 0.75);
-       padding: 30px;
-       border-radius: 16px;
-     }
-     h1, h2, h3 {
-       text-align: center;
-     }
-     input {
-       width: 100%;
-       padding: 10px;
-       font-size: 16px;
-       margin: 10px 0 10px;
-       border-radius: 6px;
-       border: none;
-     }
-     table {
-       width: 100%;
-       border-collapse: collapse;
-       margin-bottom: 30px;
-       background-color: rgba(255, 255, 255, 0.05);
-     }
-     th, td {
-       padding: 10px;
-       text-align: center;
-       border: 1px solid rgba(255, 255, 255, 0.2);
-     }
-     th {
-       background-color: rgba(255, 255, 255, 0.1);
-     }
-     tfoot td {
-       font-weight: bold;
-     }
-     .tables {
-       display: flex;
-       gap: 20px;
-     }
-     .tables > div {
-       flex: 1;
-     }
-     .highlight-yellow {
-       background-color: rgba(255, 255, 0, 0.2);
-     }
-     .highlight-red {
-       background-color: rgba(255, 0, 0, 0.4);
-     }
-     .highlight-blue {
-       background-color: rgba(0, 191, 255, 0.3);
-     }
-     .order-info {
-       margin: 20px auto;
-       max-width: 600px;
-       text-align: center;
-       background-color: rgba(255, 255, 255, 0.05);
-       padding: 20px;
-       border-radius: 10px;
-     }
-     .volume-box {
-       display: flex;
-       justify-content: space-around;
-       margin-bottom: 20px;
-       background-color: rgba(255,255,255,0.05);
-       padding: 20px;
-       border-radius: 12px;
-     }
-     .dropdown {
-       background-color: rgba(0, 0, 0, 0.85);
-       border-radius: 8px;
-       padding: 10px;
-       max-height: 300px;
-       overflow-y: auto;
-       display: none;
-     }
-     .dropdown-item {
-       display: flex;
-       align-items: center;
-       justify-content: space-between;
-       padding: 8px 12px;
-       border-bottom: 1px solid rgba(255, 255, 255, 0.1);
-       cursor: pointer;
-     }
-     .dropdown-item:hover {
-       background-color: rgba(255, 255, 255, 0.1);
-     }
-     .dropdown-label {
-       display: flex;
-       align-items: center;
-     }
-     .dropdown-price {
-       background-color: goldenrod;
-       padding: 4px 8px;
-       border-radius: 6px;
-       font-weight: bold;
-       color: black;
-     }
-   </style>
- </head>
- <body>
-   <div class="container">
-     <h1>SkyBlock Bazaar Tracker</h1>
- 
-     <div class="volume-box">
-       <div>
-         <strong>Instabuys / hour:</strong>
-         <div id="instabuys"></div>
-       </div>
-       <div>
-         <strong>Instasells / hour:</strong>
-         <div id="instasells"></div>
-       </div>
-     </div>
- 
-     <h3>Item ID:</h3>
-     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-     <div id="itemDropdown" class="dropdown"></div>
- 
-     <h3>Track Order By Price:</h3>
-     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
- 
-     <div id="orderInfo"></div>
- 
-     <div class="tables">
-       <div>
-         <h2>Buy Orders</h2>
-         <table id="buyTable">
-           <thead>
-             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-           </thead>
-           <tbody></tbody>
-           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-         </table>
-       </div>
-       <div>
-         <h2>Sell Orders</h2>
-         <table id="sellTable">
-           <thead>
-             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-           </thead>
-           <tbody></tbody>
-           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-         </table>
-       </div>
-     </div>
+<html lang="en">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>SkyBlock Bazaar Tracker - Orders</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <style>
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      color: #fff;
+    }
+    .container {
+      max-width: 1200px;
+      margin: 40px auto;
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 30px;
+      border-radius: 16px;
+      position: relative;
+    }
+    .tabs {
+      display: flex;
+      gap: 10px;
+      position: absolute;
+      top: -40px;
+      left: 20px;
+    }
+    .tab {
+      padding: 8px 16px;
+      background-color: rgba(0, 0, 0, 0.6);
+      color: #fff;
+      text-decoration: none;
+      border-radius: 8px 8px 0 0;
+    }
+    .active-tab {
+      background-color: rgba(255,255,255,0.1);
+      border-bottom: 2px solid #00bfff;
+    }
+    input {
+      width: 100%;
+      padding: 10px;
+      font-size: 16px;
+      margin: 10px 0;
+      border-radius: 6px;
+      border: none;
+    }
+    table {
+      width: 100%;
+      border-collapse: collapse;
+      margin-bottom: 30px;
+      background-color: rgba(255, 255, 255, 0.05);
+    }
+    th, td {
+      padding: 10px;
+      text-align: center;
+      border: 1px solid rgba(255, 255, 255, 0.2);
+    }
+    th {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    .highlight-yellow {
+      background-color: rgba(255, 255, 0, 0.2);
+    }
+    .highlight-red {
+      background-color: rgba(255, 0, 0, 0.4);
+    }
+    .highlight-blue {
+      background-color: rgba(0, 191, 255, 0.3);
+    }
+    .order-info {
+      margin: 20px auto;
+      max-width: 600px;
+      text-align: center;
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 20px;
+      border-radius: 10px;
+    }
+    .volume-box {
+      display: flex;
+      justify-content: space-around;
+      margin-bottom: 20px;
+      background-color: rgba(255,255,255,0.05);
+      padding: 20px;
+      border-radius: 12px;
+    }
+  </style>
+</head>
+<body>
+  <div class="container">
+    <div class="tabs">
+      <a class="tab active-tab" href="index.html">Orders</a>
+      <a class="tab" href="volume-drain.html">Buy Order Volume Drain</a>
+    </div>
+
+    <h1>SkyBlock Bazaar Tracker - Orders</h1>
+
+    <div class="volume-box">
+      <div>
+        <strong>Instabuys / hour:</strong>
+        <div id="instabuys"></div>
+      </div>
+      <div>
+        <strong>Instasells / hour:</strong>
+        <div id="instasells"></div>
+      </div>
+    </div>
+
+    <h3>Item ID:</h3>
+    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+    <div id="itemDropdown" class="dropdown"></div>
+
+    <h3>Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+
+    <div id="orderInfo"></div>
+
+    <div class="tables">
+      <div>
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+      <div>
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+    </div>
    </div>
  
    <script>
@@ -312,5 +293,4 @@
      }, 3000);
    </script>
  </body>
- </html>
  </html>
\ No newline at end of file
diff --git a/public/volume-drain.html b/public/volume-drain.html
index f414955..8da3ada 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -16,144 +16,111 @@
     }
     .container {
       max-width: 1200px;
-      margin: 0 auto;
+      margin: 40px auto;
+      background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
+      border-radius: 16px;
+      position: relative;
     }
     .tabs {
       display: flex;
-      align-items: center;
-      background-color: rgba(0, 0, 0, 0.75);
-      padding: 8px 20px;
-      border-bottom: 2px solid rgba(255, 255, 255, 0.15);
-      position: sticky;
-      top: 0;
-      z-index: 10;
-      border-radius: 0 0 12px 12px;
+      gap: 10px;
+      position: absolute;
+      top: -40px;
+      left: 20px;
     }
     .tab {
-      padding: 10px 20px;
-      cursor: pointer;
-      background-color: rgba(255, 255, 255, 0.15);
-      border-radius: 10px 10px 0 0;
-      margin-right: 12px;
-      font-weight: bold;
-      transition: background-color 0.2s;
-    }
-    .tab.active {
-      background-color: rgba(255, 255, 255, 0.35);
+      padding: 8px 16px;
+      background-color: rgba(0, 0, 0, 0.6);
+      color: #fff;
+      text-decoration: none;
+      border-radius: 8px 8px 0 0;
     }
-    .tab:hover {
-      background-color: rgba(255, 255, 255, 0.25);
-    }
-    h1, h2, h3 {
-      text-align: center;
+    .active-tab {
+      background-color: rgba(255,255,255,0.1);
+      border-bottom: 2px solid #00bfff;
     }
     table {
       width: 100%;
       border-collapse: collapse;
-      margin-bottom: 30px;
-      background-color: rgba(0, 0, 0, 0.7);
+      margin-top: 20px;
     }
     th, td {
       padding: 10px;
-      text-align: center;
       border: 1px solid rgba(255, 255, 255, 0.2);
+      text-align: center;
     }
     th {
-      background-color: rgba(255, 255, 255, 0.1);
+      background-color: rgba(255,255,255,0.1);
     }
   </style>
 </head>
 <body>
-  <div class="tabs">
-    <div class="tab" onclick="window.location.href='index.html'">Orders</div>
-    <div class="tab active">Buy Order Volume Drain</div>
-  </div>
-
   <div class="container">
-    <h1>Buy Order Volume Drain</h1>
-    <div id="priceDropCategories">
-      <p>Loading data...</p>
+    <div class="tabs">
+      <a class="tab" href="index.html">Orders</a>
+      <a class="tab active-tab" href="volume-drain.html">Buy Order Volume Drain</a>
     </div>
+
+    <h1>Buy Order Volume Drain</h1>
+    <div id="tables"></div>
   </div>
 
-  <script>
-    async function loadBuyOrderVolumeDrain() {
-      const container = document.getElementById("priceDropCategories");
+<script>
+const itemsToTrack = ["PERFECT_AMBER_GEM","PERFECT_TOPAZ_GEM","PERFECT_SAPPHIRE_GEM","PERFECT_AMETHYST_GEM","PERFECT_JASPER_GEM","PERFECT_RUBY_GEM","PERFECT_JADE_GEM","PERFECT_OPAL_GEM","PERFECT_AQUAMARINE_GEM","PERFECT_CITRINE_GEM","PERFECT_ONYX_GEM","FLAWLESS_PERIDOT_GEM","UMBER_PLATE","TUNGSTEN_PLATE","MITHRIL_PLATE","PERFECT_PLATE","GOLDEN_PLATE","TITANIUM_TESSERACT","HOT_STUFF","FRIGID_HUSK","TUNGSTEN_KEY","UMBER_KEY","SKELETON_KEY"];
 
-      const itemsToCheck = [
-        "PERFECT_AMBER_GEM", "PERFECT_TOPAZ_GEM", "PERFECT_SAPPHIRE_GEM", "PERFECT_AMETHYST_GEM", "PERFECT_JASPER_GEM",
-        "PERFECT_RUBY_GEM", "PERFECT_JADE_GEM", "PERFECT_OPAL_GEM", "PERFECT_AQUAMARINE_GEM", "PERFECT_CITRINE_GEM",
-        "PERFECT_ONYX_GEM", "PERFECT_PERIDOT_GEM", "UMBER_PLATE", "TUNGSTEN_PLATE", "MITHRIL_PLATE",
-        "PERFECT_PLATE", "GOLDEN_PLATE", "TITANIUM_TESSERACT", "HOT_STUFF", "FRIGID_HUSK", "TUNGSTEN_KEY", "UMBER_KEY", "SKELETON_KEY"
-      ];
+async function fetchData() {
+  const apiKey = "YOUR_API_KEY_HERE";
+  const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+  const json = await res.json();
+  categorizeItems(json.products);
+}
 
-      const apiKey = "YOUR_API_KEY_HERE";
-      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-      const json = await res.json();
-      const data = json.products;
+function categorizeItems(products) {
+  let cat1=[], cat2=[], cat3=[];
 
-      const categories = {
-        "Under Price Drop": [],
-        "About To Price Drop": [],
-        "Not Price Dropping": []
-      };
+  itemsToTrack.forEach(id => {
+    const data = products[id];
+    if (!data) return;
+    const sellPrice = data.quick_status.sellPrice;
+    const buyOrders = data.buy_summary;
+    const instaSellsHour = data.quick_status.sellMovingWeek / 168;
 
-      for (const id of itemsToCheck) {
-        const product = data[id];
-        if (!product || !product.buy_summary.length || !product.quick_status.sellMovingWeek) continue;
+    if (!buyOrders.length) return;
 
-        const buyOrders = product.buy_summary;
-        const avg = buyOrders.reduce((acc, o) => acc + o.pricePerUnit, 0) / buyOrders.length;
-        let category = "Not Price Dropping";
-        let dropData = null;
+    const activePrice = buyOrders[0].pricePerUnit;
+    const percentDrop = ((sellPrice - activePrice) / sellPrice) * 100;
 
-        if (buyOrders[0].pricePerUnit < 0.5 * avg) {
-          category = "Under Price Drop";
-        } else {
-          for (let i = 0; i < buyOrders.length - 1; i++) {
-            const current = buyOrders[i];
-            const next = buyOrders[i + 1];
-            const drop = 1 - (next.pricePerUnit / current.pricePerUnit);
-            const itemsBetween = buyOrders.slice(0, i + 1).reduce((a, b) => a + b.amount, 0);
-            const coinGap = buyOrders.slice(0, i + 1).reduce((a, b) => a + b.amount * b.pricePerUnit, 0);
-            const volumePerHour = product.quick_status.sellMovingWeek / 168;
-            if (drop > 0.15 && itemsBetween < 10 * volumePerHour) {
-              category = "About To Price Drop";
-              dropData = {
-                drop: (drop * 100).toFixed(1) + "%",
-                items: itemsBetween,
-                coins: Math.round(coinGap).toLocaleString() + " coins",
-                score: (Math.E * drop * volumePerHour / (itemsBetween || 1)),
-              };
-              break;
-            }
-          }
+    if (percentDrop > 50) cat1.push([id, percentDrop.toFixed(1), buyOrders[0].amount, (sellPrice - activePrice).toFixed(1)]);
+    else {
+      let found = false;
+      for (let i = 1; i < buyOrders.length; i++) {
+        const dropPerc = ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)/buyOrders[i-1].pricePerUnit)*100;
+        const volumeBetween = buyOrders.slice(0,i).reduce((a,c)=>a+c.amount,0);
+        if (dropPerc > 15 && volumeBetween < 10*instaSellsHour) {
+          const score = (Math.E*(1-(buyOrders[i].pricePerUnit/buyOrders[i-1].pricePerUnit))*instaSellsHour)/volumeBetween;
+          cat2.push([id, dropPerc.toFixed(1), volumeBetween, ((buyOrders[i-1].pricePerUnit - buyOrders[i].pricePerUnit)*volumeBetween).toFixed(1), score]);
+          found=true;
+          break;
         }
-
-        const name = id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase());
-        categories[category].push({
-          name,
-          drop: dropData?.drop || "-0.0%",
-          items: dropData?.items || 0,
-          coins: dropData?.coins || "-",
-          score: dropData?.score || 0
-        });
       }
-
-      container.innerHTML = Object.entries(categories).map(([cat, rows]) => `
-        <h3>${cat}</h3>
-        <table><thead>
-        <tr><th>Item Name</th><th>% Price Decrease</th><th>Item Volume</th><th>Coin Gap</th></tr>
-        </thead><tbody>
-        ${rows.sort((a, b) => cat === 'About To Price Drop' ? b.score - a.score : 0).map(row => `
-          <tr><td>${row.name}</td><td>${row.drop}</td><td>${row.items}</td><td>${row.coins}</td></tr>
-        `).join('')}
-        </tbody></table>
-      `).join('');
+      if (!found) cat3.push([id, percentDrop.toFixed(1), buyOrders[0].amount, (sellPrice - activePrice).toFixed(1)]);
     }
+  });
+
+  cat2.sort((a,b)=>b[4]-a[4]);
+
+  document.getElementById('tables').innerHTML=[['Under Price Drop',cat1],['About To Price Drop',cat2],['Not Price Dropping',cat3]].map(cat=>`
+    <h2>${cat[0]}</h2>
+    <table>
+      <tr><th>Item</th><th>% Price Decrease</th><th>Item Volume</th><th>Coins Gap</th></tr>
+      ${cat[1].map(row=>`<tr><td>${row[0]}</td><td>${row[1]}%</td><td>${row[2]}</td><td>${row[3]}</td></tr>`).join('')}
+    </table>
+  `).join('');
+}
 
-    loadBuyOrderVolumeDrain();
-  </script>
+fetchData();
+setInterval(fetchData,30000);
+</script>
 </body>
-</html>
\ No newline at end of file
+</html>

commit a35ac81908158a0befe5723ef2dae30ccad67725
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:56:11 2025 +0100

    Update index.html

diff --git a/public/index.html b/public/index.html
index af08e3a..0d6213d 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,342 +1,316 @@
 <!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-  <style>
-    body {
-      margin: 0;
-      font-family: 'Segoe UI', sans-serif;
-      background-image: url('bgimage.jpeg');
-      background-size: cover;
-      background-attachment: fixed;
-      color: #fff;
-    }
-    .container {
-      max-width: 1200px;
-      margin: 0 auto;
-      padding: 30px;
-    }
-    .tabs {
-      display: flex;
-      align-items: center;
-      background-color: rgba(0, 0, 0, 0.75);
-      padding: 8px 20px;
-      border-bottom: 2px solid rgba(255, 255, 255, 0.15);
-      position: sticky;
-      top: 0;
-      z-index: 10;
-      border-radius: 0 0 12px 12px;
-    }
-    .tab {
-      padding: 10px 20px;
-      cursor: pointer;
-      background-color: rgba(255, 255, 255, 0.15);
-      border-radius: 10px 10px 0 0;
-      margin-right: 12px;
-      font-weight: bold;
-      transition: background-color 0.2s;
-    }
-    .tab.active {
-      background-color: rgba(255, 255, 255, 0.35);
-    }
-    .tab:hover {
-      background-color: rgba(255, 255, 255, 0.25);
-    }
-    h1, h2, h3 {
-      text-align: center;
-    }
-    input {
-      width: 100%;
-      padding: 10px;
-      font-size: 16px;
-      margin: 10px 0 10px;
-      border-radius: 6px;
-      border: none;
-    }
-    table {
-      width: 100%;
-      border-collapse: collapse;
-      margin-bottom: 30px;
-      background-color: rgba(255, 255, 255, 0.05);
-    }
-    th, td {
-      padding: 10px;
-      text-align: center;
-      border: 1px solid rgba(255, 255, 255, 0.2);
-    }
-    th {
-      background-color: rgba(255, 255, 255, 0.1);
-    }
-    tfoot td {
-      font-weight: bold;
-    }
-    .tables {
-      display: flex;
-      gap: 20px;
-    }
-    .tables > div {
-      flex: 1;
-    }
-    .highlight-yellow {
-      background-color: rgba(255, 255, 0, 0.2);
-    }
-    .highlight-red {
-      background-color: rgba(255, 0, 0, 0.4);
-    }
-    .highlight-blue {
-      background-color: rgba(0, 191, 255, 0.3);
-    }
-    .order-info {
-      margin: 20px auto;
-      max-width: 600px;
-      text-align: center;
-      background-color: rgba(255, 255, 255, 0.05);
-      padding: 20px;
-      border-radius: 10px;
-    }
-    .volume-box {
-      display: flex;
-      justify-content: space-around;
-      margin-bottom: 20px;
-      background-color: rgba(255,255,255,0.05);
-      padding: 20px;
-      border-radius: 12px;
-    }
-    .dropdown {
-      background-color: rgba(0, 0, 0, 0.85);
-      border-radius: 8px;
-      padding: 10px;
-      max-height: 300px;
-      overflow-y: auto;
-      display: none;
-    }
-    .dropdown-item {
-      display: flex;
-      align-items: center;
-      justify-content: space-between;
-      padding: 8px 12px;
-      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
-      cursor: pointer;
-    }
-    .dropdown-item:hover {
-      background-color: rgba(255, 255, 255, 0.1);
-    }
-    .dropdown-label {
-      display: flex;
-      align-items: center;
-    }
-    .dropdown-price {
-      background-color: goldenrod;
-      padding: 4px 8px;
-      border-radius: 6px;
-      font-weight: bold;
-      color: black;
-    }
-  </style>
-</head>
-<body>
-  <div class="tabs">
-    <div class="tab active">Orders</div>
-    <div class="tab" onclick="window.location.href='volume-drain.html'">Buy Order Volume Drain</div>
-  </div>
-
-  <div class="container">
-    <h1>SkyBlock Bazaar Tracker</h1>
-
-    <div class="volume-box">
-      <div>
-        <strong>Instabuys / hour:</strong>
-        <div id="instabuys"></div>
-      </div>
-      <div>
-        <strong>Instasells / hour:</strong>
-        <div id="instasells"></div>
-      </div>
-    </div>
-
-    <h3>Item ID:</h3>
-    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-    <div id="itemDropdown" class="dropdown"></div>
-
-    <h3>Track Order By Price:</h3>
-    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
-
-    <div id="orderInfo"></div>
-
-    <div class="tables">
-      <div>
-        <h2>Buy Orders</h2>
-        <table id="buyTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
-          <tbody></tbody>
-          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-        </table>
-      </div>
-      <div>
-        <h2>Sell Orders</h2>
-        <table id="sellTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
-          <tbody></tbody>
-          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-        </table>
-      </div>
-    </div>
-  </div>
-
-  <script>
-    const itemInput = document.getElementById("itemInput");
-    const trackInput = document.getElementById("trackInput");
-    const buyBody = document.querySelector("#buyTable tbody");
-    const sellBody = document.querySelector("#sellTable tbody");
-    const buyFoot = document.querySelector("#buyTable tfoot tr");
-    const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const instabuys = document.getElementById("instabuys");
-    const instasells = document.getElementById("instasells");
-    const orderInfo = document.getElementById("orderInfo");
-    const itemDropdown = document.getElementById("itemDropdown");
-
-    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
-    let allItems = [];
-
-    async function getApiKey() {
-      return "YOUR_API_KEY_HERE";
-    }
-
-    async function fetchAllItems() {
-      const apiKey = await getApiKey();
-      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-      const json = await res.json();
-      const products = json.products;
-      allItems = Object.keys(products).map(id => {
-        const quick = products[id].quick_status;
-        const price = quick.sellPrice > 1e6 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
-        return {
-          id,
-          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-          price
-        };
-      });
-    }
-
-    itemInput.addEventListener("input", () => {
-      const query = itemInput.value.trim().toLowerCase();
-      itemDropdown.innerHTML = "";
-      if (!query) return (itemDropdown.style.display = "none");
-      const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
-      for (const item of filtered.slice(0, 50)) {
-        const div = document.createElement("div");
-        div.className = "dropdown-item";
-        div.innerHTML = `
-          <div class="dropdown-label">${item.name}</div>
-          <div class="dropdown-price">${item.price} /bz</div>
-        `;
-        div.onclick = () => {
-          itemInput.value = item.id;
-          itemDropdown.style.display = "none";
-          currentItemId = item.id;
-          loadData(item.id);
-        };
-        itemDropdown.appendChild(div);
-      }
-      itemDropdown.style.display = "block";
-    });
-
-    trackInput.addEventListener("change", () => {
-      const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
-      highlightTrackedOrder(tracked);
-    });
-
-    async function loadData(itemId) {
-      const apiKey = await getApiKey();
-      try {
-        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-        const json = await res.json();
-        const data = json.products[itemId];
-        if (!data) throw new Error("Item not found");
-        instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
-        instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
-        latestBuySummary = data.sell_summary;
-        latestSellSummary = data.buy_summary;
-        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
-        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
-        highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
-      } catch (err) {
-        alert("Failed to load data. Check the item ID and API key.");
-        console.error(err);
-      }
-    }
-
-    function renderTable(summary, tbody, tfootRow, hourlyVolume) {
-      tbody.innerHTML = "";
-      let totalAmount = 0, totalCoins = 0;
-      for (const row of summary) {
-        const total = row.amount * row.pricePerUnit;
-        totalAmount += row.amount;
-        totalCoins += total;
-        const tr = document.createElement("tr");
-        tr.innerHTML = `
-          <td>${row.orders}</td>
-          <td>${row.amount}</td>
-          <td>${row.pricePerUnit.toLocaleString()} coins</td>
-          <td>${total.toLocaleString()} coins</td>
-        `;
-        if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
-        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-        tbody.appendChild(tr);
-      }
-      tfootRow.innerHTML = `
-        <td>Total:</td>
-        <td>${totalAmount}</td>
-        <td></td>
-        <td>${totalCoins.toLocaleString()} coins</td>
-      `;
-    }
-
-    function highlightTrackedOrder(price) {
-      orderInfo.innerHTML = "";
-      if (!price || isNaN(price)) return;
-      const allRows = [...buyBody.children, ...sellBody.children];
-      allRows.forEach(row => row.classList.remove("highlight-blue"));
-      for (const [summary, body] of [
-        [latestBuySummary, buyBody],
-        [latestSellSummary, sellBody]
-      ]) {
-        let coinsBetween = 0, itemsBetween = 0, priority = 1;
-        for (const row of summary) {
-          const unit = parseFloat(row.pricePerUnit.toFixed(1));
-          if (Math.abs(unit - price) < 0.1) {
-            const index = summary.indexOf(row);
-            const tr = body.children[index];
-            if (tr) tr.classList.add("highlight-blue");
-            orderInfo.innerHTML = `
-              <div class="order-info">
-                <strong>Tracked Order Info</strong><br>
-                Priority position: ${priority}<br>
-                Items between: ${itemsBetween}<br>
-                Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
-                Items left in order: ${row.amount}
-              </div>
-            `;
-            return;
-          }
-          itemsBetween += row.amount;
-          coinsBetween += row.amount * row.pricePerUnit;
-          priority++;
-        }
-      }
-    }
-
-    fetchAllItems();
-    setInterval(() => {
-      if (currentItemId) loadData(currentItemId);
-    }, 3000);
-  </script>
-</body>
-</html>
+ <html lang="en">
+ <head>
+   <meta charset="UTF-8" />
+   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+   <title>SkyBlock Bazaar Tracker</title>
+   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+   <style>
+     body {
+       margin: 0;
+       font-family: 'Segoe UI', sans-serif;
+       background-image: url('bgimage.jpeg');
+       background-size: cover;
+       background-attachment: fixed;
+       color: #fff;
+     }
+     .container {
+       max-width: 1200px;
+       margin: 40px auto;
+       background-color: rgba(0, 0, 0, 0.75);
+       padding: 30px;
+       border-radius: 16px;
+     }
+     h1, h2, h3 {
+       text-align: center;
+     }
+     input {
+       width: 100%;
+       padding: 10px;
+       font-size: 16px;
+       margin: 10px 0 10px;
+       border-radius: 6px;
+       border: none;
+     }
+     table {
+       width: 100%;
+       border-collapse: collapse;
+       margin-bottom: 30px;
+       background-color: rgba(255, 255, 255, 0.05);
+     }
+     th, td {
+       padding: 10px;
+       text-align: center;
+       border: 1px solid rgba(255, 255, 255, 0.2);
+     }
+     th {
+       background-color: rgba(255, 255, 255, 0.1);
+     }
+     tfoot td {
+       font-weight: bold;
+     }
+     .tables {
+       display: flex;
+       gap: 20px;
+     }
+     .tables > div {
+       flex: 1;
+     }
+     .highlight-yellow {
+       background-color: rgba(255, 255, 0, 0.2);
+     }
+     .highlight-red {
+       background-color: rgba(255, 0, 0, 0.4);
+     }
+     .highlight-blue {
+       background-color: rgba(0, 191, 255, 0.3);
+     }
+     .order-info {
+       margin: 20px auto;
+       max-width: 600px;
+       text-align: center;
+       background-color: rgba(255, 255, 255, 0.05);
+       padding: 20px;
+       border-radius: 10px;
+     }
+     .volume-box {
+       display: flex;
+       justify-content: space-around;
+       margin-bottom: 20px;
+       background-color: rgba(255,255,255,0.05);
+       padding: 20px;
+       border-radius: 12px;
+     }
+     .dropdown {
+       background-color: rgba(0, 0, 0, 0.85);
+       border-radius: 8px;
+       padding: 10px;
+       max-height: 300px;
+       overflow-y: auto;
+       display: none;
+     }
+     .dropdown-item {
+       display: flex;
+       align-items: center;
+       justify-content: space-between;
+       padding: 8px 12px;
+       border-bottom: 1px solid rgba(255, 255, 255, 0.1);
+       cursor: pointer;
+     }
+     .dropdown-item:hover {
+       background-color: rgba(255, 255, 255, 0.1);
+     }
+     .dropdown-label {
+       display: flex;
+       align-items: center;
+     }
+     .dropdown-price {
+       background-color: goldenrod;
+       padding: 4px 8px;
+       border-radius: 6px;
+       font-weight: bold;
+       color: black;
+     }
+   </style>
+ </head>
+ <body>
+   <div class="container">
+     <h1>SkyBlock Bazaar Tracker</h1>
+ 
+     <div class="volume-box">
+       <div>
+         <strong>Instabuys / hour:</strong>
+         <div id="instabuys"></div>
+       </div>
+       <div>
+         <strong>Instasells / hour:</strong>
+         <div id="instasells"></div>
+       </div>
+     </div>
+ 
+     <h3>Item ID:</h3>
+     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+     <div id="itemDropdown" class="dropdown"></div>
+ 
+     <h3>Track Order By Price:</h3>
+     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+ 
+     <div id="orderInfo"></div>
+ 
+     <div class="tables">
+       <div>
+         <h2>Buy Orders</h2>
+         <table id="buyTable">
+           <thead>
+             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+           </thead>
+           <tbody></tbody>
+           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+         </table>
+       </div>
+       <div>
+         <h2>Sell Orders</h2>
+         <table id="sellTable">
+           <thead>
+             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+           </thead>
+           <tbody></tbody>
+           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+         </table>
+       </div>
+     </div>
+   </div>
+ 
+   <script>
+     const itemInput = document.getElementById("itemInput");
+     const trackInput = document.getElementById("trackInput");
+     const buyBody = document.querySelector("#buyTable tbody");
+     const sellBody = document.querySelector("#sellTable tbody");
+     const buyFoot = document.querySelector("#buyTable tfoot tr");
+     const sellFoot = document.querySelector("#sellTable tfoot tr");
+     const instabuys = document.getElementById("instabuys");
+     const instasells = document.getElementById("instasells");
+     const orderInfo = document.getElementById("orderInfo");
+     const itemDropdown = document.getElementById("itemDropdown");
+ 
+     let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+     let allItems = [];
+ 
+     async function getApiKey() {
+       return "YOUR_API_KEY_HERE";
+     }
+ 
+     async function fetchAllItems() {
+       const apiKey = await getApiKey();
+       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+       const json = await res.json();
+       const products = json.products;
+       allItems = Object.keys(products).map(id => {
+         const quick = products[id].quick_status;
+         const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
+         return {
+           id,
+           name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+           price
+         };
+       });
+     }
+ 
+     itemInput.addEventListener("input", () => {
+       const query = itemInput.value.trim().toLowerCase();
+       itemDropdown.innerHTML = "";
+       if (!query) return (itemDropdown.style.display = "none");
+       const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+       for (const item of filtered.slice(0, 50)) {
+         const div = document.createElement("div");
+         div.className = "dropdown-item";
+         div.innerHTML = `
+           <div class="dropdown-label">
+             ${item.name}
+           </div>
+           <div class="dropdown-price">${item.price} /bz</div>
+         `;
+         div.onclick = () => {
+           itemInput.value = item.id;
+           itemDropdown.style.display = "none";
+           currentItemId = item.id;
+           loadData(item.id);
+         };
+         itemDropdown.appendChild(div);
+       }
+       itemDropdown.style.display = "block";
+     });
+ 
+     trackInput.addEventListener("change", () => {
+       const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
+       highlightTrackedOrder(tracked);
+     });
+ 
+     async function loadData(itemId) {
+       const apiKey = await getApiKey();
+       try {
+         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+         const json = await res.json();
+         const data = json.products[itemId];
+         if (!data) throw new Error("Item not found");
+         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
+         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
+         latestBuySummary = data.sell_summary;
+         latestSellSummary = data.buy_summary;
+         renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+         renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
+       } catch (err) {
+         alert("Failed to load data. Check the item ID and API key.");
+         console.error(err);
+       }
+     }
+ 
+     function renderTable(summary, tbody, tfootRow, hourlyVolume) {
+       tbody.innerHTML = "";
+       let totalAmount = 0, totalCoins = 0;
+       for (const row of summary) {
+         const total = row.amount * row.pricePerUnit;
+         totalAmount += row.amount;
+         totalCoins += total;
+         const tr = document.createElement("tr");
+         tr.innerHTML = `
+           <td>${row.orders}</td>
+           <td>${row.amount}</td>
+           <td>${row.pricePerUnit.toLocaleString()} coins</td>
+           <td>${total.toLocaleString()} coins</td>
+         `;
+         if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
+         else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+         tbody.appendChild(tr);
+       }
+       tfootRow.innerHTML = `
+         <td>Total:</td>
+         <td>${totalAmount}</td>
+         <td></td>
+         <td>${totalCoins.toLocaleString()} coins</td>
+       `;
+     }
+ 
+     function highlightTrackedOrder(price) {
+       orderInfo.innerHTML = "";
+       if (!price || isNaN(price)) return;
+       const allRows = [...buyBody.children, ...sellBody.children];
+       allRows.forEach(row => row.classList.remove("highlight-blue"));
+       for (const [summary, body] of [
+         [latestBuySummary, buyBody],
+         [latestSellSummary, sellBody]
+       ]) {
+         let coinsBetween = 0, itemsBetween = 0, priority = 1;
+         for (const row of summary) {
+           const unit = parseFloat(row.pricePerUnit.toFixed(1));
+           if (Math.abs(unit - price) < 0.1) {
+             const index = summary.indexOf(row);
+             const tr = body.children[index];
+             if (tr) tr.classList.add("highlight-blue");
+             orderInfo.innerHTML = `
+               <div class="order-info">
+                 <strong>Tracked Order Info</strong><br>
+                 Priority position: ${priority}<br>
+                 Items between: ${itemsBetween}<br>
+                 Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
+                 Items left in order: ${row.amount}
+               </div>
+             `;
+             return;
+           }
+           itemsBetween += row.amount;
+           coinsBetween += row.amount * row.pricePerUnit;
+           priority++;
+         }
+       }
+     }
+ 
+     fetchAllItems();
+     setInterval(() => {
+       if (currentItemId) loadData(currentItemId);
+     }, 3000);
+   </script>
+ </body>
+ </html>
+ </html>
\ No newline at end of file

commit 66949fc64b3bdbed2f9120da2f59206f71b8515a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:52:04 2025 +0100

    Update index.html

diff --git a/public/index.html b/public/index.html
index 701eb07..af08e3a 100644
--- a/public/index.html
+++ b/public/index.html
@@ -144,10 +144,6 @@
   </div>
 
   <div class="container">
-    <h1>SkyBlock Bazaar Tracker</h1>
-      <button class="nav-button" onclick="window.location.href='volume-drain.html'">Buy Order Volume Drain</button>
-    </div>
-
     <h1>SkyBlock Bazaar Tracker</h1>
 
     <div class="volume-box">
@@ -161,190 +157,186 @@
       </div>
     </div>
 
- 
-     <h3>Item ID:</h3>
-     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-     <div id="itemDropdown" class="dropdown"></div>
- 
-     <h3>Track Order By Price:</h3>
-     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
- 
-     <div id="orderInfo"></div>
- 
-     <div class="tables">
-       <div>
-         <h2>Buy Orders</h2>
-         <table id="buyTable">
-           <thead>
-             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-           </thead>
-           <tbody></tbody>
-           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-         </table>
-       </div>
-       <div>
-         <h2>Sell Orders</h2>
-         <table id="sellTable">
-           <thead>
-             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-           </thead>
-           <tbody></tbody>
-           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-         </table>
-       </div>
-     </div>
-   </div>
- 
-   <script>
-     const itemInput = document.getElementById("itemInput");
-     const trackInput = document.getElementById("trackInput");
-     const buyBody = document.querySelector("#buyTable tbody");
-     const sellBody = document.querySelector("#sellTable tbody");
-     const buyFoot = document.querySelector("#buyTable tfoot tr");
-     const sellFoot = document.querySelector("#sellTable tfoot tr");
-     const instabuys = document.getElementById("instabuys");
-     const instasells = document.getElementById("instasells");
-     const orderInfo = document.getElementById("orderInfo");
-     const itemDropdown = document.getElementById("itemDropdown");
- 
-     let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
-     let allItems = [];
- 
-     async function getApiKey() {
-       return "YOUR_API_KEY_HERE";
-     }
- 
-     async function fetchAllItems() {
-       const apiKey = await getApiKey();
-       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-       const json = await res.json();
-       const products = json.products;
-       allItems = Object.keys(products).map(id => {
-         const quick = products[id].quick_status;
-         const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
-         return {
-           id,
-           name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-           price
-         };
-       });
-     }
- 
-     itemInput.addEventListener("input", () => {
-       const query = itemInput.value.trim().toLowerCase();
-       itemDropdown.innerHTML = "";
-       if (!query) return (itemDropdown.style.display = "none");
-       const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
-       for (const item of filtered.slice(0, 50)) {
-         const div = document.createElement("div");
-         div.className = "dropdown-item";
-         div.innerHTML = `
-           <div class="dropdown-label">
-             ${item.name}
-           </div>
-           <div class="dropdown-price">${item.price} /bz</div>
-         `;
-         div.onclick = () => {
-           itemInput.value = item.id;
-           itemDropdown.style.display = "none";
-           currentItemId = item.id;
-           loadData(item.id);
-         };
-         itemDropdown.appendChild(div);
-       }
-       itemDropdown.style.display = "block";
-     });
- 
-     trackInput.addEventListener("change", () => {
-       const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
-       highlightTrackedOrder(tracked);
-     });
- 
-     async function loadData(itemId) {
-       const apiKey = await getApiKey();
-       try {
-         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-         const json = await res.json();
-         const data = json.products[itemId];
-         if (!data) throw new Error("Item not found");
-         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
-         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
-         latestBuySummary = data.sell_summary;
-         latestSellSummary = data.buy_summary;
-         renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
-         renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
-         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
-       } catch (err) {
-         alert("Failed to load data. Check the item ID and API key.");
-         console.error(err);
-       }
-     }
- 
-     function renderTable(summary, tbody, tfootRow, hourlyVolume) {
-       tbody.innerHTML = "";
-       let totalAmount = 0, totalCoins = 0;
-       for (const row of summary) {
-         const total = row.amount * row.pricePerUnit;
-         totalAmount += row.amount;
-         totalCoins += total;
-         const tr = document.createElement("tr");
-         tr.innerHTML = `
-           <td>${row.orders}</td>
-           <td>${row.amount}</td>
-           <td>${row.pricePerUnit.toLocaleString()} coins</td>
-           <td>${total.toLocaleString()} coins</td>
-         `;
-         if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
-         else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-         tbody.appendChild(tr);
-       }
-       tfootRow.innerHTML = `
-         <td>Total:</td>
-         <td>${totalAmount}</td>
-         <td></td>
-         <td>${totalCoins.toLocaleString()} coins</td>
-       `;
-     }
- 
-     function highlightTrackedOrder(price) {
-       orderInfo.innerHTML = "";
-       if (!price || isNaN(price)) return;
-       const allRows = [...buyBody.children, ...sellBody.children];
-       allRows.forEach(row => row.classList.remove("highlight-blue"));
-       for (const [summary, body] of [
-         [latestBuySummary, buyBody],
-         [latestSellSummary, sellBody]
-       ]) {
-         let coinsBetween = 0, itemsBetween = 0, priority = 1;
-         for (const row of summary) {
-           const unit = parseFloat(row.pricePerUnit.toFixed(1));
-           if (Math.abs(unit - price) < 0.1) {
-             const index = summary.indexOf(row);
-             const tr = body.children[index];
-             if (tr) tr.classList.add("highlight-blue");
-             orderInfo.innerHTML = `
-               <div class="order-info">
-                 <strong>Tracked Order Info</strong><br>
-                 Priority position: ${priority}<br>
-                 Items between: ${itemsBetween}<br>
-                 Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
-                 Items left in order: ${row.amount}
-               </div>
-             `;
-             return;
-           }
-           itemsBetween += row.amount;
-           coinsBetween += row.amount * row.pricePerUnit;
-           priority++;
-         }
-       }
-     }
- 
-     fetchAllItems();
-     setInterval(() => {
-       if (currentItemId) loadData(currentItemId);
-     }, 3000);
-   </script>
- </body>
- </html>
- </html>
\ No newline at end of file
+    <h3>Item ID:</h3>
+    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+    <div id="itemDropdown" class="dropdown"></div>
+
+    <h3>Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+
+    <div id="orderInfo"></div>
+
+    <div class="tables">
+      <div>
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+      <div>
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+    </div>
+  </div>
+
+  <script>
+    const itemInput = document.getElementById("itemInput");
+    const trackInput = document.getElementById("trackInput");
+    const buyBody = document.querySelector("#buyTable tbody");
+    const sellBody = document.querySelector("#sellTable tbody");
+    const buyFoot = document.querySelector("#buyTable tfoot tr");
+    const sellFoot = document.querySelector("#sellTable tfoot tr");
+    const instabuys = document.getElementById("instabuys");
+    const instasells = document.getElementById("instasells");
+    const orderInfo = document.getElementById("orderInfo");
+    const itemDropdown = document.getElementById("itemDropdown");
+
+    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+    let allItems = [];
+
+    async function getApiKey() {
+      return "YOUR_API_KEY_HERE";
+    }
+
+    async function fetchAllItems() {
+      const apiKey = await getApiKey();
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      const products = json.products;
+      allItems = Object.keys(products).map(id => {
+        const quick = products[id].quick_status;
+        const price = quick.sellPrice > 1e6 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
+        return {
+          id,
+          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+          price
+        };
+      });
+    }
+
+    itemInput.addEventListener("input", () => {
+      const query = itemInput.value.trim().toLowerCase();
+      itemDropdown.innerHTML = "";
+      if (!query) return (itemDropdown.style.display = "none");
+      const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+      for (const item of filtered.slice(0, 50)) {
+        const div = document.createElement("div");
+        div.className = "dropdown-item";
+        div.innerHTML = `
+          <div class="dropdown-label">${item.name}</div>
+          <div class="dropdown-price">${item.price} /bz</div>
+        `;
+        div.onclick = () => {
+          itemInput.value = item.id;
+          itemDropdown.style.display = "none";
+          currentItemId = item.id;
+          loadData(item.id);
+        };
+        itemDropdown.appendChild(div);
+      }
+      itemDropdown.style.display = "block";
+    });
+
+    trackInput.addEventListener("change", () => {
+      const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
+      highlightTrackedOrder(tracked);
+    });
+
+    async function loadData(itemId) {
+      const apiKey = await getApiKey();
+      try {
+        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+        const json = await res.json();
+        const data = json.products[itemId];
+        if (!data) throw new Error("Item not found");
+        instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
+        instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
+        latestBuySummary = data.sell_summary;
+        latestSellSummary = data.buy_summary;
+        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+        highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
+      } catch (err) {
+        alert("Failed to load data. Check the item ID and API key.");
+        console.error(err);
+      }
+    }
+
+    function renderTable(summary, tbody, tfootRow, hourlyVolume) {
+      tbody.innerHTML = "";
+      let totalAmount = 0, totalCoins = 0;
+      for (const row of summary) {
+        const total = row.amount * row.pricePerUnit;
+        totalAmount += row.amount;
+        totalCoins += total;
+        const tr = document.createElement("tr");
+        tr.innerHTML = `
+          <td>${row.orders}</td>
+          <td>${row.amount}</td>
+          <td>${row.pricePerUnit.toLocaleString()} coins</td>
+          <td>${total.toLocaleString()} coins</td>
+        `;
+        if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
+        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+        tbody.appendChild(tr);
+      }
+      tfootRow.innerHTML = `
+        <td>Total:</td>
+        <td>${totalAmount}</td>
+        <td></td>
+        <td>${totalCoins.toLocaleString()} coins</td>
+      `;
+    }
+
+    function highlightTrackedOrder(price) {
+      orderInfo.innerHTML = "";
+      if (!price || isNaN(price)) return;
+      const allRows = [...buyBody.children, ...sellBody.children];
+      allRows.forEach(row => row.classList.remove("highlight-blue"));
+      for (const [summary, body] of [
+        [latestBuySummary, buyBody],
+        [latestSellSummary, sellBody]
+      ]) {
+        let coinsBetween = 0, itemsBetween = 0, priority = 1;
+        for (const row of summary) {
+          const unit = parseFloat(row.pricePerUnit.toFixed(1));
+          if (Math.abs(unit - price) < 0.1) {
+            const index = summary.indexOf(row);
+            const tr = body.children[index];
+            if (tr) tr.classList.add("highlight-blue");
+            orderInfo.innerHTML = `
+              <div class="order-info">
+                <strong>Tracked Order Info</strong><br>
+                Priority position: ${priority}<br>
+                Items between: ${itemsBetween}<br>
+                Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
+                Items left in order: ${row.amount}
+              </div>
+            `;
+            return;
+          }
+          itemsBetween += row.amount;
+          coinsBetween += row.amount * row.pricePerUnit;
+          priority++;
+        }
+      }
+    }
+
+    fetchAllItems();
+    setInterval(() => {
+      if (currentItemId) loadData(currentItemId);
+    }, 3000);
+  </script>
+</body>
+</html>

commit 521addbbbe6801e993e2e93604618bb23039800d
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:48:26 2025 +0100

    2nd tab #4

diff --git a/public/index.html b/public/index.html
index c25cd66..701eb07 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,141 +1,150 @@
 <!DOCTYPE html>
- <html lang="en">
- <head>
-   <meta charset="UTF-8" />
-   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-   <title>SkyBlock Bazaar Tracker</title>
-   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-   <style>
-     body {
-       margin: 0;
-       font-family: 'Segoe UI', sans-serif;
-       background-image: url('bgimage.jpeg');
-       background-size: cover;
-       background-attachment: fixed;
-       color: #fff;
-     }
-     .container {
-       max-width: 1200px;
-       margin: 40px auto;
-       background-color: rgba(0, 0, 0, 0.75);
-       padding: 30px;
-       border-radius: 16px;
-     }
-     h1, h2, h3 {
-       text-align: center;
-     }
-     input {
-       width: 100%;
-       padding: 10px;
-       font-size: 16px;
-       margin: 10px 0 10px;
-       border-radius: 6px;
-       border: none;
-     }
-     table {
-       width: 100%;
-       border-collapse: collapse;
-       margin-bottom: 30px;
-       background-color: rgba(255, 255, 255, 0.05);
-     }
-     th, td {
-       padding: 10px;
-       text-align: center;
-       border: 1px solid rgba(255, 255, 255, 0.2);
-     }
-     th {
-       background-color: rgba(255, 255, 255, 0.1);
-     }
-     tfoot td {
-       font-weight: bold;
-     }
-     .tables {
-       display: flex;
-       gap: 20px;
-     }
-     .tables > div {
-       flex: 1;
-     }
-     .highlight-yellow {
-       background-color: rgba(255, 255, 0, 0.2);
-     }
-     .highlight-red {
-       background-color: rgba(255, 0, 0, 0.4);
-     }
-     .highlight-blue {
-       background-color: rgba(0, 191, 255, 0.3);
-     }
-     .order-info {
-       margin: 20px auto;
-       max-width: 600px;
-       text-align: center;
-       background-color: rgba(255, 255, 255, 0.05);
-       padding: 20px;
-       border-radius: 10px;
-     }
-     .volume-box {
-       display: flex;
-       justify-content: space-around;
-       margin-bottom: 20px;
-       background-color: rgba(255,255,255,0.05);
-       padding: 20px;
-       border-radius: 12px;
-     }
-     .dropdown {
-       background-color: rgba(0, 0, 0, 0.85);
-       border-radius: 8px;
-       padding: 10px;
-       max-height: 300px;
-       overflow-y: auto;
-       display: none;
-     }
-     .dropdown-item {
-       display: flex;
-       align-items: center;
-       justify-content: space-between;
-       padding: 8px 12px;
-       border-bottom: 1px solid rgba(255, 255, 255, 0.1);
-       cursor: pointer;
-     }
-     .dropdown-item:hover {
-       background-color: rgba(255, 255, 255, 0.1);
-     }
-     .dropdown-label {
-       display: flex;
-       align-items: center;
-     }
-     .dropdown-price {
-       background-color: goldenrod;
-       padding: 4px 8px;
-       border-radius: 6px;
-       font-weight: bold;
-       color: black;
-     }
-   </style>
- </head>
- <body>
+<html lang="en">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>SkyBlock Bazaar Tracker</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
-    .button-row {
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      color: #fff;
+    }
+    .container {
+      max-width: 1200px;
+      margin: 0 auto;
+      padding: 30px;
+    }
+    .tabs {
       display: flex;
-      justify-content: center;
-      margin-bottom: 20px;
+      align-items: center;
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 8px 20px;
+      border-bottom: 2px solid rgba(255, 255, 255, 0.15);
+      position: sticky;
+      top: 0;
+      z-index: 10;
+      border-radius: 0 0 12px 12px;
     }
-    .nav-button {
+    .tab {
       padding: 10px 20px;
+      cursor: pointer;
+      background-color: rgba(255, 255, 255, 0.15);
+      border-radius: 10px 10px 0 0;
+      margin-right: 12px;
+      font-weight: bold;
+      transition: background-color 0.2s;
+    }
+    .tab.active {
+      background-color: rgba(255, 255, 255, 0.35);
+    }
+    .tab:hover {
+      background-color: rgba(255, 255, 255, 0.25);
+    }
+    h1, h2, h3 {
+      text-align: center;
+    }
+    input {
+      width: 100%;
+      padding: 10px;
       font-size: 16px;
+      margin: 10px 0 10px;
+      border-radius: 6px;
       border: none;
+    }
+    table {
+      width: 100%;
+      border-collapse: collapse;
+      margin-bottom: 30px;
+      background-color: rgba(255, 255, 255, 0.05);
+    }
+    th, td {
+      padding: 10px;
+      text-align: center;
+      border: 1px solid rgba(255, 255, 255, 0.2);
+    }
+    th {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    tfoot td {
+      font-weight: bold;
+    }
+    .tables {
+      display: flex;
+      gap: 20px;
+    }
+    .tables > div {
+      flex: 1;
+    }
+    .highlight-yellow {
+      background-color: rgba(255, 255, 0, 0.2);
+    }
+    .highlight-red {
+      background-color: rgba(255, 0, 0, 0.4);
+    }
+    .highlight-blue {
+      background-color: rgba(0, 191, 255, 0.3);
+    }
+    .order-info {
+      margin: 20px auto;
+      max-width: 600px;
+      text-align: center;
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 20px;
+      border-radius: 10px;
+    }
+    .volume-box {
+      display: flex;
+      justify-content: space-around;
+      margin-bottom: 20px;
+      background-color: rgba(255,255,255,0.05);
+      padding: 20px;
+      border-radius: 12px;
+    }
+    .dropdown {
+      background-color: rgba(0, 0, 0, 0.85);
       border-radius: 8px;
-      background-color: rgba(255, 255, 255, 0.2);
-      color: white;
+      padding: 10px;
+      max-height: 300px;
+      overflow-y: auto;
+      display: none;
+    }
+    .dropdown-item {
+      display: flex;
+      align-items: center;
+      justify-content: space-between;
+      padding: 8px 12px;
+      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
       cursor: pointer;
     }
-    .nav-button:hover {
-      background-color: rgba(255, 255, 255, 0.3);
+    .dropdown-item:hover {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    .dropdown-label {
+      display: flex;
+      align-items: center;
+    }
+    .dropdown-price {
+      background-color: goldenrod;
+      padding: 4px 8px;
+      border-radius: 6px;
+      font-weight: bold;
+      color: black;
     }
   </style>
+</head>
+<body>
+  <div class="tabs">
+    <div class="tab active">Orders</div>
+    <div class="tab" onclick="window.location.href='volume-drain.html'">Buy Order Volume Drain</div>
+  </div>
 
   <div class="container">
-    <div class="button-row">
+    <h1>SkyBlock Bazaar Tracker</h1>
       <button class="nav-button" onclick="window.location.href='volume-drain.html'">Buy Order Volume Drain</button>
     </div>
 
diff --git a/public/volume-drain.html b/public/volume-drain.html
index 2f00646..f414955 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -16,23 +16,31 @@
     }
     .container {
       max-width: 1200px;
-      margin: 40px auto;
-      background-color: rgba(0, 0, 0, 0.75);
+      margin: 0 auto;
       padding: 30px;
-      border-radius: 16px;
     }
     .tabs {
       display: flex;
-      justify-content: center;
-      margin-bottom: 30px;
+      align-items: center;
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 8px 20px;
+      border-bottom: 2px solid rgba(255, 255, 255, 0.15);
+      position: sticky;
+      top: 0;
+      z-index: 10;
+      border-radius: 0 0 12px 12px;
     }
     .tab {
-      padding: 12px 24px;
+      padding: 10px 20px;
       cursor: pointer;
       background-color: rgba(255, 255, 255, 0.15);
-      border-radius: 12px 12px 0 0;
-      margin: 0 10px;
+      border-radius: 10px 10px 0 0;
+      margin-right: 12px;
       font-weight: bold;
+      transition: background-color 0.2s;
+    }
+    .tab.active {
+      background-color: rgba(255, 255, 255, 0.35);
     }
     .tab:hover {
       background-color: rgba(255, 255, 255, 0.25);
@@ -44,7 +52,7 @@
       width: 100%;
       border-collapse: collapse;
       margin-bottom: 30px;
-      background-color: rgba(255, 255, 255, 0.05);
+      background-color: rgba(0, 0, 0, 0.7);
     }
     th, td {
       padding: 10px;
@@ -57,16 +65,18 @@
   </style>
 </head>
 <body>
+  <div class="tabs">
+    <div class="tab" onclick="window.location.href='index.html'">Orders</div>
+    <div class="tab active">Buy Order Volume Drain</div>
+  </div>
+
   <div class="container">
-    <div class="tabs">
-      <div class="tab" onclick="window.location.href='index.html'">Orders</div>
-      <div class="tab" style="background-color: rgba(255,255,255,0.35);">Buy Order Volume Drain</div>
-    </div>
     <h1>Buy Order Volume Drain</h1>
     <div id="priceDropCategories">
       <p>Loading data...</p>
     </div>
   </div>
+
   <script>
     async function loadBuyOrderVolumeDrain() {
       const container = document.getElementById("priceDropCategories");

commit 222d213d537ee7b51a6430efd84b3d7e50b1d21e
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:42:52 2025 +0100

    Update volume-drain.html

diff --git a/public/volume-drain.html b/public/volume-drain.html
index 258cd12..2f00646 100644
--- a/public/volume-drain.html
+++ b/public/volume-drain.html
@@ -23,22 +23,20 @@
     }
     .tabs {
       display: flex;
-      margin-bottom: 20px;
-      border-bottom: 2px solid rgba(255, 255, 255, 0.2);
+      justify-content: center;
+      margin-bottom: 30px;
     }
     .tab {
-      flex: 1;
-      padding: 10px;
-      text-align: center;
+      padding: 12px 24px;
       cursor: pointer;
-      background-color: rgba(255, 255, 255, 0.05);
-      border-radius: 8px 8px 0 0;
-      margin-right: 10px;
-    }
-    .tab.active {
       background-color: rgba(255, 255, 255, 0.15);
+      border-radius: 12px 12px 0 0;
+      margin: 0 10px;
       font-weight: bold;
     }
+    .tab:hover {
+      background-color: rgba(255, 255, 255, 0.25);
+    }
     h1, h2, h3 {
       text-align: center;
     }
@@ -56,32 +54,15 @@
     th {
       background-color: rgba(255, 255, 255, 0.1);
     }
-    .button-row {
-      display: flex;
-      justify-content: center;
-      gap: 20px;
-      margin-top: 20px;
-    }
-    .nav-button {
-      padding: 10px 20px;
-      font-size: 16px;
-      border: none;
-      border-radius: 8px;
-      background-color: rgba(255, 255, 255, 0.2);
-      color: white;
-      cursor: pointer;
-    }
-    .nav-button:hover {
-      background-color: rgba(255, 255, 255, 0.3);
-    }
   </style>
 </head>
 <body>
   <div class="container">
-    <h1>Buy Order Volume Drain</h1>
-    <div class="button-row">
-      <button class="nav-button" onclick="window.location.href='index.html'">Orders Tab</button>
+    <div class="tabs">
+      <div class="tab" onclick="window.location.href='index.html'">Orders</div>
+      <div class="tab" style="background-color: rgba(255,255,255,0.35);">Buy Order Volume Drain</div>
     </div>
+    <h1>Buy Order Volume Drain</h1>
     <div id="priceDropCategories">
       <p>Loading data...</p>
     </div>
@@ -114,23 +95,39 @@
 
         const buyOrders = product.buy_summary;
         const avg = buyOrders.reduce((acc, o) => acc + o.pricePerUnit, 0) / buyOrders.length;
-        const active = buyOrders[0];
-        const next = buyOrders[1];
-        const drop = next ? 1 - (next.pricePerUnit / active.pricePerUnit) : 0;
-        const itemsBetween = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount, 0) : 0;
-        const coinGap = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount * b.pricePerUnit, 0) : 0;
-        const score = drop > 0.15 ? (Math.E * drop * product.quick_status.sellMovingWeek / (itemsBetween || 1)) : 0;
-
         let category = "Not Price Dropping";
-        if (active.pricePerUnit < 0.5 * avg) category = "Under Price Drop";
-        else if (drop > 0.15 && itemsBetween < 10 * product.quick_status.sellMovingWeek / 168) category = "About To Price Drop";
+        let dropData = null;
+
+        if (buyOrders[0].pricePerUnit < 0.5 * avg) {
+          category = "Under Price Drop";
+        } else {
+          for (let i = 0; i < buyOrders.length - 1; i++) {
+            const current = buyOrders[i];
+            const next = buyOrders[i + 1];
+            const drop = 1 - (next.pricePerUnit / current.pricePerUnit);
+            const itemsBetween = buyOrders.slice(0, i + 1).reduce((a, b) => a + b.amount, 0);
+            const coinGap = buyOrders.slice(0, i + 1).reduce((a, b) => a + b.amount * b.pricePerUnit, 0);
+            const volumePerHour = product.quick_status.sellMovingWeek / 168;
+            if (drop > 0.15 && itemsBetween < 10 * volumePerHour) {
+              category = "About To Price Drop";
+              dropData = {
+                drop: (drop * 100).toFixed(1) + "%",
+                items: itemsBetween,
+                coins: Math.round(coinGap).toLocaleString() + " coins",
+                score: (Math.E * drop * volumePerHour / (itemsBetween || 1)),
+              };
+              break;
+            }
+          }
+        }
 
+        const name = id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase());
         categories[category].push({
-          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-          drop: (drop * 100).toFixed(1) + "%",
-          items: itemsBetween,
-          coins: Math.round(coinGap).toLocaleString() + " coins",
-          score
+          name,
+          drop: dropData?.drop || "-0.0%",
+          items: dropData?.items || 0,
+          coins: dropData?.coins || "-",
+          score: dropData?.score || 0
         });
       }
 

commit 20c203aa4052d185642d39dcd3fc92daadf00f01
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:38:52 2025 +0100

    2nd tab #3

diff --git a/public/api.txt b/public/api.txt
deleted file mode 100644
index 038b8c9..0000000
--- a/public/api.txt
+++ /dev/null
@@ -1 +0,0 @@
-2bcea94d-5953-4eb3-983e-97910ceebad5
\ No newline at end of file
diff --git a/public/index.html b/public/index.html
index 0d6213d..c25cd66 100644
--- a/public/index.html
+++ b/public/index.html
@@ -114,19 +114,44 @@
    </style>
  </head>
  <body>
-   <div class="container">
-     <h1>SkyBlock Bazaar Tracker</h1>
- 
-     <div class="volume-box">
-       <div>
-         <strong>Instabuys / hour:</strong>
-         <div id="instabuys"></div>
-       </div>
-       <div>
-         <strong>Instasells / hour:</strong>
-         <div id="instasells"></div>
-       </div>
-     </div>
+  <style>
+    .button-row {
+      display: flex;
+      justify-content: center;
+      margin-bottom: 20px;
+    }
+    .nav-button {
+      padding: 10px 20px;
+      font-size: 16px;
+      border: none;
+      border-radius: 8px;
+      background-color: rgba(255, 255, 255, 0.2);
+      color: white;
+      cursor: pointer;
+    }
+    .nav-button:hover {
+      background-color: rgba(255, 255, 255, 0.3);
+    }
+  </style>
+
+  <div class="container">
+    <div class="button-row">
+      <button class="nav-button" onclick="window.location.href='volume-drain.html'">Buy Order Volume Drain</button>
+    </div>
+
+    <h1>SkyBlock Bazaar Tracker</h1>
+
+    <div class="volume-box">
+      <div>
+        <strong>Instabuys / hour:</strong>
+        <div id="instabuys"></div>
+      </div>
+      <div>
+        <strong>Instasells / hour:</strong>
+        <div id="instasells"></div>
+      </div>
+    </div>
+
  
      <h3>Item ID:</h3>
      <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
diff --git a/public/volume-drain.html b/public/volume-drain.html
new file mode 100644
index 0000000..258cd12
--- /dev/null
+++ b/public/volume-drain.html
@@ -0,0 +1,152 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>Buy Order Volume Drain</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+  <style>
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      color: #fff;
+    }
+    .container {
+      max-width: 1200px;
+      margin: 40px auto;
+      background-color: rgba(0, 0, 0, 0.75);
+      padding: 30px;
+      border-radius: 16px;
+    }
+    .tabs {
+      display: flex;
+      margin-bottom: 20px;
+      border-bottom: 2px solid rgba(255, 255, 255, 0.2);
+    }
+    .tab {
+      flex: 1;
+      padding: 10px;
+      text-align: center;
+      cursor: pointer;
+      background-color: rgba(255, 255, 255, 0.05);
+      border-radius: 8px 8px 0 0;
+      margin-right: 10px;
+    }
+    .tab.active {
+      background-color: rgba(255, 255, 255, 0.15);
+      font-weight: bold;
+    }
+    h1, h2, h3 {
+      text-align: center;
+    }
+    table {
+      width: 100%;
+      border-collapse: collapse;
+      margin-bottom: 30px;
+      background-color: rgba(255, 255, 255, 0.05);
+    }
+    th, td {
+      padding: 10px;
+      text-align: center;
+      border: 1px solid rgba(255, 255, 255, 0.2);
+    }
+    th {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    .button-row {
+      display: flex;
+      justify-content: center;
+      gap: 20px;
+      margin-top: 20px;
+    }
+    .nav-button {
+      padding: 10px 20px;
+      font-size: 16px;
+      border: none;
+      border-radius: 8px;
+      background-color: rgba(255, 255, 255, 0.2);
+      color: white;
+      cursor: pointer;
+    }
+    .nav-button:hover {
+      background-color: rgba(255, 255, 255, 0.3);
+    }
+  </style>
+</head>
+<body>
+  <div class="container">
+    <h1>Buy Order Volume Drain</h1>
+    <div class="button-row">
+      <button class="nav-button" onclick="window.location.href='index.html'">Orders Tab</button>
+    </div>
+    <div id="priceDropCategories">
+      <p>Loading data...</p>
+    </div>
+  </div>
+  <script>
+    async function loadBuyOrderVolumeDrain() {
+      const container = document.getElementById("priceDropCategories");
+
+      const itemsToCheck = [
+        "PERFECT_AMBER_GEM", "PERFECT_TOPAZ_GEM", "PERFECT_SAPPHIRE_GEM", "PERFECT_AMETHYST_GEM", "PERFECT_JASPER_GEM",
+        "PERFECT_RUBY_GEM", "PERFECT_JADE_GEM", "PERFECT_OPAL_GEM", "PERFECT_AQUAMARINE_GEM", "PERFECT_CITRINE_GEM",
+        "PERFECT_ONYX_GEM", "PERFECT_PERIDOT_GEM", "UMBER_PLATE", "TUNGSTEN_PLATE", "MITHRIL_PLATE",
+        "PERFECT_PLATE", "GOLDEN_PLATE", "TITANIUM_TESSERACT", "HOT_STUFF", "FRIGID_HUSK", "TUNGSTEN_KEY", "UMBER_KEY", "SKELETON_KEY"
+      ];
+
+      const apiKey = "YOUR_API_KEY_HERE";
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      const data = json.products;
+
+      const categories = {
+        "Under Price Drop": [],
+        "About To Price Drop": [],
+        "Not Price Dropping": []
+      };
+
+      for (const id of itemsToCheck) {
+        const product = data[id];
+        if (!product || !product.buy_summary.length || !product.quick_status.sellMovingWeek) continue;
+
+        const buyOrders = product.buy_summary;
+        const avg = buyOrders.reduce((acc, o) => acc + o.pricePerUnit, 0) / buyOrders.length;
+        const active = buyOrders[0];
+        const next = buyOrders[1];
+        const drop = next ? 1 - (next.pricePerUnit / active.pricePerUnit) : 0;
+        const itemsBetween = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount, 0) : 0;
+        const coinGap = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount * b.pricePerUnit, 0) : 0;
+        const score = drop > 0.15 ? (Math.E * drop * product.quick_status.sellMovingWeek / (itemsBetween || 1)) : 0;
+
+        let category = "Not Price Dropping";
+        if (active.pricePerUnit < 0.5 * avg) category = "Under Price Drop";
+        else if (drop > 0.15 && itemsBetween < 10 * product.quick_status.sellMovingWeek / 168) category = "About To Price Drop";
+
+        categories[category].push({
+          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+          drop: (drop * 100).toFixed(1) + "%",
+          items: itemsBetween,
+          coins: Math.round(coinGap).toLocaleString() + " coins",
+          score
+        });
+      }
+
+      container.innerHTML = Object.entries(categories).map(([cat, rows]) => `
+        <h3>${cat}</h3>
+        <table><thead>
+        <tr><th>Item Name</th><th>% Price Decrease</th><th>Item Volume</th><th>Coin Gap</th></tr>
+        </thead><tbody>
+        ${rows.sort((a, b) => cat === 'About To Price Drop' ? b.score - a.score : 0).map(row => `
+          <tr><td>${row.name}</td><td>${row.drop}</td><td>${row.items}</td><td>${row.coins}</td></tr>
+        `).join('')}
+        </tbody></table>
+      `).join('');
+    }
+
+    loadBuyOrderVolumeDrain();
+  </script>
+</body>
+</html>
\ No newline at end of file

commit 02c1a55a890cd66e779a5fa583908399a0835f7b
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:22:51 2025 +0100

    revert back to 1 tab

diff --git a/public/index.html b/public/index.html
index 7e7c2a3..0d6213d 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,256 +1,316 @@
 <!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
-  <style>
-    body {
-      margin: 0;
-      font-family: 'Segoe UI', sans-serif;
-      background-image: url('bgimage.jpeg');
-      background-size: cover;
-      background-attachment: fixed;
-      color: #fff;
-    }
-    .container {
-      max-width: 1200px;
-      margin: 40px auto;
-      background-color: rgba(0, 0, 0, 0.75);
-      padding: 30px;
-      border-radius: 16px;
-    }
-    .tabs {
-      display: flex;
-      margin-bottom: 20px;
-      border-bottom: 2px solid rgba(255, 255, 255, 0.2);
-    }
-    .tab {
-      flex: 1;
-      padding: 10px;
-      text-align: center;
-      cursor: pointer;
-      background-color: rgba(255, 255, 255, 0.05);
-      border-radius: 8px 8px 0 0;
-      margin-right: 10px;
-    }
-    .tab.active {
-      background-color: rgba(255, 255, 255, 0.15);
-      font-weight: bold;
-    }
-    .tab-content {
-      display: none;
-    }
-    .tab-content.active {
-      display: block;
-    }
-    h1, h2, h3 {
-      text-align: center;
-    }
-    input {
-      width: 100%;
-      padding: 10px;
-      font-size: 16px;
-      margin: 10px 0 10px;
-      border-radius: 6px;
-      border: none;
-    }
-    table {
-      width: 100%;
-      border-collapse: collapse;
-      margin-bottom: 30px;
-      background-color: rgba(255, 255, 255, 0.05);
-    }
-    th, td {
-      padding: 10px;
-      text-align: center;
-      border: 1px solid rgba(255, 255, 255, 0.2);
-    }
-    th {
-      background-color: rgba(255, 255, 255, 0.1);
-    }
-    tfoot td {
-      font-weight: bold;
-    }
-    .tables {
-      display: flex;
-      gap: 20px;
-    }
-    .tables > div {
-      flex: 1;
-    }
-    .highlight-yellow {
-      background-color: rgba(255, 255, 0, 0.2);
-    }
-    .highlight-red {
-      background-color: rgba(255, 0, 0, 0.4);
-    }
-    .highlight-blue {
-      background-color: rgba(0, 191, 255, 0.3);
-    }
-    .order-info {
-      margin: 20px auto;
-      max-width: 600px;
-      text-align: center;
-      background-color: rgba(255, 255, 255, 0.05);
-      padding: 20px;
-      border-radius: 10px;
-    }
-    .volume-box {
-      display: flex;
-      justify-content: space-around;
-      margin-bottom: 20px;
-      background-color: rgba(255,255,255,0.05);
-      padding: 20px;
-      border-radius: 12px;
-    }
-    .dropdown {
-      background-color: rgba(0, 0, 0, 0.85);
-      border-radius: 8px;
-      padding: 10px;
-      max-height: 300px;
-      overflow-y: auto;
-      display: none;
-    }
-    .dropdown-item {
-      display: flex;
-      align-items: center;
-      justify-content: space-between;
-      padding: 8px 12px;
-      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
-      cursor: pointer;
-    }
-    .dropdown-item:hover {
-      background-color: rgba(255, 255, 255, 0.1);
-    }
-    .dropdown-label {
-      display: flex;
-      align-items: center;
-    }
-    .dropdown-price {
-      background-color: goldenrod;
-      padding: 4px 8px;
-      border-radius: 6px;
-      font-weight: bold;
-      color: black;
-    }
-  </style>
-</head>
-<body>
-  <div class="container">
-    <div class="tabs">
-      <div class="tab active" onclick="switchTab('ordersTab')">Orders</div>
-      <div class="tab" onclick="switchTab('volumeDrainTab')">Buy Order Volume Drain</div>
-    </div>
-
-    <div id="ordersTab" class="tab-content active">
-      <h1>SkyBlock Bazaar Tracker</h1>
-      <div class="volume-box">
-        <div><strong>Instabuys / hour:</strong><div id="instabuys"></div></div>
-        <div><strong>Instasells / hour:</strong><div id="instasells"></div></div>
-      </div>
-      <h3>Item ID:</h3>
-      <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-      <div id="itemDropdown" class="dropdown"></div>
-      <h3>Track Order By Price:</h3>
-      <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
-      <div id="orderInfo"></div>
-      <div class="tables">
-        <div>
-          <h2>Buy Orders</h2>
-          <table id="buyTable">
-            <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
-            <tbody></tbody>
-            <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-          </table>
-        </div>
-        <div>
-          <h2>Sell Orders</h2>
-          <table id="sellTable">
-            <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
-            <tbody></tbody>
-            <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-          </table>
-        </div>
-      </div>
-    </div>    
-
-    <div id="volumeDrainTab" class="tab-content">
-      <h2>Buy Order Volume Drain</h2>
-      <div id="priceDropCategories"></div>
-    </div>
-  </div>
-
-  <script>
-    function switchTab(tabId) {
-      document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
-      document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
-      document.querySelector(`[onclick*="${tabId}"]`).classList.add('active');
-      document.getElementById(tabId).classList.add('active');
-
-      if (tabId === 'volumeDrainTab') loadBuyOrderVolumeDrain();
-    }
-
-    async function loadBuyOrderVolumeDrain() {
-      const container = document.getElementById("priceDropCategories");
-      container.innerHTML = `<p>Loading data...</p>`;
-
-      const itemsToCheck = [
-        "PERFECT_AMBER_GEM", "PERFECT_TOPAZ_GEM", "PERFECT_SAPPHIRE_GEM", "PERFECT_AMETHYST_GEM", "PERFECT_JASPER_GEM",
-        "PERFECT_RUBY_GEM", "PERFECT_JADE_GEM", "PERFECT_OPAL_GEM", "PERFECT_AQUAMARINE_GEM", "PERFECT_CITRINE_GEM",
-        "PERFECT_ONYX_GEM", "PERFECT_PERIDOT_GEM", "UMBER_PLATE", "TUNGSTEN_PLATE", "MITHRIL_PLATE",
-        "PERFECT_PLATE", "GOLDEN_PLATE", "TITANIUM_TESSERACT", "HOT_STUFF", "FRIGID_HUSK", "TUNGSTEN_KEY", "UMBER_KEY", "SKELETON_KEY"
-      ];
-
-      const apiKey = "YOUR_API_KEY_HERE";
-      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-      const json = await res.json();
-      const data = json.products;
-
-      const categories = {
-        "Under Price Drop": [],
-        "About To Price Drop": [],
-        "Not Price Dropping": []
-      };
-
-      for (const id of itemsToCheck) {
-        const product = data[id];
-        if (!product || !product.buy_summary.length || !product.quick_status.sellMovingWeek) continue;
-
-        const buyOrders = product.buy_summary;
-        const avg = buyOrders.reduce((acc, o) => acc + o.pricePerUnit, 0) / buyOrders.length;
-        const active = buyOrders[0];
-        const next = buyOrders[1];
-        const drop = next ? 1 - (next.pricePerUnit / active.pricePerUnit) : 0;
-        const itemsBetween = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount, 0) : 0;
-        const coinGap = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount * b.pricePerUnit, 0) : 0;
-        const score = drop > 0.15 ? (Math.E * drop * product.quick_status.sellMovingWeek / (itemsBetween || 1)) : 0;
-
-        let category = "Not Price Dropping";
-        if (active.pricePerUnit < 0.5 * avg) category = "Under Price Drop";
-        else if (drop > 0.15 && itemsBetween < 10 * product.quick_status.sellMovingWeek / 168) category = "About To Price Drop";
-
-        categories[category].push({
-          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-          drop: (drop * 100).toFixed(1) + "%",
-          items: itemsBetween,
-          coins: Math.round(coinGap).toLocaleString() + " coins",
-          score
-        });
-      }
-
-      container.innerHTML = Object.entries(categories).map(([cat, rows]) => `
-        <h3>${cat}</h3>
-        <table><thead>
-        <tr><th>Item Name</th><th>% Price Decrease</th><th>Item Volume</th><th>Coin Gap</th></tr>
-        </thead><tbody>
-        ${rows.sort((a, b) => cat === 'About To Price Drop' ? b.score - a.score : 0).map(row => `
-          <tr><td>${row.name}</td><td>${row.drop}</td><td>${row.items}</td><td>${row.coins}</td></tr>
-        `).join('')}
-        </tbody></table>
-      `).join('');
-    }
-  </script>
-</body>
-</html>
+ <html lang="en">
+ <head>
+   <meta charset="UTF-8" />
+   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+   <title>SkyBlock Bazaar Tracker</title>
+   <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
+   <style>
+     body {
+       margin: 0;
+       font-family: 'Segoe UI', sans-serif;
+       background-image: url('bgimage.jpeg');
+       background-size: cover;
+       background-attachment: fixed;
+       color: #fff;
+     }
+     .container {
+       max-width: 1200px;
+       margin: 40px auto;
+       background-color: rgba(0, 0, 0, 0.75);
+       padding: 30px;
+       border-radius: 16px;
+     }
+     h1, h2, h3 {
+       text-align: center;
+     }
+     input {
+       width: 100%;
+       padding: 10px;
+       font-size: 16px;
+       margin: 10px 0 10px;
+       border-radius: 6px;
+       border: none;
+     }
+     table {
+       width: 100%;
+       border-collapse: collapse;
+       margin-bottom: 30px;
+       background-color: rgba(255, 255, 255, 0.05);
+     }
+     th, td {
+       padding: 10px;
+       text-align: center;
+       border: 1px solid rgba(255, 255, 255, 0.2);
+     }
+     th {
+       background-color: rgba(255, 255, 255, 0.1);
+     }
+     tfoot td {
+       font-weight: bold;
+     }
+     .tables {
+       display: flex;
+       gap: 20px;
+     }
+     .tables > div {
+       flex: 1;
+     }
+     .highlight-yellow {
+       background-color: rgba(255, 255, 0, 0.2);
+     }
+     .highlight-red {
+       background-color: rgba(255, 0, 0, 0.4);
+     }
+     .highlight-blue {
+       background-color: rgba(0, 191, 255, 0.3);
+     }
+     .order-info {
+       margin: 20px auto;
+       max-width: 600px;
+       text-align: center;
+       background-color: rgba(255, 255, 255, 0.05);
+       padding: 20px;
+       border-radius: 10px;
+     }
+     .volume-box {
+       display: flex;
+       justify-content: space-around;
+       margin-bottom: 20px;
+       background-color: rgba(255,255,255,0.05);
+       padding: 20px;
+       border-radius: 12px;
+     }
+     .dropdown {
+       background-color: rgba(0, 0, 0, 0.85);
+       border-radius: 8px;
+       padding: 10px;
+       max-height: 300px;
+       overflow-y: auto;
+       display: none;
+     }
+     .dropdown-item {
+       display: flex;
+       align-items: center;
+       justify-content: space-between;
+       padding: 8px 12px;
+       border-bottom: 1px solid rgba(255, 255, 255, 0.1);
+       cursor: pointer;
+     }
+     .dropdown-item:hover {
+       background-color: rgba(255, 255, 255, 0.1);
+     }
+     .dropdown-label {
+       display: flex;
+       align-items: center;
+     }
+     .dropdown-price {
+       background-color: goldenrod;
+       padding: 4px 8px;
+       border-radius: 6px;
+       font-weight: bold;
+       color: black;
+     }
+   </style>
+ </head>
+ <body>
+   <div class="container">
+     <h1>SkyBlock Bazaar Tracker</h1>
+ 
+     <div class="volume-box">
+       <div>
+         <strong>Instabuys / hour:</strong>
+         <div id="instabuys"></div>
+       </div>
+       <div>
+         <strong>Instasells / hour:</strong>
+         <div id="instasells"></div>
+       </div>
+     </div>
+ 
+     <h3>Item ID:</h3>
+     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+     <div id="itemDropdown" class="dropdown"></div>
+ 
+     <h3>Track Order By Price:</h3>
+     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+ 
+     <div id="orderInfo"></div>
+ 
+     <div class="tables">
+       <div>
+         <h2>Buy Orders</h2>
+         <table id="buyTable">
+           <thead>
+             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+           </thead>
+           <tbody></tbody>
+           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+         </table>
+       </div>
+       <div>
+         <h2>Sell Orders</h2>
+         <table id="sellTable">
+           <thead>
+             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+           </thead>
+           <tbody></tbody>
+           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+         </table>
+       </div>
+     </div>
+   </div>
+ 
+   <script>
+     const itemInput = document.getElementById("itemInput");
+     const trackInput = document.getElementById("trackInput");
+     const buyBody = document.querySelector("#buyTable tbody");
+     const sellBody = document.querySelector("#sellTable tbody");
+     const buyFoot = document.querySelector("#buyTable tfoot tr");
+     const sellFoot = document.querySelector("#sellTable tfoot tr");
+     const instabuys = document.getElementById("instabuys");
+     const instasells = document.getElementById("instasells");
+     const orderInfo = document.getElementById("orderInfo");
+     const itemDropdown = document.getElementById("itemDropdown");
+ 
+     let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+     let allItems = [];
+ 
+     async function getApiKey() {
+       return "YOUR_API_KEY_HERE";
+     }
+ 
+     async function fetchAllItems() {
+       const apiKey = await getApiKey();
+       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+       const json = await res.json();
+       const products = json.products;
+       allItems = Object.keys(products).map(id => {
+         const quick = products[id].quick_status;
+         const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
+         return {
+           id,
+           name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+           price
+         };
+       });
+     }
+ 
+     itemInput.addEventListener("input", () => {
+       const query = itemInput.value.trim().toLowerCase();
+       itemDropdown.innerHTML = "";
+       if (!query) return (itemDropdown.style.display = "none");
+       const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+       for (const item of filtered.slice(0, 50)) {
+         const div = document.createElement("div");
+         div.className = "dropdown-item";
+         div.innerHTML = `
+           <div class="dropdown-label">
+             ${item.name}
+           </div>
+           <div class="dropdown-price">${item.price} /bz</div>
+         `;
+         div.onclick = () => {
+           itemInput.value = item.id;
+           itemDropdown.style.display = "none";
+           currentItemId = item.id;
+           loadData(item.id);
+         };
+         itemDropdown.appendChild(div);
+       }
+       itemDropdown.style.display = "block";
+     });
+ 
+     trackInput.addEventListener("change", () => {
+       const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
+       highlightTrackedOrder(tracked);
+     });
+ 
+     async function loadData(itemId) {
+       const apiKey = await getApiKey();
+       try {
+         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+         const json = await res.json();
+         const data = json.products[itemId];
+         if (!data) throw new Error("Item not found");
+         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
+         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
+         latestBuySummary = data.sell_summary;
+         latestSellSummary = data.buy_summary;
+         renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+         renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
+       } catch (err) {
+         alert("Failed to load data. Check the item ID and API key.");
+         console.error(err);
+       }
+     }
+ 
+     function renderTable(summary, tbody, tfootRow, hourlyVolume) {
+       tbody.innerHTML = "";
+       let totalAmount = 0, totalCoins = 0;
+       for (const row of summary) {
+         const total = row.amount * row.pricePerUnit;
+         totalAmount += row.amount;
+         totalCoins += total;
+         const tr = document.createElement("tr");
+         tr.innerHTML = `
+           <td>${row.orders}</td>
+           <td>${row.amount}</td>
+           <td>${row.pricePerUnit.toLocaleString()} coins</td>
+           <td>${total.toLocaleString()} coins</td>
+         `;
+         if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
+         else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+         tbody.appendChild(tr);
+       }
+       tfootRow.innerHTML = `
+         <td>Total:</td>
+         <td>${totalAmount}</td>
+         <td></td>
+         <td>${totalCoins.toLocaleString()} coins</td>
+       `;
+     }
+ 
+     function highlightTrackedOrder(price) {
+       orderInfo.innerHTML = "";
+       if (!price || isNaN(price)) return;
+       const allRows = [...buyBody.children, ...sellBody.children];
+       allRows.forEach(row => row.classList.remove("highlight-blue"));
+       for (const [summary, body] of [
+         [latestBuySummary, buyBody],
+         [latestSellSummary, sellBody]
+       ]) {
+         let coinsBetween = 0, itemsBetween = 0, priority = 1;
+         for (const row of summary) {
+           const unit = parseFloat(row.pricePerUnit.toFixed(1));
+           if (Math.abs(unit - price) < 0.1) {
+             const index = summary.indexOf(row);
+             const tr = body.children[index];
+             if (tr) tr.classList.add("highlight-blue");
+             orderInfo.innerHTML = `
+               <div class="order-info">
+                 <strong>Tracked Order Info</strong><br>
+                 Priority position: ${priority}<br>
+                 Items between: ${itemsBetween}<br>
+                 Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
+                 Items left in order: ${row.amount}
+               </div>
+             `;
+             return;
+           }
+           itemsBetween += row.amount;
+           coinsBetween += row.amount * row.pricePerUnit;
+           priority++;
+         }
+       }
+     }
+ 
+     fetchAllItems();
+     setInterval(() => {
+       if (currentItemId) loadData(currentItemId);
+     }, 3000);
+   </script>
+ </body>
+ </html>
+ </html>
\ No newline at end of file

commit c3be275d98e979c5da75915a5ddc6d127b41f112
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Fri Apr 11 03:09:23 2025 +0100

    2nd tab attempt #2

diff --git a/public/index.html b/public/index.html
index ef51a9e..7e7c2a3 100644
--- a/public/index.html
+++ b/public/index.html
@@ -174,169 +174,83 @@
           </table>
         </div>
       </div>
-    </div>
+    </div>    
 
     <div id="volumeDrainTab" class="tab-content">
       <h2>Buy Order Volume Drain</h2>
-      <p>This tab will display categorized gemstone and plate items under different price drop statuses.</p>
       <div id="priceDropCategories"></div>
     </div>
   </div>
 
   <script>
-    const itemInput = document.getElementById("itemInput");
-    const trackInput = document.getElementById("trackInput");
-    const buyBody = document.querySelector("#buyTable tbody");
-    const sellBody = document.querySelector("#sellTable tbody");
-    const buyFoot = document.querySelector("#buyTable tfoot tr");
-    const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const instabuys = document.getElementById("instabuys");
-    const instasells = document.getElementById("instasells");
-    const orderInfo = document.getElementById("orderInfo");
-    const itemDropdown = document.getElementById("itemDropdown");
-
-    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
-    let allItems = [];
+    function switchTab(tabId) {
+      document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
+      document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
+      document.querySelector(`[onclick*="${tabId}"]`).classList.add('active');
+      document.getElementById(tabId).classList.add('active');
 
-    async function getApiKey() {
-      return "YOUR_API_KEY_HERE";
+      if (tabId === 'volumeDrainTab') loadBuyOrderVolumeDrain();
     }
 
-    async function fetchAllItems() {
-      const apiKey = await getApiKey();
+    async function loadBuyOrderVolumeDrain() {
+      const container = document.getElementById("priceDropCategories");
+      container.innerHTML = `<p>Loading data...</p>`;
+
+      const itemsToCheck = [
+        "PERFECT_AMBER_GEM", "PERFECT_TOPAZ_GEM", "PERFECT_SAPPHIRE_GEM", "PERFECT_AMETHYST_GEM", "PERFECT_JASPER_GEM",
+        "PERFECT_RUBY_GEM", "PERFECT_JADE_GEM", "PERFECT_OPAL_GEM", "PERFECT_AQUAMARINE_GEM", "PERFECT_CITRINE_GEM",
+        "PERFECT_ONYX_GEM", "PERFECT_PERIDOT_GEM", "UMBER_PLATE", "TUNGSTEN_PLATE", "MITHRIL_PLATE",
+        "PERFECT_PLATE", "GOLDEN_PLATE", "TITANIUM_TESSERACT", "HOT_STUFF", "FRIGID_HUSK", "TUNGSTEN_KEY", "UMBER_KEY", "SKELETON_KEY"
+      ];
+
+      const apiKey = "YOUR_API_KEY_HERE";
       const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
       const json = await res.json();
-      const products = json.products;
-      allItems = Object.keys(products).map(id => {
-        const quick = products[id].quick_status;
-        const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
-        return {
-          id,
-          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-          price
-        };
-      });
-    }
+      const data = json.products;
 
-    itemInput.addEventListener("input", () => {
-      const query = itemInput.value.trim().toLowerCase();
-      itemDropdown.innerHTML = "";
-      if (!query) return (itemDropdown.style.display = "none");
-      const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
-      for (const item of filtered.slice(0, 50)) {
-        const div = document.createElement("div");
-        div.className = "dropdown-item";
-        div.innerHTML = `
-          <div class="dropdown-label">${item.name}</div>
-          <div class="dropdown-price">${item.price} /bz</div>
-        `;
-        div.onclick = () => {
-          itemInput.value = item.id;
-          itemDropdown.style.display = "none";
-          currentItemId = item.id;
-          loadData(item.id);
-        };
-        itemDropdown.appendChild(div);
-      }
-      itemDropdown.style.display = "block";
-    });
+      const categories = {
+        "Under Price Drop": [],
+        "About To Price Drop": [],
+        "Not Price Dropping": []
+      };
 
-    trackInput.addEventListener("change", () => {
-      const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
-      highlightTrackedOrder(tracked);
-    });
+      for (const id of itemsToCheck) {
+        const product = data[id];
+        if (!product || !product.buy_summary.length || !product.quick_status.sellMovingWeek) continue;
 
-    async function loadData(itemId) {
-      const apiKey = await getApiKey();
-      try {
-        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
-        const json = await res.json();
-        const data = json.products[itemId];
-        if (!data) throw new Error("Item not found");
-        instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
-        instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
-        latestBuySummary = data.sell_summary;
-        latestSellSummary = data.buy_summary;
-        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
-        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
-        highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
-      } catch (err) {
-        alert("Failed to load data. Check the item ID and API key.");
-        console.error(err);
-      }
-    }
+        const buyOrders = product.buy_summary;
+        const avg = buyOrders.reduce((acc, o) => acc + o.pricePerUnit, 0) / buyOrders.length;
+        const active = buyOrders[0];
+        const next = buyOrders[1];
+        const drop = next ? 1 - (next.pricePerUnit / active.pricePerUnit) : 0;
+        const itemsBetween = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount, 0) : 0;
+        const coinGap = next ? buyOrders.slice(0, 1).reduce((a, b) => a + b.amount * b.pricePerUnit, 0) : 0;
+        const score = drop > 0.15 ? (Math.E * drop * product.quick_status.sellMovingWeek / (itemsBetween || 1)) : 0;
 
-    function renderTable(summary, tbody, tfootRow, hourlyVolume) {
-      tbody.innerHTML = "";
-      let totalAmount = 0, totalCoins = 0;
-      for (const row of summary) {
-        const total = row.amount * row.pricePerUnit;
-        totalAmount += row.amount;
-        totalCoins += total;
-        const tr = document.createElement("tr");
-        tr.innerHTML = `
-          <td>${row.orders}</td>
-          <td>${row.amount}</td>
-          <td>${row.pricePerUnit.toLocaleString()} coins</td>
-          <td>${total.toLocaleString()} coins</td>
-        `;
-        if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
-        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-        tbody.appendChild(tr);
-      }
-      tfootRow.innerHTML = `
-        <td>Total:</td>
-        <td>${totalAmount}</td>
-        <td></td>
-        <td>${totalCoins.toLocaleString()} coins</td>
-      `;
-    }
+        let category = "Not Price Dropping";
+        if (active.pricePerUnit < 0.5 * avg) category = "Under Price Drop";
+        else if (drop > 0.15 && itemsBetween < 10 * product.quick_status.sellMovingWeek / 168) category = "About To Price Drop";
 
-    function highlightTrackedOrder(price) {
-      orderInfo.innerHTML = "";
-      if (!price || isNaN(price)) return;
-      const allRows = [...buyBody.children, ...sellBody.children];
-      allRows.forEach(row => row.classList.remove("highlight-blue"));
-      for (const [summary, body] of [
-        [latestBuySummary, buyBody],
-        [latestSellSummary, sellBody]
-      ]) {
-        let coinsBetween = 0, itemsBetween = 0, priority = 1;
-        for (const row of summary) {
-          const unit = parseFloat(row.pricePerUnit.toFixed(1));
-          if (Math.abs(unit - price) < 0.1) {
-            const index = summary.indexOf(row);
-            const tr = body.children[index];
-            if (tr) tr.classList.add("highlight-blue");
-            orderInfo.innerHTML = `
-              <div class="order-info">
-                <strong>Tracked Order Info</strong><br>
-                Priority position: ${priority}<br>
-                Items between: ${itemsBetween}<br>
-                Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
-                Items left in order: ${row.amount}
-              </div>
-            `;
-            return;
-          }
-          itemsBetween += row.amount;
-          coinsBetween += row.amount * row.pricePerUnit;
-          priority++;
-        }
+        categories[category].push({
+          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+          drop: (drop * 100).toFixed(1) + "%",
+          items: itemsBetween,
+          coins: Math.round(coinGap).toLocaleString() + " coins",
+          score
+        });
       }
-    }
 
-    function switchTab(tabId) {
-      document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
-      document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
-      document.querySelector(`[onclick*="${tabId}"]`).classList.add('active');
-      document.getElementById(tabId).classList.add('active');
+      container.innerHTML = Object.entries(categories).map(([cat, rows]) => `
+        <h3>${cat}</h3>
+        <table><thead>
+        <tr><th>Item Name</th><th>% Price Decrease</th><th>Item Volume</th><th>Coin Gap</th></tr>
+        </thead><tbody>
+        ${rows.sort((a, b) => cat === 'About To Price Drop' ? b.score - a.score : 0).map(row => `
+          <tr><td>${row.name}</td><td>${row.drop}</td><td>${row.items}</td><td>${row.coins}</td></tr>
+        `).join('')}
+        </tbody></table>
+      `).join('');
     }
-
-    fetchAllItems();
-    setInterval(() => {
-      if (currentItemId) loadData(currentItemId);
-    }, 3000);
   </script>
 </body>
 </html>

commit b40131ec20929b50ede6e83135a794a7a9882860
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 22:39:30 2025 +0200

    2nd tab attempt #1

diff --git a/.DS_Store b/.DS_Store
index 1e80910..de555c4 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/public/index.html b/public/index.html
index b624ec5..ef51a9e 100644
--- a/public/index.html
+++ b/public/index.html
@@ -21,6 +21,30 @@
       padding: 30px;
       border-radius: 16px;
     }
+    .tabs {
+      display: flex;
+      margin-bottom: 20px;
+      border-bottom: 2px solid rgba(255, 255, 255, 0.2);
+    }
+    .tab {
+      flex: 1;
+      padding: 10px;
+      text-align: center;
+      cursor: pointer;
+      background-color: rgba(255, 255, 255, 0.05);
+      border-radius: 8px 8px 0 0;
+      margin-right: 10px;
+    }
+    .tab.active {
+      background-color: rgba(255, 255, 255, 0.15);
+      font-weight: bold;
+    }
+    .tab-content {
+      display: none;
+    }
+    .tab-content.active {
+      display: block;
+    }
     h1, h2, h3 {
       text-align: center;
     }
@@ -115,49 +139,47 @@
 </head>
 <body>
   <div class="container">
-    <h1>SkyBlock Bazaar Tracker</h1>
+    <div class="tabs">
+      <div class="tab active" onclick="switchTab('ordersTab')">Orders</div>
+      <div class="tab" onclick="switchTab('volumeDrainTab')">Buy Order Volume Drain</div>
+    </div>
 
-    <div class="volume-box">
-      <div>
-        <strong>Instabuys / hour:</strong>
-        <div id="instabuys"></div>
+    <div id="ordersTab" class="tab-content active">
+      <h1>SkyBlock Bazaar Tracker</h1>
+      <div class="volume-box">
+        <div><strong>Instabuys / hour:</strong><div id="instabuys"></div></div>
+        <div><strong>Instasells / hour:</strong><div id="instasells"></div></div>
       </div>
-      <div>
-        <strong>Instasells / hour:</strong>
-        <div id="instasells"></div>
+      <h3>Item ID:</h3>
+      <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+      <div id="itemDropdown" class="dropdown"></div>
+      <h3>Track Order By Price:</h3>
+      <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
+      <div id="orderInfo"></div>
+      <div class="tables">
+        <div>
+          <h2>Buy Orders</h2>
+          <table id="buyTable">
+            <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+            <tbody></tbody>
+            <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+          </table>
+        </div>
+        <div>
+          <h2>Sell Orders</h2>
+          <table id="sellTable">
+            <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+            <tbody></tbody>
+            <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+          </table>
+        </div>
       </div>
     </div>
 
-    <h3>Item ID:</h3>
-    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-    <div id="itemDropdown" class="dropdown"></div>
-
-    <h3>Track Order By Price:</h3>
-    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
-
-    <div id="orderInfo"></div>
-
-    <div class="tables">
-      <div>
-        <h2>Buy Orders</h2>
-        <table id="buyTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
-          <tbody></tbody>
-          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-        </table>
-      </div>
-      <div>
-        <h2>Sell Orders</h2>
-        <table id="sellTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
-          <tbody></tbody>
-          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-        </table>
-      </div>
+    <div id="volumeDrainTab" class="tab-content">
+      <h2>Buy Order Volume Drain</h2>
+      <p>This tab will display categorized gemstone and plate items under different price drop statuses.</p>
+      <div id="priceDropCategories"></div>
     </div>
   </div>
 
@@ -205,9 +227,7 @@
         const div = document.createElement("div");
         div.className = "dropdown-item";
         div.innerHTML = `
-          <div class="dropdown-label">
-            ${item.name}
-          </div>
+          <div class="dropdown-label">${item.name}</div>
           <div class="dropdown-price">${item.price} /bz</div>
         `;
         div.onclick = () => {
@@ -306,10 +326,17 @@
       }
     }
 
+    function switchTab(tabId) {
+      document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
+      document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
+      document.querySelector(`[onclick*="${tabId}"]`).classList.add('active');
+      document.getElementById(tabId).classList.add('active');
+    }
+
     fetchAllItems();
     setInterval(() => {
       if (currentItemId) loadData(currentItemId);
     }, 3000);
   </script>
 </body>
-</html>
\ No newline at end of file
+</html>

commit f9fe8e43c6dec25a8330b7f188ba1b477d90609c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 15:17:56 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index dfb3f08..b624ec5 100644
--- a/public/index.html
+++ b/public/index.html
@@ -100,11 +100,6 @@
     .dropdown-item:hover {
       background-color: rgba(255, 255, 255, 0.1);
     }
-    .dropdown-item img {
-      width: 24px;
-      height: 24px;
-      margin-right: 10px;
-    }
     .dropdown-label {
       display: flex;
       align-items: center;
@@ -196,8 +191,7 @@
         return {
           id,
           name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
-          price,
-          icon: `https://sky.coflnet.com/item-icon/${id}.png`
+          price
         };
       });
     }
@@ -212,7 +206,6 @@
         div.className = "dropdown-item";
         div.innerHTML = `
           <div class="dropdown-label">
-            <img src="${item.icon}" />
             ${item.name}
           </div>
           <div class="dropdown-price">${item.price} /bz</div>
@@ -319,4 +312,4 @@
     }, 3000);
   </script>
 </body>
-</html>
+</html>
\ No newline at end of file

commit 7ef6f6c83f6ab3d2d987e3e85957a8174f91373f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 15:11:59 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 2f21406..dfb3f08 100644
--- a/public/index.html
+++ b/public/index.html
@@ -178,22 +178,36 @@
     const orderInfo = document.getElementById("orderInfo");
     const itemDropdown = document.getElementById("itemDropdown");
 
-    const items = [
-      { id: "ENCHANTED_TUNGSTEN", name: "Enchanted Tungsten", price: "9.82k", icon: "https://sky.coflnet.com/item-icon/ENCHANTED_TUNGSTEN.png" },
-      { id: "REFINED_TUNGSTEN", name: "Refined Tungsten", price: "1.88M", icon: "https://sky.coflnet.com/item-icon/REFINED_TUNGSTEN.png" },
-      { id: "TUNGSTEN", name: "Tungsten", price: "56.6", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN.png" },
-      { id: "TUNGSTEN_KEY", name: "Tungsten Key", price: "2.4M", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN_KEY.png" },
-      { id: "TUNGSTEN_REGULATOR", name: "Tungsten Regulator", price: "-", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN_REGULATOR.png" },
-      { id: "TUNGSTEN_PLATE", name: "Tungsten Plate", price: "9.81M", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN_PLATE.png" }
-    ];
+    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+    let allItems = [];
+
+    async function getApiKey() {
+      return "YOUR_API_KEY_HERE";
+    }
+
+    async function fetchAllItems() {
+      const apiKey = await getApiKey();
+      const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+      const json = await res.json();
+      const products = json.products;
+      allItems = Object.keys(products).map(id => {
+        const quick = products[id].quick_status;
+        const price = quick.sellPrice > 1000000 ? (quick.sellPrice / 1e6).toFixed(2) + 'M' : quick.sellPrice > 1000 ? (quick.sellPrice / 1e3).toFixed(1) + 'k' : quick.sellPrice.toFixed(1);
+        return {
+          id,
+          name: id.replace(/_/g, ' ').toLowerCase().replace(/\b\w/g, c => c.toUpperCase()),
+          price,
+          icon: `https://sky.coflnet.com/item-icon/${id}.png`
+        };
+      });
+    }
 
     itemInput.addEventListener("input", () => {
       const query = itemInput.value.trim().toLowerCase();
       itemDropdown.innerHTML = "";
       if (!query) return (itemDropdown.style.display = "none");
-
-      const filtered = items.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
-      for (const item of filtered) {
+      const filtered = allItems.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+      for (const item of filtered.slice(0, 50)) {
         const div = document.createElement("div");
         div.className = "dropdown-item";
         div.innerHTML = `
@@ -219,12 +233,6 @@
       highlightTrackedOrder(tracked);
     });
 
-    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
-
-    async function getApiKey() {
-      return "YOUR_API_KEY_HERE";
-    }
-
     async function loadData(itemId) {
       const apiKey = await getApiKey();
       try {
@@ -232,16 +240,12 @@
         const json = await res.json();
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
-
         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
-
         latestBuySummary = data.sell_summary;
         latestSellSummary = data.buy_summary;
-
         renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
         renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
-
         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
@@ -309,6 +313,7 @@
       }
     }
 
+    fetchAllItems();
     setInterval(() => {
       if (currentItemId) loadData(currentItemId);
     }, 3000);

commit a49db6891b932b08b31a17066ebd5e7b1008a9aa
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 15:08:51 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 1c1a2ef..2f21406 100644
--- a/public/index.html
+++ b/public/index.html
@@ -28,7 +28,7 @@
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin: 10px 0 30px;
+      margin: 10px 0 10px;
       border-radius: 6px;
       border: none;
     }
@@ -81,6 +81,41 @@
       padding: 20px;
       border-radius: 12px;
     }
+    .dropdown {
+      background-color: rgba(0, 0, 0, 0.85);
+      border-radius: 8px;
+      padding: 10px;
+      max-height: 300px;
+      overflow-y: auto;
+      display: none;
+    }
+    .dropdown-item {
+      display: flex;
+      align-items: center;
+      justify-content: space-between;
+      padding: 8px 12px;
+      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
+      cursor: pointer;
+    }
+    .dropdown-item:hover {
+      background-color: rgba(255, 255, 255, 0.1);
+    }
+    .dropdown-item img {
+      width: 24px;
+      height: 24px;
+      margin-right: 10px;
+    }
+    .dropdown-label {
+      display: flex;
+      align-items: center;
+    }
+    .dropdown-price {
+      background-color: goldenrod;
+      padding: 4px 8px;
+      border-radius: 6px;
+      font-weight: bold;
+      color: black;
+    }
   </style>
 </head>
 <body>
@@ -100,6 +135,7 @@
 
     <h3>Item ID:</h3>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+    <div id="itemDropdown" class="dropdown"></div>
 
     <h3>Track Order By Price:</h3>
     <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
@@ -133,19 +169,49 @@
   <script>
     const itemInput = document.getElementById("itemInput");
     const trackInput = document.getElementById("trackInput");
-    const buyBody = document.querySelector("#buyTable tbody");   // For sell_summary (buy orders)
-    const sellBody = document.querySelector("#sellTable tbody"); // For buy_summary (sell orders)
+    const buyBody = document.querySelector("#buyTable tbody");
+    const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
     const instabuys = document.getElementById("instabuys");
     const instasells = document.getElementById("instasells");
     const orderInfo = document.getElementById("orderInfo");
+    const itemDropdown = document.getElementById("itemDropdown");
 
-    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+    const items = [
+      { id: "ENCHANTED_TUNGSTEN", name: "Enchanted Tungsten", price: "9.82k", icon: "https://sky.coflnet.com/item-icon/ENCHANTED_TUNGSTEN.png" },
+      { id: "REFINED_TUNGSTEN", name: "Refined Tungsten", price: "1.88M", icon: "https://sky.coflnet.com/item-icon/REFINED_TUNGSTEN.png" },
+      { id: "TUNGSTEN", name: "Tungsten", price: "56.6", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN.png" },
+      { id: "TUNGSTEN_KEY", name: "Tungsten Key", price: "2.4M", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN_KEY.png" },
+      { id: "TUNGSTEN_REGULATOR", name: "Tungsten Regulator", price: "-", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN_REGULATOR.png" },
+      { id: "TUNGSTEN_PLATE", name: "Tungsten Plate", price: "9.81M", icon: "https://sky.coflnet.com/item-icon/TUNGSTEN_PLATE.png" }
+    ];
+
+    itemInput.addEventListener("input", () => {
+      const query = itemInput.value.trim().toLowerCase();
+      itemDropdown.innerHTML = "";
+      if (!query) return (itemDropdown.style.display = "none");
 
-    itemInput.addEventListener("change", () => {
-      currentItemId = itemInput.value.trim().toUpperCase();
-      loadData(currentItemId);
+      const filtered = items.filter(i => i.name.toLowerCase().includes(query) || i.id.toLowerCase().includes(query));
+      for (const item of filtered) {
+        const div = document.createElement("div");
+        div.className = "dropdown-item";
+        div.innerHTML = `
+          <div class="dropdown-label">
+            <img src="${item.icon}" />
+            ${item.name}
+          </div>
+          <div class="dropdown-price">${item.price} /bz</div>
+        `;
+        div.onclick = () => {
+          itemInput.value = item.id;
+          itemDropdown.style.display = "none";
+          currentItemId = item.id;
+          loadData(item.id);
+        };
+        itemDropdown.appendChild(div);
+      }
+      itemDropdown.style.display = "block";
     });
 
     trackInput.addEventListener("change", () => {
@@ -153,8 +219,10 @@
       highlightTrackedOrder(tracked);
     });
 
+    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
+
     async function getApiKey() {
-      return "YOUR_API_KEY_HERE"; // Replace with your real key if not using server proxy
+      return "YOUR_API_KEY_HERE";
     }
 
     async function loadData(itemId) {
@@ -168,12 +236,11 @@
         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
 
-        // Swap summaries to reflect actual order direction
-        latestBuySummary = data.sell_summary; // Players placing buy orders
-        latestSellSummary = data.buy_summary; // Players placing sell orders
+        latestBuySummary = data.sell_summary;
+        latestSellSummary = data.buy_summary;
 
-        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent)); // Buy orders filled by instasells
-        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent)); // Sell orders filled by instabuys
+        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
 
         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
       } catch (err) {
@@ -185,12 +252,10 @@
     function renderTable(summary, tbody, tfootRow, hourlyVolume) {
       tbody.innerHTML = "";
       let totalAmount = 0, totalCoins = 0;
-
       for (const row of summary) {
         const total = row.amount * row.pricePerUnit;
         totalAmount += row.amount;
         totalCoins += total;
-
         const tr = document.createElement("tr");
         tr.innerHTML = `
           <td>${row.orders}</td>
@@ -198,16 +263,10 @@
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
-
-        if (row.amount > hourlyVolume * 5) {
-          tr.classList.add("highlight-red");
-        } else if (row.amount > hourlyVolume) {
-          tr.classList.add("highlight-yellow");
-        }
-
+        if (row.amount > hourlyVolume * 5) tr.classList.add("highlight-red");
+        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
         tbody.appendChild(tr);
       }
-
       tfootRow.innerHTML = `
         <td>Total:</td>
         <td>${totalAmount}</td>
@@ -219,23 +278,19 @@
     function highlightTrackedOrder(price) {
       orderInfo.innerHTML = "";
       if (!price || isNaN(price)) return;
-
       const allRows = [...buyBody.children, ...sellBody.children];
       allRows.forEach(row => row.classList.remove("highlight-blue"));
-
       for (const [summary, body] of [
         [latestBuySummary, buyBody],
         [latestSellSummary, sellBody]
       ]) {
         let coinsBetween = 0, itemsBetween = 0, priority = 1;
-
         for (const row of summary) {
           const unit = parseFloat(row.pricePerUnit.toFixed(1));
           if (Math.abs(unit - price) < 0.1) {
             const index = summary.indexOf(row);
             const tr = body.children[index];
             if (tr) tr.classList.add("highlight-blue");
-
             orderInfo.innerHTML = `
               <div class="order-info">
                 <strong>Tracked Order Info</strong><br>

commit 48d0436853f7d11164df453628956463f61bf27e
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 14:55:32 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 340a101..1c1a2ef 100644
--- a/public/index.html
+++ b/public/index.html
@@ -109,7 +109,7 @@
     <div class="tables">
       <div>
         <h2>Buy Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -119,7 +119,7 @@
       </div>
       <div>
         <h2>Sell Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -133,8 +133,8 @@
   <script>
     const itemInput = document.getElementById("itemInput");
     const trackInput = document.getElementById("trackInput");
-    const buyBody = document.querySelector("#buyTable tbody");
-    const sellBody = document.querySelector("#sellTable tbody");
+    const buyBody = document.querySelector("#buyTable tbody");   // For sell_summary (buy orders)
+    const sellBody = document.querySelector("#sellTable tbody"); // For buy_summary (sell orders)
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
     const instabuys = document.getElementById("instabuys");
@@ -154,7 +154,7 @@
     });
 
     async function getApiKey() {
-      return "YOUR_API_KEY_HERE";
+      return "YOUR_API_KEY_HERE"; // Replace with your real key if not using server proxy
     }
 
     async function loadData(itemId) {
@@ -168,12 +168,12 @@
         instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
         instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
 
-        latestBuySummary = data.buy_summary;
-        latestSellSummary = data.sell_summary;
-
-        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instabuys.textContent));
-        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instasells.textContent));
+        // Swap summaries to reflect actual order direction
+        latestBuySummary = data.sell_summary; // Players placing buy orders
+        latestSellSummary = data.buy_summary; // Players placing sell orders
 
+        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent)); // Buy orders filled by instasells
+        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent)); // Sell orders filled by instabuys
 
         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
       } catch (err) {
@@ -223,12 +223,11 @@
       const allRows = [...buyBody.children, ...sellBody.children];
       allRows.forEach(row => row.classList.remove("highlight-blue"));
 
-      for (const [tableName, summary, body, hourly] of [
-        ["Buy", latestBuySummary, buyBody, parseFloat(instasells.textContent)],
-        ["Sell", latestSellSummary, sellBody, parseFloat(instabuys.textContent)]
+      for (const [summary, body] of [
+        [latestBuySummary, buyBody],
+        [latestSellSummary, sellBody]
       ]) {
         let coinsBetween = 0, itemsBetween = 0, priority = 1;
-        let found = false;
 
         for (const row of summary) {
           const unit = parseFloat(row.pricePerUnit.toFixed(1));
@@ -246,15 +245,12 @@
                 Items left in order: ${row.amount}
               </div>
             `;
-            found = true;
-            break;
+            return;
           }
           itemsBetween += row.amount;
           coinsBetween += row.amount * row.pricePerUnit;
           priority++;
         }
-
-        if (found) break;
       }
     }
 

commit 94b26b3eed696eccac0b1535bda7e9ec575e2331
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 11:58:41 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index a7a3f26..340a101 100644
--- a/public/index.html
+++ b/public/index.html
@@ -171,8 +171,9 @@
         latestBuySummary = data.buy_summary;
         latestSellSummary = data.sell_summary;
 
-        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
-        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instabuys.textContent));
+        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instasells.textContent));
+
 
         highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
       } catch (err) {

commit 7cbd2bc4ab3e765ce4158f9c608f0f0f2764fe48
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 11:49:37 2025 +0200

    Fix

diff --git a/public/index.html b/public/index.html
index fdb3b72..a7a3f26 100644
--- a/public/index.html
+++ b/public/index.html
@@ -238,7 +238,7 @@
 
             orderInfo.innerHTML = `
               <div class="order-info">
-                <strong>Tracked Order Info (${tableName})</strong><br>
+                <strong>Tracked Order Info</strong><br>
                 Priority position: ${priority}<br>
                 Items between: ${itemsBetween}<br>
                 Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>

commit 11ed1b289e3785a6ed8a9a338884be842a409434
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 11:48:27 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 938e24f..fdb3b72 100644
--- a/public/index.html
+++ b/public/index.html
@@ -109,7 +109,7 @@
     <div class="tables">
       <div>
         <h2>Buy Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -119,7 +119,7 @@
       </div>
       <div>
         <h2>Sell Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>

commit 4ea053e17c8e668c2df3f19995f811c71cb24dac
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 11:46:56 2025 +0200

    Auto update!

diff --git a/public/index.html b/public/index.html
index 5a2149b..938e24f 100644
--- a/public/index.html
+++ b/public/index.html
@@ -109,7 +109,7 @@
     <div class="tables">
       <div>
         <h2>Buy Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -119,7 +119,7 @@
       </div>
       <div>
         <h2>Sell Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -141,10 +141,11 @@
     const instasells = document.getElementById("instasells");
     const orderInfo = document.getElementById("orderInfo");
 
-    let latestBuySummary = [], latestSellSummary = [];
+    let latestBuySummary = [], latestSellSummary = [], currentItemId = "";
 
     itemInput.addEventListener("change", () => {
-      loadData(itemInput.value.trim().toUpperCase());
+      currentItemId = itemInput.value.trim().toUpperCase();
+      loadData(currentItemId);
     });
 
     trackInput.addEventListener("change", () => {
@@ -237,7 +238,7 @@
 
             orderInfo.innerHTML = `
               <div class="order-info">
-                <strong>Tracked Order Info</strong><br>
+                <strong>Tracked Order Info (${tableName})</strong><br>
                 Priority position: ${priority}<br>
                 Items between: ${itemsBetween}<br>
                 Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
@@ -255,6 +256,10 @@
         if (found) break;
       }
     }
+
+    setInterval(() => {
+      if (currentItemId) loadData(currentItemId);
+    }, 3000);
   </script>
 </body>
 </html>

commit 0a447d68b94a4dd88b0e3989fa88eee77199a2eb
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:45:48 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index f660b7f..5a2149b 100644
--- a/public/index.html
+++ b/public/index.html
@@ -108,7 +108,7 @@
 
     <div class="tables">
       <div>
-        <h2>Sell Orders</h2>
+        <h2>Buy Orders</h2>
         <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
@@ -118,7 +118,7 @@
         </table>
       </div>
       <div>
-        <h2>Buy Orders</h2>
+        <h2>Sell Orders</h2>
         <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>

commit 301ba000fba6a0efd6745b75b34fb21065e76b91
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:43:16 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 31fbca9..f660b7f 100644
--- a/public/index.html
+++ b/public/index.html
@@ -4,7 +4,7 @@
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" href="site-icon.jpeg" type="image/jpeg">
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -15,20 +15,20 @@
       color: #fff;
     }
     .container {
-      max-width: 1100px;
+      max-width: 1200px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
       border-radius: 16px;
     }
-    h1, h2 {
+    h1, h2, h3 {
       text-align: center;
     }
     input {
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin: 10px 0 30px 0;
+      margin: 10px 0 30px;
       border-radius: 6px;
       border: none;
     }
@@ -54,7 +54,7 @@
       gap: 20px;
     }
     .tables > div {
-      width: 50%;
+      flex: 1;
     }
     .highlight-yellow {
       background-color: rgba(255, 255, 0, 0.2);
@@ -63,49 +63,52 @@
       background-color: rgba(255, 0, 0, 0.4);
     }
     .highlight-blue {
-      background-color: rgba(0, 0, 255, 0.3);
-    }
-    .summary {
-      display: flex;
-      justify-content: space-between;
-      margin-bottom: 20px;
+      background-color: rgba(0, 191, 255, 0.3);
     }
-    .summary > div {
-      background-color: rgba(255, 255, 255, 0.05);
-      padding: 10px 20px;
-      border-radius: 8px;
-      flex: 1;
-      margin: 0 10px;
+    .order-info {
+      margin: 20px auto;
+      max-width: 600px;
       text-align: center;
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 20px;
+      border-radius: 10px;
     }
-    .track-info {
-      text-align: center;
+    .volume-box {
+      display: flex;
+      justify-content: space-around;
       margin-bottom: 20px;
-      background-color: rgba(0, 0, 0, 0.6);
-      padding: 15px;
-      border-radius: 10px;
+      background-color: rgba(255,255,255,0.05);
+      padding: 20px;
+      border-radius: 12px;
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <div class="summary">
-      <div><strong>Instabuys / hour:</strong><br><span id="instabuys"></span></div>
-      <div><strong>Instasells / hour:</strong><br><span id="instasells"></span></div>
+
+    <div class="volume-box">
+      <div>
+        <strong>Instabuys / hour:</strong>
+        <div id="instabuys"></div>
+      </div>
+      <div>
+        <strong>Instasells / hour:</strong>
+        <div id="instasells"></div>
+      </div>
     </div>
 
-    <h3 style="text-align:center">Item ID:</h3>
+    <h3>Item ID:</h3>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <h3 style="text-align:center">Track Order By Price:</h3>
-    <input id="trackInput" placeholder="Enter price (e.g. 10,670,396.3)" />
+    <h3>Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter price to track (e.g. 10,670,396.3)" />
 
-    <div id="trackDetails"></div>
+    <div id="orderInfo"></div>
 
     <div class="tables">
       <div>
-        <h2>Buy Orders</h2>
+        <h2>Sell Orders</h2>
         <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
@@ -115,7 +118,7 @@
         </table>
       </div>
       <div>
-        <h2>Sell Orders</h2>
+        <h2>Buy Orders</h2>
         <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
@@ -136,10 +139,18 @@
     const sellFoot = document.querySelector("#sellTable tfoot tr");
     const instabuys = document.getElementById("instabuys");
     const instasells = document.getElementById("instasells");
-    const trackDetails = document.getElementById("trackDetails");
+    const orderInfo = document.getElementById("orderInfo");
 
-    itemInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
-    trackInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
+    let latestBuySummary = [], latestSellSummary = [];
+
+    itemInput.addEventListener("change", () => {
+      loadData(itemInput.value.trim().toUpperCase());
+    });
+
+    trackInput.addEventListener("change", () => {
+      const tracked = parseFloat(trackInput.value.replace(/,/g, ''));
+      highlightTrackedOrder(tracked);
+    });
 
     async function getApiKey() {
       return "YOUR_API_KEY_HERE";
@@ -150,32 +161,30 @@
       try {
         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
         const json = await res.json();
-        const product = json.products[itemId];
-        if (!product) throw new Error("Item not found");
+        const data = json.products[itemId];
+        if (!data) throw new Error("Item not found");
 
-        const buySummary = product.buy_summary;
-        const sellSummary = product.sell_summary;
+        instabuys.textContent = data.quick_status.buyMovingWeek ? (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1) : "-";
+        instasells.textContent = data.quick_status.sellMovingWeek ? (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1) : "-";
 
-        const volume = product.quick_status;
-        instabuys.textContent = (volume.buyMovingWeek / 168).toFixed(1);
-        instasells.textContent = (volume.sellMovingWeek / 168).toFixed(1);
+        latestBuySummary = data.buy_summary;
+        latestSellSummary = data.sell_summary;
 
-        renderTable(buySummary, buyBody, buyFoot, volume.sellMovingWeek / 168, 'buy');
-        renderTable(sellSummary, sellBody, sellFoot, volume.buyMovingWeek / 168, 'sell');
+        renderTable(latestBuySummary, buyBody, buyFoot, parseFloat(instasells.textContent));
+        renderTable(latestSellSummary, sellBody, sellFoot, parseFloat(instabuys.textContent));
+
+        highlightTrackedOrder(parseFloat(trackInput.value.replace(/,/g, '')));
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(summary, tbody, tfootRow, hourlyVolume, type) {
+    function renderTable(summary, tbody, tfootRow, hourlyVolume) {
       tbody.innerHTML = "";
       let totalAmount = 0, totalCoins = 0;
-      let trackPrice = parseFloat(trackInput.value.replace(/,/g, ''));
-      let matchIndex = -1, matchRow = null;
 
-      for (let i = 0; i < summary.length; i++) {
-        const row = summary[i];
+      for (const row of summary) {
         const total = row.amount * row.pricePerUnit;
         totalAmount += row.amount;
         totalCoins += total;
@@ -188,13 +197,10 @@
           <td>${total.toLocaleString()} coins</td>
         `;
 
-        if (row.amount > 5 * hourlyVolume) tr.classList.add("highlight-red");
-        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-
-        if (Math.abs(row.pricePerUnit - trackPrice) < 0.01) {
-          tr.classList.add("highlight-blue");
-          matchIndex = i;
-          matchRow = row;
+        if (row.amount > hourlyVolume * 5) {
+          tr.classList.add("highlight-red");
+        } else if (row.amount > hourlyVolume) {
+          tr.classList.add("highlight-yellow");
         }
 
         tbody.appendChild(tr);
@@ -206,21 +212,47 @@
         <td></td>
         <td>${totalCoins.toLocaleString()} coins</td>
       `;
+    }
 
-      if (matchIndex >= 0 && matchRow) {
-        const itemsBefore = summary.slice(0, matchIndex).reduce((sum, row) => sum + row.amount, 0);
-        const coinGap = summary.slice(0, matchIndex).reduce((sum, row) => sum + row.amount * row.pricePerUnit, 0);
-        trackDetails.innerHTML = `
-          <div class="track-info">
-            <strong>Tracked Order Info (${type === 'buy' ? 'Buy' : 'Sell'})</strong><br>
-            Priority position: ${matchIndex + 1}<br>
-            Items between: ${itemsBefore.toLocaleString()}<br>
-            Coin gap: ${coinGap.toLocaleString()} coins<br>
-            Items left in order: ${matchRow.amount.toLocaleString()}
-          </div>
-        `;
-      } else {
-        trackDetails.innerHTML = "";
+    function highlightTrackedOrder(price) {
+      orderInfo.innerHTML = "";
+      if (!price || isNaN(price)) return;
+
+      const allRows = [...buyBody.children, ...sellBody.children];
+      allRows.forEach(row => row.classList.remove("highlight-blue"));
+
+      for (const [tableName, summary, body, hourly] of [
+        ["Buy", latestBuySummary, buyBody, parseFloat(instasells.textContent)],
+        ["Sell", latestSellSummary, sellBody, parseFloat(instabuys.textContent)]
+      ]) {
+        let coinsBetween = 0, itemsBetween = 0, priority = 1;
+        let found = false;
+
+        for (const row of summary) {
+          const unit = parseFloat(row.pricePerUnit.toFixed(1));
+          if (Math.abs(unit - price) < 0.1) {
+            const index = summary.indexOf(row);
+            const tr = body.children[index];
+            if (tr) tr.classList.add("highlight-blue");
+
+            orderInfo.innerHTML = `
+              <div class="order-info">
+                <strong>Tracked Order Info</strong><br>
+                Priority position: ${priority}<br>
+                Items between: ${itemsBetween}<br>
+                Coin gap: ${Math.round(coinsBetween).toLocaleString()} coins<br>
+                Items left in order: ${row.amount}
+              </div>
+            `;
+            found = true;
+            break;
+          }
+          itemsBetween += row.amount;
+          coinsBetween += row.amount * row.pricePerUnit;
+          priority++;
+        }
+
+        if (found) break;
       }
     }
   </script>

commit b245b7f3fd0305b2dac8e396ceb25f8690d0cf17
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:38:10 2025 +0200

    Revert "Update index.html"
    
    This reverts commit 628b89a716c60415212e90a18e09d125bf5a9e6f.

diff --git a/public/index.html b/public/index.html
index 4039985..31fbca9 100644
--- a/public/index.html
+++ b/public/index.html
@@ -106,7 +106,7 @@
     <div class="tables">
       <div>
         <h2>Buy Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -116,7 +116,7 @@
       </div>
       <div>
         <h2>Sell Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>

commit 5ea5a120c83414f6daf23a91aeaabb8c8be0e9b4
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:29:59 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 318983e..4039985 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" href="site-icon.jpeg" />
+  <link rel="icon" href="site-icon.jpeg" type="image/jpeg">
   <style>
     body {
       margin: 0;
@@ -15,7 +15,7 @@
       color: #fff;
     }
     .container {
-      max-width: 1200px;
+      max-width: 1100px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
@@ -24,35 +24,14 @@
     h1, h2 {
       text-align: center;
     }
-    .centered-label {
-      text-align: center;
-      font-weight: bold;
-      margin-bottom: 5px;
-    }
     input {
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin: 10px 0 30px;
+      margin: 10px 0 30px 0;
       border-radius: 6px;
       border: none;
     }
-    .summary {
-      display: flex;
-      justify-content: space-around;
-      background: rgba(255, 255, 255, 0.1);
-      padding: 10px;
-      margin-bottom: 20px;
-      border-radius: 12px;
-    }
-    .summary div {
-      font-size: 18px;
-      font-weight: bold;
-    }
-    .tables {
-      display: flex;
-      gap: 20px;
-    }
     table {
       width: 100%;
       border-collapse: collapse;
@@ -70,47 +49,64 @@
     tfoot td {
       font-weight: bold;
     }
-    .warn1 {
+    .tables {
+      display: flex;
+      gap: 20px;
+    }
+    .tables > div {
+      width: 50%;
+    }
+    .highlight-yellow {
       background-color: rgba(255, 255, 0, 0.2);
     }
-    .warn2 {
+    .highlight-red {
       background-color: rgba(255, 0, 0, 0.4);
     }
-    .tracked {
-      background-color: rgba(0, 128, 255, 0.3);
+    .highlight-blue {
+      background-color: rgba(0, 0, 255, 0.3);
     }
-    #orderInfo {
+    .summary {
+      display: flex;
+      justify-content: space-between;
+      margin-bottom: 20px;
+    }
+    .summary > div {
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 10px 20px;
+      border-radius: 8px;
+      flex: 1;
+      margin: 0 10px;
       text-align: center;
-      margin-top: -10px;
-      margin-bottom: 30px;
-      background-color: rgba(255, 255, 255, 0.07);
+    }
+    .track-info {
+      text-align: center;
+      margin-bottom: 20px;
+      background-color: rgba(0, 0, 0, 0.6);
       padding: 15px;
       border-radius: 10px;
-      display: none;
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
-
     <div class="summary">
-      <div><span>Instabuys / hour:</span> <span id="instabuys">?</span></div>
-      <div><span>Instasells / hour:</span> <span id="instasells">?</span></div>
+      <div><strong>Instabuys / hour:</strong><br><span id="instabuys"></span></div>
+      <div><strong>Instasells / hour:</strong><br><span id="instasells"></span></div>
     </div>
 
-    <div class="centered-label">Item ID:</div>
+    <h3 style="text-align:center">Item ID:</h3>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <div class="centered-label">Track Order By Price:</div>
-    <input id="trackInput" placeholder="Enter Unit Price (e.g. 10,670,396.3)" />
+    <h3 style="text-align:center">Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter price (e.g. 10,670,396.3)" />
 
-    <div id="orderInfo"></div>
+    <div id="trackDetails"></div>
 
     <div class="tables">
-      <div style="width: 50%">
-        <h2>Sell Orders</h2>
-        <table id="sellTable">
+      <div>
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -118,9 +114,9 @@
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
-      <div style="width: 50%">
-        <h2>Buy Orders</h2>
-        <table id="buyTable">
+      <div>
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -140,97 +136,91 @@
     const sellFoot = document.querySelector("#sellTable tfoot tr");
     const instabuys = document.getElementById("instabuys");
     const instasells = document.getElementById("instasells");
-    const orderInfo = document.getElementById("orderInfo");
-
-    let currentData = null;
-    let currentTrack = null;
+    const trackDetails = document.getElementById("trackDetails");
 
-    itemInput.addEventListener("change", () => {
-      loadData(itemInput.value.trim().toUpperCase());
-    });
+    itemInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
+    trackInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
 
-    trackInput.addEventListener("change", () => {
-      currentTrack = parseFloat(trackInput.value.replace(/,/g, ""));
-      if (currentData) renderTables(currentData);
-    });
+    async function getApiKey() {
+      return "YOUR_API_KEY_HERE";
+    }
 
     async function loadData(itemId) {
+      const apiKey = await getApiKey();
       try {
-        const apiKey = "YOUR_API_KEY_HERE";
         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
         const json = await res.json();
-        const data = json.products[itemId];
-        if (!data) throw new Error("Item not found");
-        currentData = data;
-        currentTrack = parseFloat(trackInput.value.replace(/,/g, "")) || null;
-        renderTables(data);
-        instabuys.textContent = (data.quick_status.buyMovingWeek / 168).toFixed(1);
-        instasells.textContent = (data.quick_status.sellMovingWeek / 168).toFixed(1);
+        const product = json.products[itemId];
+        if (!product) throw new Error("Item not found");
+
+        const buySummary = product.buy_summary;
+        const sellSummary = product.sell_summary;
+
+        const volume = product.quick_status;
+        instabuys.textContent = (volume.buyMovingWeek / 168).toFixed(1);
+        instasells.textContent = (volume.sellMovingWeek / 168).toFixed(1);
+
+        renderTable(buySummary, buyBody, buyFoot, volume.sellMovingWeek / 168, 'buy');
+        renderTable(sellSummary, sellBody, sellFoot, volume.buyMovingWeek / 168, 'sell');
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTables(data) {
-      renderTable(data.buy_summary, buyBody, buyFoot, currentTrack, data.quick_status.sellMovingWeek / 168, "buy");
-      renderTable(data.sell_summary, sellBody, sellFoot, currentTrack, data.quick_status.buyMovingWeek / 168, "sell");
-    }
-
-    function renderTable(summary, tbody, tfootRow, tracked, hourlyVolume, type) {
+    function renderTable(summary, tbody, tfootRow, hourlyVolume, type) {
       tbody.innerHTML = "";
-      let totalOrders = 0, totalAmount = 0, totalCoins = 0;
-      let found = false;
-      let trackedPriority = 0, itemsBetween = 0, coinGap = 0, trackedAmount = 0;
+      let totalAmount = 0, totalCoins = 0;
+      let trackPrice = parseFloat(trackInput.value.replace(/,/g, ''));
+      let matchIndex = -1, matchRow = null;
 
-      for (const row of summary) {
+      for (let i = 0; i < summary.length; i++) {
+        const row = summary[i];
         const total = row.amount * row.pricePerUnit;
-        totalOrders += row.orders;
         totalAmount += row.amount;
         totalCoins += total;
 
         const tr = document.createElement("tr");
-        let cls = "";
-        if (row.amount > hourlyVolume * 5) cls = "warn2";
-        else if (row.amount > hourlyVolume) cls = "warn1";
-        if (tracked && row.pricePerUnit === tracked) {
-          cls = "tracked";
-          trackedAmount = row.amount;
-          found = true;
-        } else if (!found && tracked) {
-          itemsBetween += row.amount;
-          coinGap += row.amount * row.pricePerUnit;
-          trackedPriority++;
-        }
-
-        tr.className = cls;
         tr.innerHTML = `
           <td>${row.orders}</td>
-          <td>${row.amount.toLocaleString()}</td>
+          <td>${row.amount}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
+
+        if (row.amount > 5 * hourlyVolume) tr.classList.add("highlight-red");
+        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+
+        if (Math.abs(row.pricePerUnit - trackPrice) < 0.01) {
+          tr.classList.add("highlight-blue");
+          matchIndex = i;
+          matchRow = row;
+        }
+
         tbody.appendChild(tr);
       }
 
       tfootRow.innerHTML = `
         <td>Total:</td>
-        <td>${totalAmount.toLocaleString()}</td>
+        <td>${totalAmount}</td>
         <td></td>
         <td>${totalCoins.toLocaleString()} coins</td>
       `;
 
-      if (found) {
-        orderInfo.style.display = "block";
-        orderInfo.innerHTML = `
-          <strong>Tracked Order Info (${type === "buy" ? "Buy" : "Sell"})</strong><br/>
-          Priority position: ${trackedPriority + 1}<br/>
-          Items between: ${itemsBetween.toLocaleString()}<br/>
-          Coin gap: ${coinGap.toLocaleString()} coins<br/>
-          Items left in order: ${trackedAmount.toLocaleString()}
+      if (matchIndex >= 0 && matchRow) {
+        const itemsBefore = summary.slice(0, matchIndex).reduce((sum, row) => sum + row.amount, 0);
+        const coinGap = summary.slice(0, matchIndex).reduce((sum, row) => sum + row.amount * row.pricePerUnit, 0);
+        trackDetails.innerHTML = `
+          <div class="track-info">
+            <strong>Tracked Order Info (${type === 'buy' ? 'Buy' : 'Sell'})</strong><br>
+            Priority position: ${matchIndex + 1}<br>
+            Items between: ${itemsBefore.toLocaleString()}<br>
+            Coin gap: ${coinGap.toLocaleString()} coins<br>
+            Items left in order: ${matchRow.amount.toLocaleString()}
+          </div>
         `;
       } else {
-        orderInfo.style.display = "none";
+        trackDetails.innerHTML = "";
       }
     }
   </script>

commit 412d676f63cf8c4ebe737547247ef2a1ac2906ef
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:23:56 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index b039f59..318983e 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <link rel="icon" href="site-icon.jpeg">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>SkyBlock Bazaar Tracker</title>
+  <link rel="icon" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -15,7 +15,7 @@
       color: #fff;
     }
     .container {
-      max-width: 1100px;
+      max-width: 1200px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
@@ -24,6 +24,11 @@
     h1, h2 {
       text-align: center;
     }
+    .centered-label {
+      text-align: center;
+      font-weight: bold;
+      margin-bottom: 5px;
+    }
     input {
       width: 100%;
       padding: 10px;
@@ -32,21 +37,20 @@
       border-radius: 6px;
       border: none;
     }
-    .rate-box {
+    .summary {
       display: flex;
       justify-content: space-around;
-      margin: 10px 0 30px;
+      background: rgba(255, 255, 255, 0.1);
       padding: 10px;
-      background-color: rgba(255, 255, 255, 0.05);
+      margin-bottom: 20px;
       border-radius: 12px;
-      text-align: center;
     }
-    .rate-box div {
-      flex: 1;
+    .summary div {
+      font-size: 18px;
+      font-weight: bold;
     }
     .tables {
       display: flex;
-      justify-content: space-between;
       gap: 20px;
     }
     table {
@@ -66,44 +70,47 @@
     tfoot td {
       font-weight: bold;
     }
-    .highlight-low {
+    .warn1 {
       background-color: rgba(255, 255, 0, 0.2);
     }
-    .highlight-high {
-      background-color: rgba(255, 0, 0, 0.3);
+    .warn2 {
+      background-color: rgba(255, 0, 0, 0.4);
     }
     .tracked {
-      background-color: rgba(0, 100, 255, 0.4);
+      background-color: rgba(0, 128, 255, 0.3);
     }
-    .track-box {
-      background-color: rgba(255, 255, 255, 0.1);
-      padding: 12px;
-      border-radius: 10px;
-      margin: 20px 0;
+    #orderInfo {
       text-align: center;
+      margin-top: -10px;
+      margin-bottom: 30px;
+      background-color: rgba(255, 255, 255, 0.07);
+      padding: 15px;
+      border-radius: 10px;
+      display: none;
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <div class="rate-box">
-      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">-</span></div>
-      <div><strong>Instasells / hour:</strong><br><span id="instasells">-</span></div>
+
+    <div class="summary">
+      <div><span>Instabuys / hour:</span> <span id="instabuys">?</span></div>
+      <div><span>Instasells / hour:</span> <span id="instasells">?</span></div>
     </div>
 
-    <h3>Item ID:</h3>
+    <div class="centered-label">Item ID:</div>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <h3>Track Order By Price:</h3>
-    <input id="trackInput" placeholder="Enter Coin Equivalent (e.g. 10,670,396.3)" />
+    <div class="centered-label">Track Order By Price:</div>
+    <input id="trackInput" placeholder="Enter Unit Price (e.g. 10,670,396.3)" />
 
-    <div id="trackedInfo"></div>
+    <div id="orderInfo"></div>
 
     <div class="tables">
       <div style="width: 50%">
-        <h2>Buy Orders</h2>
-        <table id="buyTable">
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -112,8 +119,8 @@
         </table>
       </div>
       <div style="width: 50%">
-        <h2>Sell Orders</h2>
-        <table id="sellTable">
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -125,89 +132,81 @@
   </div>
 
   <script>
-    const input = document.getElementById("itemInput");
+    const itemInput = document.getElementById("itemInput");
     const trackInput = document.getElementById("trackInput");
-
-    input.addEventListener("change", () => loadData(input.value.trim().toUpperCase()));
-    trackInput.addEventListener("change", () => loadData(input.value.trim().toUpperCase()));
-
-    async function getApiKey() {
-      return "YOUR_API_KEY_HERE";
-    }
+    const buyBody = document.querySelector("#buyTable tbody");
+    const sellBody = document.querySelector("#sellTable tbody");
+    const buyFoot = document.querySelector("#buyTable tfoot tr");
+    const sellFoot = document.querySelector("#sellTable tfoot tr");
+    const instabuys = document.getElementById("instabuys");
+    const instasells = document.getElementById("instasells");
+    const orderInfo = document.getElementById("orderInfo");
+
+    let currentData = null;
+    let currentTrack = null;
+
+    itemInput.addEventListener("change", () => {
+      loadData(itemInput.value.trim().toUpperCase());
+    });
+
+    trackInput.addEventListener("change", () => {
+      currentTrack = parseFloat(trackInput.value.replace(/,/g, ""));
+      if (currentData) renderTables(currentData);
+    });
 
     async function loadData(itemId) {
-      const apiKey = await getApiKey();
       try {
+        const apiKey = "YOUR_API_KEY_HERE";
         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
         const json = await res.json();
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
-
-        const trackPrice = parseFloat(trackInput.value.replace(/,/g, ''));
-        const trackedInfo = document.getElementById("trackedInfo");
-        trackedInfo.innerHTML = "";
-
-        document.getElementById("instabuys").innerText = (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1);
-        document.getElementById("instasells").innerText = (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1);
-
-        const buyTracked = renderTable(data.buy_summary, document.querySelector("#sellTable tbody"), document.querySelector("#sellTable tfoot tr"), trackPrice, data.quick_status.sellMovingWeek / (7 * 24), true);
-        const sellTracked = renderTable(data.sell_summary, document.querySelector("#buyTable tbody"), document.querySelector("#buyTable tfoot tr"), trackPrice, data.quick_status.buyMovingWeek / (7 * 24), false);
-
-        const activeTrack = buyTracked || sellTracked;
-        if (activeTrack) {
-          trackedInfo.innerHTML = `
-            <div class="track-box">
-              <strong>Tracking ${activeTrack.orderType} Order</strong><br>
-              Priority: #${activeTrack.rowIndex + 1}<br>
-              Items Before: ${activeTrack.itemsBefore}<br>
-              Coin Gap: ${activeTrack.coinGap.toLocaleString()} coins<br>
-              Items in Tracked Order: ${activeTrack.orderAmount}
-            </div>
-          `;
-        }
+        currentData = data;
+        currentTrack = parseFloat(trackInput.value.replace(/,/g, "")) || null;
+        renderTables(data);
+        instabuys.textContent = (data.quick_status.buyMovingWeek / 168).toFixed(1);
+        instasells.textContent = (data.quick_status.sellMovingWeek / 168).toFixed(1);
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(summary, tbody, tfootRow, trackPrice, hourlyRate, isBuyTable) {
+    function renderTables(data) {
+      renderTable(data.buy_summary, buyBody, buyFoot, currentTrack, data.quick_status.sellMovingWeek / 168, "buy");
+      renderTable(data.sell_summary, sellBody, sellFoot, currentTrack, data.quick_status.buyMovingWeek / 168, "sell");
+    }
+
+    function renderTable(summary, tbody, tfootRow, tracked, hourlyVolume, type) {
       tbody.innerHTML = "";
       let totalOrders = 0, totalAmount = 0, totalCoins = 0;
-      let trackedOrder = null;
+      let found = false;
+      let trackedPriority = 0, itemsBetween = 0, coinGap = 0, trackedAmount = 0;
 
-      for (let i = 0; i < summary.length; i++) {
-        const row = summary[i];
+      for (const row of summary) {
         const total = row.amount * row.pricePerUnit;
-        totalOrders += 1;
+        totalOrders += row.orders;
         totalAmount += row.amount;
         totalCoins += total;
 
         const tr = document.createElement("tr");
-        let highlightClass = "";
-
-        if (hourlyRate > 0 && row.amount > hourlyRate * 5) {
-          highlightClass = "highlight-high";
-        } else if (hourlyRate > 0 && row.amount > hourlyRate) {
-          highlightClass = "highlight-low";
+        let cls = "";
+        if (row.amount > hourlyVolume * 5) cls = "warn2";
+        else if (row.amount > hourlyVolume) cls = "warn1";
+        if (tracked && row.pricePerUnit === tracked) {
+          cls = "tracked";
+          trackedAmount = row.amount;
+          found = true;
+        } else if (!found && tracked) {
+          itemsBetween += row.amount;
+          coinGap += row.amount * row.pricePerUnit;
+          trackedPriority++;
         }
 
-        const matchTracked = trackPrice && Math.abs(row.pricePerUnit - trackPrice) < 0.01;
-        if (matchTracked) {
-          highlightClass = "tracked";
-          trackedOrder = {
-            rowIndex: i,
-            itemsBefore: summary.slice(0, i).reduce((a, b) => a + b.amount, 0),
-            coinGap: summary.slice(0, i).reduce((a, b) => a + (b.amount * b.pricePerUnit), 0),
-            orderAmount: row.amount,
-            orderType: isBuyTable ? "Buy" : "Sell"
-          };
-        }
-
-        tr.className = highlightClass;
+        tr.className = cls;
         tr.innerHTML = `
           <td>${row.orders}</td>
-          <td>${row.amount}</td>
+          <td>${row.amount.toLocaleString()}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
@@ -216,13 +215,24 @@
 
       tfootRow.innerHTML = `
         <td>Total:</td>
-        <td>${totalAmount}</td>
+        <td>${totalAmount.toLocaleString()}</td>
         <td></td>
         <td>${totalCoins.toLocaleString()} coins</td>
       `;
 
-      return trackedOrder;
+      if (found) {
+        orderInfo.style.display = "block";
+        orderInfo.innerHTML = `
+          <strong>Tracked Order Info (${type === "buy" ? "Buy" : "Sell"})</strong><br/>
+          Priority position: ${trackedPriority + 1}<br/>
+          Items between: ${itemsBetween.toLocaleString()}<br/>
+          Coin gap: ${coinGap.toLocaleString()} coins<br/>
+          Items left in order: ${trackedAmount.toLocaleString()}
+        `;
+      } else {
+        orderInfo.style.display = "none";
+      }
     }
   </script>
 </body>
-</html>
\ No newline at end of file
+</html>

commit 628b89a716c60415212e90a18e09d125bf5a9e6f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:17:11 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 39e5f70..b039f59 100644
--- a/public/index.html
+++ b/public/index.html
@@ -103,7 +103,7 @@
     <div class="tables">
       <div style="width: 50%">
         <h2>Buy Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -113,7 +113,7 @@
       </div>
       <div style="width: 50%">
         <h2>Sell Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>

commit 31856ae9591b36b606f24a86e7c1b9a9803c05d2
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:15:58 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 04763f8..39e5f70 100644
--- a/public/index.html
+++ b/public/index.html
@@ -150,8 +150,8 @@
         document.getElementById("instabuys").innerText = (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1);
         document.getElementById("instasells").innerText = (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1);
 
-        const buyTracked = renderTable(data.buy_summary, document.querySelector("#buyTable tbody"), document.querySelector("#buyTable tfoot tr"), trackPrice, data.quick_status.sellMovingWeek / (7 * 24), true);
-        const sellTracked = renderTable(data.sell_summary, document.querySelector("#sellTable tbody"), document.querySelector("#sellTable tfoot tr"), trackPrice, data.quick_status.buyMovingWeek / (7 * 24), false);
+        const buyTracked = renderTable(data.buy_summary, document.querySelector("#sellTable tbody"), document.querySelector("#sellTable tfoot tr"), trackPrice, data.quick_status.sellMovingWeek / (7 * 24), true);
+        const sellTracked = renderTable(data.sell_summary, document.querySelector("#buyTable tbody"), document.querySelector("#buyTable tfoot tr"), trackPrice, data.quick_status.buyMovingWeek / (7 * 24), false);
 
         const activeTrack = buyTracked || sellTracked;
         if (activeTrack) {

commit 29e0da8a4192f5d7189e1b434be3dc809b3c5746
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:07:18 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index bb9867a..04763f8 100644
--- a/public/index.html
+++ b/public/index.html
@@ -3,8 +3,8 @@
 <head>
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <link rel="icon" href="site-icon.jpeg">
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -15,7 +15,7 @@
       color: #fff;
     }
     .container {
-      max-width: 1200px;
+      max-width: 1100px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
@@ -28,10 +28,27 @@
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin-bottom: 20px;
+      margin: 10px 0 30px;
       border-radius: 6px;
       border: none;
     }
+    .rate-box {
+      display: flex;
+      justify-content: space-around;
+      margin: 10px 0 30px;
+      padding: 10px;
+      background-color: rgba(255, 255, 255, 0.05);
+      border-radius: 12px;
+      text-align: center;
+    }
+    .rate-box div {
+      flex: 1;
+    }
+    .tables {
+      display: flex;
+      justify-content: space-between;
+      gap: 20px;
+    }
     table {
       width: 100%;
       border-collapse: collapse;
@@ -49,48 +66,39 @@
     tfoot td {
       font-weight: bold;
     }
-    .highlight-yellow { background-color: rgba(255, 255, 0, 0.2); }
-    .highlight-red { background-color: rgba(255, 0, 0, 0.3); }
-    .highlight-blue { background-color: rgba(0, 128, 255, 0.4); }
-    .volume-boxes { display: flex; justify-content: space-around; margin: 20px 0; text-align: center; }
-    .volume-boxes div {
-      flex: 1;
-      background-color: rgba(255, 255, 255, 0.05);
-      margin: 0 10px;
-      padding: 10px;
-      border-radius: 8px;
+    .highlight-low {
+      background-color: rgba(255, 255, 0, 0.2);
     }
-    .tables { display: flex; gap: 20px; }
-    .order-info-box {
+    .highlight-high {
+      background-color: rgba(255, 0, 0, 0.3);
+    }
+    .tracked {
+      background-color: rgba(0, 100, 255, 0.4);
+    }
+    .track-box {
       background-color: rgba(255, 255, 255, 0.1);
-      padding: 15px;
+      padding: 12px;
       border-radius: 10px;
-      margin-bottom: 20px;
+      margin: 20px 0;
+      text-align: center;
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
+    <div class="rate-box">
+      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">-</span></div>
+      <div><strong>Instasells / hour:</strong><br><span id="instasells">-</span></div>
+    </div>
 
-    <label><strong>Item ID:</strong></label>
+    <h3>Item ID:</h3>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <label><strong>Track Order By Price:</strong></label>
-    <input id="trackPriceInput" placeholder="Enter Coin Equivalent (e.g. 10,670,396.3)" />
-
-    <div class="volume-boxes">
-      <div>
-        <h3>Instabuys / hour:</h3>
-        <div id="buysPerHour">-</div>
-      </div>
-      <div>
-        <h3>Instasells / hour:</h3>
-        <div id="sellsPerHour">-</div>
-      </div>
-    </div>
+    <h3>Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter Coin Equivalent (e.g. 10,670,396.3)" />
 
-    <div id="trackedOrderInfo" class="order-info-box" style="display:none;"></div>
+    <div id="trackedInfo"></div>
 
     <div class="tables">
       <div style="width: 50%">
@@ -117,18 +125,11 @@
   </div>
 
   <script>
-    const itemInput = document.getElementById("itemInput");
-    const trackPriceInput = document.getElementById("trackPriceInput");
-    const buyBody = document.querySelector("#buyTable tbody");
-    const sellBody = document.querySelector("#sellTable tbody");
-    const buyFoot = document.querySelector("#buyTable tfoot tr");
-    const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const buysPerHourDisplay = document.getElementById("buysPerHour");
-    const sellsPerHourDisplay = document.getElementById("sellsPerHour");
-    const trackedOrderInfo = document.getElementById("trackedOrderInfo");
-
-    itemInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
-    trackPriceInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
+    const input = document.getElementById("itemInput");
+    const trackInput = document.getElementById("trackInput");
+
+    input.addEventListener("change", () => loadData(input.value.trim().toUpperCase()));
+    trackInput.addEventListener("change", () => loadData(input.value.trim().toUpperCase()));
 
     async function getApiKey() {
       return "YOUR_API_KEY_HERE";
@@ -142,16 +143,28 @@
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        const buysPerHour = +(data.quick_status.buyMovingWeek / 7 / 24).toFixed(1);
-        const sellsPerHour = +(data.quick_status.sellMovingWeek / 7 / 24).toFixed(1);
-        buysPerHourDisplay.textContent = buysPerHour;
-        sellsPerHourDisplay.textContent = sellsPerHour;
-
-        const trackPrice = parseFloat(trackPriceInput.value.replace(/,/g, '')) || null;
-
-        renderTable(data.buy_summary, buyBody, buyFoot, sellsPerHour, trackPrice);
-        renderTable(data.sell_summary, sellBody, sellFoot, buysPerHour, trackPrice);
-
+        const trackPrice = parseFloat(trackInput.value.replace(/,/g, ''));
+        const trackedInfo = document.getElementById("trackedInfo");
+        trackedInfo.innerHTML = "";
+
+        document.getElementById("instabuys").innerText = (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1);
+        document.getElementById("instasells").innerText = (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1);
+
+        const buyTracked = renderTable(data.buy_summary, document.querySelector("#buyTable tbody"), document.querySelector("#buyTable tfoot tr"), trackPrice, data.quick_status.sellMovingWeek / (7 * 24), true);
+        const sellTracked = renderTable(data.sell_summary, document.querySelector("#sellTable tbody"), document.querySelector("#sellTable tfoot tr"), trackPrice, data.quick_status.buyMovingWeek / (7 * 24), false);
+
+        const activeTrack = buyTracked || sellTracked;
+        if (activeTrack) {
+          trackedInfo.innerHTML = `
+            <div class="track-box">
+              <strong>Tracking ${activeTrack.orderType} Order</strong><br>
+              Priority: #${activeTrack.rowIndex + 1}<br>
+              Items Before: ${activeTrack.itemsBefore}<br>
+              Coin Gap: ${activeTrack.coinGap.toLocaleString()} coins<br>
+              Items in Tracked Order: ${activeTrack.orderAmount}
+            </div>
+          `;
+        }
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
@@ -159,59 +172,57 @@
     }
 
     function renderTable(summary, tbody, tfootRow, trackPrice, hourlyRate, isBuyTable) {
-  tbody.innerHTML = "";
-  let totalOrders = 0, totalAmount = 0, totalCoins = 0;
-  let trackedOrder = null, coinGap = 0, itemsGap = 0;
-
-  for (let i = 0; i < summary.length; i++) {
-    const row = summary[i];
-    const total = row.amount * row.pricePerUnit;
-    totalOrders += 1;
-    totalAmount += row.amount;
-    totalCoins += total;
-
-    const tr = document.createElement("tr");
-
-    // Highlighting logic
-    let highlightClass = "";
-    if (hourlyRate > 0 && row.amount > hourlyRate * 5) {
-      highlightClass = "highlight-high";
-    } else if (hourlyRate > 0 && row.amount > hourlyRate) {
-      highlightClass = "highlight-low";
-    }
-
-    const matchTracked = trackPrice && Math.abs(row.pricePerUnit - trackPrice) < 0.01;
-    if (matchTracked) {
-      highlightClass = "tracked";
-      trackedOrder = {
-        rowIndex: i,
-        itemsBefore: summary.slice(0, i).reduce((a, b) => a + b.amount, 0),
-        coinGap: summary.slice(0, i).reduce((a, b) => a + (b.amount * b.pricePerUnit), 0),
-        orderAmount: row.amount,
-        orderType: isBuyTable ? "Buy" : "Sell"
-      };
-    }
-
-    tr.className = highlightClass;
-    tr.innerHTML = `
-      <td>${row.orders}</td>
-      <td>${row.amount}</td>
-      <td>${row.pricePerUnit.toLocaleString()} coins</td>
-      <td>${total.toLocaleString()} coins</td>
-    `;
-    tbody.appendChild(tr);
-  }
-
-  tfootRow.innerHTML = `
-    <td>Total:</td>
-    <td>${totalAmount}</td>
-    <td></td>
-    <td>${totalCoins.toLocaleString()} coins</td>
-  `;
-
-  return trackedOrder;
-}
+      tbody.innerHTML = "";
+      let totalOrders = 0, totalAmount = 0, totalCoins = 0;
+      let trackedOrder = null;
+
+      for (let i = 0; i < summary.length; i++) {
+        const row = summary[i];
+        const total = row.amount * row.pricePerUnit;
+        totalOrders += 1;
+        totalAmount += row.amount;
+        totalCoins += total;
+
+        const tr = document.createElement("tr");
+        let highlightClass = "";
+
+        if (hourlyRate > 0 && row.amount > hourlyRate * 5) {
+          highlightClass = "highlight-high";
+        } else if (hourlyRate > 0 && row.amount > hourlyRate) {
+          highlightClass = "highlight-low";
+        }
+
+        const matchTracked = trackPrice && Math.abs(row.pricePerUnit - trackPrice) < 0.01;
+        if (matchTracked) {
+          highlightClass = "tracked";
+          trackedOrder = {
+            rowIndex: i,
+            itemsBefore: summary.slice(0, i).reduce((a, b) => a + b.amount, 0),
+            coinGap: summary.slice(0, i).reduce((a, b) => a + (b.amount * b.pricePerUnit), 0),
+            orderAmount: row.amount,
+            orderType: isBuyTable ? "Buy" : "Sell"
+          };
+        }
+
+        tr.className = highlightClass;
+        tr.innerHTML = `
+          <td>${row.orders}</td>
+          <td>${row.amount}</td>
+          <td>${row.pricePerUnit.toLocaleString()} coins</td>
+          <td>${total.toLocaleString()} coins</td>
+        `;
+        tbody.appendChild(tr);
+      }
+
+      tfootRow.innerHTML = `
+        <td>Total:</td>
+        <td>${totalAmount}</td>
+        <td></td>
+        <td>${totalCoins.toLocaleString()} coins</td>
+      `;
 
+      return trackedOrder;
+    }
   </script>
 </body>
-</html>
+</html>
\ No newline at end of file

commit 0ff160d77872d6bb5f13e3d0dd65bb521c5f9bba
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 10:01:59 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 39219f0..bb9867a 100644
--- a/public/index.html
+++ b/public/index.html
@@ -158,64 +158,60 @@
       }
     }
 
-    function renderTable(summary, tbody, tfootRow, hourlyVolume, trackPrice) {
-      tbody.innerHTML = "";
-      let totalAmount = 0, totalCoins = 0, totalOrders = 0;
-
-      let runningItems = 0, runningCoins = 0;
-      let matched = null, matchedIndex = -1;
-
-      summary.forEach((row, index) => {
-        const total = row.amount * row.pricePerUnit;
-        const highlight = row.amount > hourlyVolume * 5
-          ? 'highlight-red' : row.amount > hourlyVolume ? 'highlight-yellow' : '';
-
-        const isTracked = trackPrice && row.pricePerUnit.toFixed(1) === trackPrice.toFixed(1);
-        const tr = document.createElement("tr");
-        tr.className = isTracked ? 'highlight-blue' : highlight;
-        tr.innerHTML = `
-          <td>${row.orders}</td>
-          <td>${row.amount}</td>
-          <td>${row.pricePerUnit.toLocaleString()} coins</td>
-          <td>${total.toLocaleString()} coins</td>
-        `;
-        tbody.appendChild(tr);
-
-        if (!matched && isTracked) {
-          matched = row;
-          matchedIndex = index;
-        }
-
-        if (!matched) {
-          runningItems += row.amount;
-          runningCoins += total;
-        }
-
-        totalOrders++;
-        totalAmount += row.amount;
-        totalCoins += total;
-      });
-
-      tfootRow.innerHTML = `
-        <td>Total:</td>
-        <td>${totalAmount}</td>
-        <td></td>
-        <td>${totalCoins.toLocaleString()} coins</td>
-      `;
-
-      if (matched) {
-        trackedOrderInfo.style.display = 'block';
-        trackedOrderInfo.innerHTML = `
-          <strong>Tracked Order:</strong><br>
-          Priority Position: ${matchedIndex + 1}<br>
-          Items in between: ${runningItems.toLocaleString()}<br>
-          Coins in between: ${runningCoins.toLocaleString()} coins<br>
-          Items in this order: ${matched.amount.toLocaleString()}<br>
-        `;
-      } else {
-        trackedOrderInfo.style.display = 'none';
-      }
+    function renderTable(summary, tbody, tfootRow, trackPrice, hourlyRate, isBuyTable) {
+  tbody.innerHTML = "";
+  let totalOrders = 0, totalAmount = 0, totalCoins = 0;
+  let trackedOrder = null, coinGap = 0, itemsGap = 0;
+
+  for (let i = 0; i < summary.length; i++) {
+    const row = summary[i];
+    const total = row.amount * row.pricePerUnit;
+    totalOrders += 1;
+    totalAmount += row.amount;
+    totalCoins += total;
+
+    const tr = document.createElement("tr");
+
+    // Highlighting logic
+    let highlightClass = "";
+    if (hourlyRate > 0 && row.amount > hourlyRate * 5) {
+      highlightClass = "highlight-high";
+    } else if (hourlyRate > 0 && row.amount > hourlyRate) {
+      highlightClass = "highlight-low";
+    }
+
+    const matchTracked = trackPrice && Math.abs(row.pricePerUnit - trackPrice) < 0.01;
+    if (matchTracked) {
+      highlightClass = "tracked";
+      trackedOrder = {
+        rowIndex: i,
+        itemsBefore: summary.slice(0, i).reduce((a, b) => a + b.amount, 0),
+        coinGap: summary.slice(0, i).reduce((a, b) => a + (b.amount * b.pricePerUnit), 0),
+        orderAmount: row.amount,
+        orderType: isBuyTable ? "Buy" : "Sell"
+      };
     }
+
+    tr.className = highlightClass;
+    tr.innerHTML = `
+      <td>${row.orders}</td>
+      <td>${row.amount}</td>
+      <td>${row.pricePerUnit.toLocaleString()} coins</td>
+      <td>${total.toLocaleString()} coins</td>
+    `;
+    tbody.appendChild(tr);
+  }
+
+  tfootRow.innerHTML = `
+    <td>Total:</td>
+    <td>${totalAmount}</td>
+    <td></td>
+    <td>${totalCoins.toLocaleString()} coins</td>
+  `;
+
+  return trackedOrder;
+}
+
   </script>
 </body>
 </html>

commit 28e08706a883887db1e01cafdb6fb4caf0ef75f4
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:58:11 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 811a931..39219f0 100644
--- a/public/index.html
+++ b/public/index.html
@@ -95,7 +95,7 @@
     <div class="tables">
       <div style="width: 50%">
         <h2>Buy Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -105,7 +105,7 @@
       </div>
       <div style="width: 50%">
         <h2>Sell Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>

commit cc23deb6022b0bf75ae87ed933939479423ed067
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:56:13 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 1ad81a4..811a931 100644
--- a/public/index.html
+++ b/public/index.html
@@ -4,7 +4,7 @@
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -15,20 +15,20 @@
       color: #fff;
     }
     .container {
-      max-width: 1100px;
+      max-width: 1200px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
       border-radius: 16px;
     }
-    h1, h2, h3 {
+    h1, h2 {
       text-align: center;
     }
     input {
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin: 10px 0 20px;
+      margin-bottom: 20px;
       border-radius: 6px;
       border: none;
     }
@@ -49,54 +49,56 @@
     tfoot td {
       font-weight: bold;
     }
-    .tables {
-      display: flex;
-      gap: 20px;
-    }
-    .highlight-yellow {
-      background-color: rgba(255, 255, 0, 0.2);
-    }
-    .highlight-red {
-      background-color: rgba(255, 0, 0, 0.3);
-    }
-    .highlight-blue {
-      background-color: rgba(0, 128, 255, 0.3);
-    }
-    .insta-info {
-      display: flex;
-      justify-content: space-around;
-      background: rgba(0, 0, 0, 0.5);
+    .highlight-yellow { background-color: rgba(255, 255, 0, 0.2); }
+    .highlight-red { background-color: rgba(255, 0, 0, 0.3); }
+    .highlight-blue { background-color: rgba(0, 128, 255, 0.4); }
+    .volume-boxes { display: flex; justify-content: space-around; margin: 20px 0; text-align: center; }
+    .volume-boxes div {
+      flex: 1;
+      background-color: rgba(255, 255, 255, 0.05);
+      margin: 0 10px;
       padding: 10px;
-      border-radius: 12px;
-      margin-bottom: 20px;
+      border-radius: 8px;
     }
-    .track-info {
-      background: rgba(0, 0, 0, 0.6);
-      padding: 10px;
-      border-radius: 12px;
-      margin-top: -10px;
+    .tables { display: flex; gap: 20px; }
+    .order-info-box {
+      background-color: rgba(255, 255, 255, 0.1);
+      padding: 15px;
+      border-radius: 10px;
+      margin-bottom: 20px;
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <h3>Item ID:</h3>
+
+    <label><strong>Item ID:</strong></label>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <div class="insta-info">
-      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">-</span></div>
-      <div><strong>Instasells / hour:</strong><br><span id="instasells">-</span></div>
+    <label><strong>Track Order By Price:</strong></label>
+    <input id="trackPriceInput" placeholder="Enter Coin Equivalent (e.g. 10,670,396.3)" />
+
+    <div class="volume-boxes">
+      <div>
+        <h3>Instabuys / hour:</h3>
+        <div id="buysPerHour">-</div>
+      </div>
+      <div>
+        <h3>Instasells / hour:</h3>
+        <div id="sellsPerHour">-</div>
+      </div>
     </div>
 
-    <h3>Track Order By Price:</h3>
-    <input id="trackInput" placeholder="Enter unit price (e.g. 10,670,396.3)" />
+    <div id="trackedOrderInfo" class="order-info-box" style="display:none;"></div>
 
     <div class="tables">
       <div style="width: 50%">
         <h2>Buy Orders</h2>
         <table id="buyTable">
-          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
@@ -104,123 +106,114 @@
       <div style="width: 50%">
         <h2>Sell Orders</h2>
         <table id="sellTable">
-          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
     </div>
-
-    <div class="track-info" id="trackInfo"></div>
   </div>
 
   <script>
     const itemInput = document.getElementById("itemInput");
-    const trackInput = document.getElementById("trackInput");
+    const trackPriceInput = document.getElementById("trackPriceInput");
     const buyBody = document.querySelector("#buyTable tbody");
     const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const instabuys = document.getElementById("instabuys");
-    const instasells = document.getElementById("instasells");
-    const trackBox = document.getElementById("trackInfo");
-
-    let currentBuyData = [];
-    let currentSellData = [];
-    let lastItem = "";
+    const buysPerHourDisplay = document.getElementById("buysPerHour");
+    const sellsPerHourDisplay = document.getElementById("sellsPerHour");
+    const trackedOrderInfo = document.getElementById("trackedOrderInfo");
 
     itemInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
-    trackInput.addEventListener("change", () => highlightTrackedOrder());
+    trackPriceInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
+
+    async function getApiKey() {
+      return "YOUR_API_KEY_HERE";
+    }
 
     async function loadData(itemId) {
-      lastItem = itemId;
-      const apiKey = "YOUR_API_KEY_HERE";
+      const apiKey = await getApiKey();
       try {
         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
         const json = await res.json();
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        currentBuyData = data.buy_summary;
-        currentSellData = data.sell_summary;
+        const buysPerHour = +(data.quick_status.buyMovingWeek / 7 / 24).toFixed(1);
+        const sellsPerHour = +(data.quick_status.sellMovingWeek / 7 / 24).toFixed(1);
+        buysPerHourDisplay.textContent = buysPerHour;
+        sellsPerHourDisplay.textContent = sellsPerHour;
 
-        instabuys.textContent = data.quick_status.buyMovingWeek / (7 * 24);
-        instasells.textContent = data.quick_status.sellMovingWeek / (7 * 24);
+        const trackPrice = parseFloat(trackPriceInput.value.replace(/,/g, '')) || null;
 
-        renderTable(currentBuyData, buyBody, buyFoot, data.quick_status.sellMovingWeek / (7 * 24));
-        renderTable(currentSellData, sellBody, sellFoot, data.quick_status.buyMovingWeek / (7 * 24));
+        renderTable(data.buy_summary, buyBody, buyFoot, sellsPerHour, trackPrice);
+        renderTable(data.sell_summary, sellBody, sellFoot, buysPerHour, trackPrice);
 
-        highlightTrackedOrder();
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(data, tbody, tfootRow, hourlyVolume) {
+    function renderTable(summary, tbody, tfootRow, hourlyVolume, trackPrice) {
       tbody.innerHTML = "";
-      let totalOrders = 0, totalAmount = 0, totalCoins = 0;
-      for (const row of data) {
+      let totalAmount = 0, totalCoins = 0, totalOrders = 0;
+
+      let runningItems = 0, runningCoins = 0;
+      let matched = null, matchedIndex = -1;
+
+      summary.forEach((row, index) => {
         const total = row.amount * row.pricePerUnit;
-        totalOrders += 1;
-        totalAmount += row.amount;
-        totalCoins += total;
+        const highlight = row.amount > hourlyVolume * 5
+          ? 'highlight-red' : row.amount > hourlyVolume ? 'highlight-yellow' : '';
 
+        const isTracked = trackPrice && row.pricePerUnit.toFixed(1) === trackPrice.toFixed(1);
         const tr = document.createElement("tr");
+        tr.className = isTracked ? 'highlight-blue' : highlight;
         tr.innerHTML = `
           <td>${row.orders}</td>
           <td>${row.amount}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
-        if (row.amount > 5 * hourlyVolume) tr.classList.add("highlight-red");
-        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
-
         tbody.appendChild(tr);
-      }
+
+        if (!matched && isTracked) {
+          matched = row;
+          matchedIndex = index;
+        }
+
+        if (!matched) {
+          runningItems += row.amount;
+          runningCoins += total;
+        }
+
+        totalOrders++;
+        totalAmount += row.amount;
+        totalCoins += total;
+      });
+
       tfootRow.innerHTML = `
         <td>Total:</td>
         <td>${totalAmount}</td>
         <td></td>
         <td>${totalCoins.toLocaleString()} coins</td>
       `;
-    }
 
-    function highlightTrackedOrder() {
-      const value = parseFloat(trackInput.value.replace(/,/g, ""));
-      if (!value || (!currentBuyData.length && !currentSellData.length)) return;
-
-      const searchTables = [buyBody, sellBody];
-      let matchedRow = null;
-      trackBox.innerHTML = "";
-
-      for (const table of searchTables) {
-        for (const row of table.rows) {
-          row.classList.remove("highlight-blue");
-          const cellValue = parseFloat(row.cells[2].textContent.replace(/,/g, ""));
-          if (cellValue === value) {
-            row.classList.add("highlight-blue");
-            matchedRow = row;
-            break;
-          }
-        }
-      }
-
-      if (matchedRow) {
-        const index = matchedRow.rowIndex - 1;
-        let itemsBetween = 0, coinGap = 0;
-        for (let i = 0; i < index; i++) {
-          itemsBetween += parseInt(matchedRow.parentElement.rows[i].cells[1].textContent);
-          coinGap += parseFloat(matchedRow.parentElement.rows[i].cells[3].textContent.replace(/,/g, ""));
-        }
-        const itemsLeft = parseInt(matchedRow.cells[1].textContent);
-        trackBox.innerHTML = `
-          <h3>Tracked Order Info</h3>
-          <p>Priority position: ${index + 1}</p>
-          <p>Items between: ${itemsBetween.toLocaleString()}</p>
-          <p>Coins in between: ${coinGap.toLocaleString()} coins</p>
-          <p>Items left in order: ${itemsLeft}</p>
+      if (matched) {
+        trackedOrderInfo.style.display = 'block';
+        trackedOrderInfo.innerHTML = `
+          <strong>Tracked Order:</strong><br>
+          Priority Position: ${matchedIndex + 1}<br>
+          Items in between: ${runningItems.toLocaleString()}<br>
+          Coins in between: ${runningCoins.toLocaleString()} coins<br>
+          Items in this order: ${matched.amount.toLocaleString()}<br>
         `;
+      } else {
+        trackedOrderInfo.style.display = 'none';
       }
     }
   </script>

commit 8c8869dec6fdddee8b8085075917e0e109119198
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:51:04 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index d21c7f0..1ad81a4 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" href="site-icon.jpeg" type="image/jpeg">
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
   <style>
     body {
       margin: 0;
@@ -21,32 +21,17 @@
       padding: 30px;
       border-radius: 16px;
     }
-    h1 {
+    h1, h2, h3 {
       text-align: center;
-      margin-bottom: 10px;
     }
     input {
       width: 100%;
       padding: 10px;
       font-size: 16px;
-      margin: 20px 0;
+      margin: 10px 0 20px;
       border-radius: 6px;
       border: none;
     }
-    .metrics {
-      display: flex;
-      justify-content: space-around;
-      margin-bottom: 30px;
-      text-align: center;
-      font-weight: bold;
-      background-color: rgba(255, 255, 255, 0.05);
-      padding: 10px;
-      border-radius: 8px;
-    }
-    .tables {
-      display: flex;
-      gap: 20px;
-    }
     table {
       width: 100%;
       border-collapse: collapse;
@@ -64,112 +49,135 @@
     tfoot td {
       font-weight: bold;
     }
-    .warn {
+    .tables {
+      display: flex;
+      gap: 20px;
+    }
+    .highlight-yellow {
       background-color: rgba(255, 255, 0, 0.2);
     }
-    .danger {
-      background-color: rgba(255, 0, 0, 0.4);
+    .highlight-red {
+      background-color: rgba(255, 0, 0, 0.3);
+    }
+    .highlight-blue {
+      background-color: rgba(0, 128, 255, 0.3);
+    }
+    .insta-info {
+      display: flex;
+      justify-content: space-around;
+      background: rgba(0, 0, 0, 0.5);
+      padding: 10px;
+      border-radius: 12px;
+      margin-bottom: 20px;
+    }
+    .track-info {
+      background: rgba(0, 0, 0, 0.6);
+      padding: 10px;
+      border-radius: 12px;
+      margin-top: -10px;
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
+    <h3>Item ID:</h3>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <div class="metrics">
-      <div><div>Instabuys / hour:</div><div id="instabuys">-</div></div>
-      <div><div>Instasells / hour:</div><div id="instasells">-</div></div>
+    <div class="insta-info">
+      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">-</span></div>
+      <div><strong>Instasells / hour:</strong><br><span id="instasells">-</span></div>
     </div>
 
+    <h3>Track Order By Price:</h3>
+    <input id="trackInput" placeholder="Enter unit price (e.g. 10,670,396.3)" />
+
     <div class="tables">
       <div style="width: 50%">
         <h2>Buy Orders</h2>
-        <table id="sellTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
+        <table id="buyTable">
+          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
       <div style="width: 50%">
         <h2>Sell Orders</h2>
-        <table id="buyTable">
-          <thead>
-            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-          </thead>
+        <table id="sellTable">
+          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
     </div>
+
+    <div class="track-info" id="trackInfo"></div>
   </div>
 
   <script>
-    const input = document.getElementById("itemInput");
+    const itemInput = document.getElementById("itemInput");
+    const trackInput = document.getElementById("trackInput");
     const buyBody = document.querySelector("#buyTable tbody");
     const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const buysEl = document.getElementById("instabuys");
-    const sellsEl = document.getElementById("instasells");
+    const instabuys = document.getElementById("instabuys");
+    const instasells = document.getElementById("instasells");
+    const trackBox = document.getElementById("trackInfo");
 
-    input.addEventListener("change", () => {
-      loadData(input.value.trim().toUpperCase());
-    });
+    let currentBuyData = [];
+    let currentSellData = [];
+    let lastItem = "";
 
-    async function getApiKey() {
-      return "YOUR_API_KEY_HERE"; // Replace this
-    }
+    itemInput.addEventListener("change", () => loadData(itemInput.value.trim().toUpperCase()));
+    trackInput.addEventListener("change", () => highlightTrackedOrder());
 
     async function loadData(itemId) {
-      const apiKey = await getApiKey();
+      lastItem = itemId;
+      const apiKey = "YOUR_API_KEY_HERE";
       try {
         const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
         const json = await res.json();
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        const buysPerHour = (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1);
-        const sellsPerHour = (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1);
-        buysEl.textContent = parseFloat(buysPerHour).toLocaleString();
-        sellsEl.textContent = parseFloat(sellsPerHour).toLocaleString();
+        currentBuyData = data.buy_summary;
+        currentSellData = data.sell_summary;
 
-        renderTable(data.buy_summary, buyBody, buyFoot, sellsPerHour);
-        renderTable(data.sell_summary, sellBody, sellFoot, buysPerHour);
+        instabuys.textContent = data.quick_status.buyMovingWeek / (7 * 24);
+        instasells.textContent = data.quick_status.sellMovingWeek / (7 * 24);
+
+        renderTable(currentBuyData, buyBody, buyFoot, data.quick_status.sellMovingWeek / (7 * 24));
+        renderTable(currentSellData, sellBody, sellFoot, data.quick_status.buyMovingWeek / (7 * 24));
+
+        highlightTrackedOrder();
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(summary, tbody, tfootRow, hourlyLimit) {
+    function renderTable(data, tbody, tfootRow, hourlyVolume) {
       tbody.innerHTML = "";
       let totalOrders = 0, totalAmount = 0, totalCoins = 0;
-
-      for (const row of summary) {
+      for (const row of data) {
         const total = row.amount * row.pricePerUnit;
         totalOrders += 1;
         totalAmount += row.amount;
         totalCoins += total;
 
         const tr = document.createElement("tr");
-        if (row.amount > hourlyLimit * 5) {
-          tr.classList.add("danger");
-        } else if (row.amount > hourlyLimit) {
-          tr.classList.add("warn");
-        }
-
         tr.innerHTML = `
           <td>${row.orders}</td>
           <td>${row.amount}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
+        if (row.amount > 5 * hourlyVolume) tr.classList.add("highlight-red");
+        else if (row.amount > hourlyVolume) tr.classList.add("highlight-yellow");
+
         tbody.appendChild(tr);
       }
-
       tfootRow.innerHTML = `
         <td>Total:</td>
         <td>${totalAmount}</td>
@@ -177,6 +185,44 @@
         <td>${totalCoins.toLocaleString()} coins</td>
       `;
     }
+
+    function highlightTrackedOrder() {
+      const value = parseFloat(trackInput.value.replace(/,/g, ""));
+      if (!value || (!currentBuyData.length && !currentSellData.length)) return;
+
+      const searchTables = [buyBody, sellBody];
+      let matchedRow = null;
+      trackBox.innerHTML = "";
+
+      for (const table of searchTables) {
+        for (const row of table.rows) {
+          row.classList.remove("highlight-blue");
+          const cellValue = parseFloat(row.cells[2].textContent.replace(/,/g, ""));
+          if (cellValue === value) {
+            row.classList.add("highlight-blue");
+            matchedRow = row;
+            break;
+          }
+        }
+      }
+
+      if (matchedRow) {
+        const index = matchedRow.rowIndex - 1;
+        let itemsBetween = 0, coinGap = 0;
+        for (let i = 0; i < index; i++) {
+          itemsBetween += parseInt(matchedRow.parentElement.rows[i].cells[1].textContent);
+          coinGap += parseFloat(matchedRow.parentElement.rows[i].cells[3].textContent.replace(/,/g, ""));
+        }
+        const itemsLeft = parseInt(matchedRow.cells[1].textContent);
+        trackBox.innerHTML = `
+          <h3>Tracked Order Info</h3>
+          <p>Priority position: ${index + 1}</p>
+          <p>Items between: ${itemsBetween.toLocaleString()}</p>
+          <p>Coins in between: ${coinGap.toLocaleString()} coins</p>
+          <p>Items left in order: ${itemsLeft}</p>
+        `;
+      }
+    }
   </script>
 </body>
 </html>

commit 97b8459a551b0b4ebd8cda7552491e4baf6704d9
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:29:52 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 44d5c46..d21c7f0 100644
--- a/public/index.html
+++ b/public/index.html
@@ -85,7 +85,7 @@
     <div class="tables">
       <div style="width: 50%">
         <h2>Buy Orders</h2>
-        <table id="buyTable">
+        <table id="sellTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>
@@ -95,7 +95,7 @@
       </div>
       <div style="width: 50%">
         <h2>Sell Orders</h2>
-        <table id="sellTable">
+        <table id="buyTable">
           <thead>
             <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
           </thead>

commit 8061fa388cb38d5f81cc823ecad175260dafd8ac
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:27:51 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 87c6bf6..44d5c46 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
+  <link rel="icon" href="site-icon.jpeg" type="image/jpeg">
   <style>
     body {
       margin: 0;
@@ -15,7 +15,7 @@
       color: #fff;
     }
     .container {
-      max-width: 1200px;
+      max-width: 1100px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
@@ -23,37 +23,29 @@
     }
     h1 {
       text-align: center;
-      margin-bottom: 20px;
+      margin-bottom: 10px;
     }
     input {
       width: 100%;
-      padding: 12px;
-      font-size: 18px;
+      padding: 10px;
+      font-size: 16px;
       margin: 20px 0;
       border-radius: 6px;
       border: none;
-      display: block;
     }
-    .stats {
+    .metrics {
       display: flex;
       justify-content: space-around;
-      margin-bottom: 20px;
-      padding: 20px;
-      background-color: rgba(255, 255, 255, 0.08);
-      border-radius: 10px;
-    }
-    .stats div {
+      margin-bottom: 30px;
       text-align: center;
+      font-weight: bold;
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 10px;
+      border-radius: 8px;
     }
     .tables {
       display: flex;
       gap: 20px;
-      justify-content: space-between;
-      flex-wrap: wrap;
-    }
-    .table-wrapper {
-      flex: 1;
-      min-width: 500px;
     }
     table {
       width: 100%;
@@ -72,11 +64,11 @@
     tfoot td {
       font-weight: bold;
     }
-    tr.warn {
+    .warn {
       background-color: rgba(255, 255, 0, 0.2);
     }
-    tr.danger {
-      background-color: rgba(255, 0, 0, 0.3);
+    .danger {
+      background-color: rgba(255, 0, 0, 0.4);
     }
   </style>
 </head>
@@ -84,18 +76,14 @@
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-    <div class="stats">
-      <div>
-        <strong>Instabuys / hour:</strong>
-        <div id="buysPerHour">-</div>
-      </div>
-      <div>
-        <strong>Instasells / hour:</strong>
-        <div id="sellsPerHour">-</div>
-      </div>
+
+    <div class="metrics">
+      <div><div>Instabuys / hour:</div><div id="instabuys">-</div></div>
+      <div><div>Instasells / hour:</div><div id="instasells">-</div></div>
     </div>
+
     <div class="tables">
-      <div class="table-wrapper">
+      <div style="width: 50%">
         <h2>Buy Orders</h2>
         <table id="buyTable">
           <thead>
@@ -105,7 +93,7 @@
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
-      <div class="table-wrapper">
+      <div style="width: 50%">
         <h2>Sell Orders</h2>
         <table id="sellTable">
           <thead>
@@ -117,21 +105,22 @@
       </div>
     </div>
   </div>
+
   <script>
     const input = document.getElementById("itemInput");
     const buyBody = document.querySelector("#buyTable tbody");
     const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const buysPerHourDisplay = document.getElementById("buysPerHour");
-    const sellsPerHourDisplay = document.getElementById("sellsPerHour");
+    const buysEl = document.getElementById("instabuys");
+    const sellsEl = document.getElementById("instasells");
 
     input.addEventListener("change", () => {
       loadData(input.value.trim().toUpperCase());
     });
 
     async function getApiKey() {
-      return "YOUR_API_KEY_HERE";
+      return "YOUR_API_KEY_HERE"; // Replace this
     }
 
     async function loadData(itemId) {
@@ -142,10 +131,10 @@
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        const buysPerHour = (data.quick_status.sellMovingWeek / 7 / 24).toFixed(1);
-        const sellsPerHour = (data.quick_status.buyMovingWeek / 7 / 24).toFixed(1);
-        buysPerHourDisplay.textContent = buysPerHour;
-        sellsPerHourDisplay.textContent = sellsPerHour;
+        const buysPerHour = (data.quick_status.buyMovingWeek / (7 * 24)).toFixed(1);
+        const sellsPerHour = (data.quick_status.sellMovingWeek / (7 * 24)).toFixed(1);
+        buysEl.textContent = parseFloat(buysPerHour).toLocaleString();
+        sellsEl.textContent = parseFloat(sellsPerHour).toLocaleString();
 
         renderTable(data.buy_summary, buyBody, buyFoot, sellsPerHour);
         renderTable(data.sell_summary, sellBody, sellFoot, buysPerHour);
@@ -166,12 +155,15 @@
         totalCoins += total;
 
         const tr = document.createElement("tr");
-        if (row.amount > hourlyLimit * 5) tr.classList.add("danger");
-        else if (row.amount > hourlyLimit) tr.classList.add("warn");
+        if (row.amount > hourlyLimit * 5) {
+          tr.classList.add("danger");
+        } else if (row.amount > hourlyLimit) {
+          tr.classList.add("warn");
+        }
 
         tr.innerHTML = `
           <td>${row.orders}</td>
-          <td>${row.amount.toLocaleString()}</td>
+          <td>${row.amount}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
@@ -180,7 +172,7 @@
 
       tfootRow.innerHTML = `
         <td>Total:</td>
-        <td>${totalAmount.toLocaleString()}</td>
+        <td>${totalAmount}</td>
         <td></td>
         <td>${totalCoins.toLocaleString()} coins</td>
       `;

commit e20e0ac800b11bc1f30afb1a2393270feaf3ade3
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:24:30 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index e044c47..87c6bf6 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,9 +2,9 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SkyBlock Bazaar Tracker</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg"/>
   <style>
     body {
       margin: 0;
@@ -15,38 +15,50 @@
       color: #fff;
     }
     .container {
-      max-width: 1400px;
-      margin: 20px auto;
+      max-width: 1200px;
+      margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
       border-radius: 16px;
     }
-    h1, h2 {
+    h1 {
       text-align: center;
+      margin-bottom: 20px;
     }
     input {
       width: 100%;
-      padding: 10px;
-      font-size: 16px;
+      padding: 12px;
+      font-size: 18px;
       margin: 20px 0;
       border-radius: 6px;
       border: none;
+      display: block;
     }
     .stats {
       display: flex;
       justify-content: space-around;
       margin-bottom: 20px;
-      background-color: rgba(255, 255, 255, 0.05);
-      padding: 10px;
-      border-radius: 8px;
+      padding: 20px;
+      background-color: rgba(255, 255, 255, 0.08);
+      border-radius: 10px;
+    }
+    .stats div {
+      text-align: center;
     }
     .tables {
       display: flex;
       gap: 20px;
+      justify-content: space-between;
+      flex-wrap: wrap;
+    }
+    .table-wrapper {
+      flex: 1;
+      min-width: 500px;
     }
     table {
       width: 100%;
       border-collapse: collapse;
+      margin-bottom: 30px;
       background-color: rgba(255, 255, 255, 0.05);
     }
     th, td {
@@ -60,11 +72,11 @@
     tfoot td {
       font-weight: bold;
     }
-    .warn {
-      background-color: rgba(255, 255, 0, 0.3);
+    tr.warn {
+      background-color: rgba(255, 255, 0, 0.2);
     }
-    .alert {
-      background-color: rgba(255, 0, 0, 0.4);
+    tr.danger {
+      background-color: rgba(255, 0, 0, 0.3);
     }
   </style>
 </head>
@@ -72,14 +84,18 @@
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-
     <div class="stats">
-      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">0</span></div>
-      <div><strong>Instasells / hour:</strong><br><span id="instasells">0</span></div>
+      <div>
+        <strong>Instabuys / hour:</strong>
+        <div id="buysPerHour">-</div>
+      </div>
+      <div>
+        <strong>Instasells / hour:</strong>
+        <div id="sellsPerHour">-</div>
+      </div>
     </div>
-
     <div class="tables">
-      <div style="width: 50%">
+      <div class="table-wrapper">
         <h2>Buy Orders</h2>
         <table id="buyTable">
           <thead>
@@ -89,8 +105,7 @@
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
-
-      <div style="width: 50%">
+      <div class="table-wrapper">
         <h2>Sell Orders</h2>
         <table id="sellTable">
           <thead>
@@ -102,23 +117,21 @@
       </div>
     </div>
   </div>
-
   <script>
     const input = document.getElementById("itemInput");
     const buyBody = document.querySelector("#buyTable tbody");
     const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const instabuysEl = document.getElementById("instabuys");
-    const instasellsEl = document.getElementById("instasells");
+    const buysPerHourDisplay = document.getElementById("buysPerHour");
+    const sellsPerHourDisplay = document.getElementById("sellsPerHour");
 
     input.addEventListener("change", () => {
       loadData(input.value.trim().toUpperCase());
     });
 
     async function getApiKey() {
-      const res = await fetch("api.txt");
-      return (await res.text()).trim();
+      return "YOUR_API_KEY_HERE";
     }
 
     async function loadData(itemId) {
@@ -129,48 +142,45 @@
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        const instabuys = data.quick_status.buyMovingWeek / 168;
-        const instasells = data.quick_status.sellMovingWeek / 168;
-        instabuysEl.textContent = instabuys.toFixed(1);
-        instasellsEl.textContent = instasells.toFixed(1);
+        const buysPerHour = (data.quick_status.sellMovingWeek / 7 / 24).toFixed(1);
+        const sellsPerHour = (data.quick_status.buyMovingWeek / 7 / 24).toFixed(1);
+        buysPerHourDisplay.textContent = buysPerHour;
+        sellsPerHourDisplay.textContent = sellsPerHour;
 
-        renderTable(data.sell_summary, buyBody, buyFoot, instasells); // people buy from sells
-        renderTable(data.buy_summary, sellBody, sellFoot, instabuys); // people sell into buys
+        renderTable(data.buy_summary, buyBody, buyFoot, sellsPerHour);
+        renderTable(data.sell_summary, sellBody, sellFoot, buysPerHour);
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(summary, tbody, tfootRow, hourlyVolume) {
+    function renderTable(summary, tbody, tfootRow, hourlyLimit) {
       tbody.innerHTML = "";
-      let totalAmount = 0, totalCoins = 0;
+      let totalOrders = 0, totalAmount = 0, totalCoins = 0;
 
       for (const row of summary) {
         const total = row.amount * row.pricePerUnit;
+        totalOrders += 1;
         totalAmount += row.amount;
         totalCoins += total;
 
         const tr = document.createElement("tr");
+        if (row.amount > hourlyLimit * 5) tr.classList.add("danger");
+        else if (row.amount > hourlyLimit) tr.classList.add("warn");
+
         tr.innerHTML = `
           <td>${row.orders}</td>
-          <td>${row.amount}</td>
+          <td>${row.amount.toLocaleString()}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
-
-        if (row.amount > 5 * hourlyVolume) {
-          tr.classList.add("alert");
-        } else if (row.amount > hourlyVolume) {
-          tr.classList.add("warn");
-        }
-
         tbody.appendChild(tr);
       }
 
       tfootRow.innerHTML = `
         <td>Total:</td>
-        <td>${totalAmount}</td>
+        <td>${totalAmount.toLocaleString()}</td>
         <td></td>
         <td>${totalCoins.toLocaleString()} coins</td>
       `;

commit 8e2d5d1881c3c7f7b7b6d70775700ee581af8f16
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:17:56 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 43879fc..e044c47 100644
--- a/public/index.html
+++ b/public/index.html
@@ -3,8 +3,8 @@
 <head>
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg">
   <title>SkyBlock Bazaar Tracker</title>
-  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -15,8 +15,8 @@
       color: #fff;
     }
     .container {
-      max-width: 1200px;
-      margin: 40px auto;
+      max-width: 1400px;
+      margin: 20px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
       border-radius: 16px;
@@ -32,10 +32,21 @@
       border-radius: 6px;
       border: none;
     }
+    .stats {
+      display: flex;
+      justify-content: space-around;
+      margin-bottom: 20px;
+      background-color: rgba(255, 255, 255, 0.05);
+      padding: 10px;
+      border-radius: 8px;
+    }
+    .tables {
+      display: flex;
+      gap: 20px;
+    }
     table {
       width: 100%;
       border-collapse: collapse;
-      margin-bottom: 20px;
       background-color: rgba(255, 255, 255, 0.05);
     }
     th, td {
@@ -49,31 +60,11 @@
     tfoot td {
       font-weight: bold;
     }
-    .tables {
-      display: flex;
-      gap: 20px;
-      flex-wrap: wrap;
+    .warn {
+      background-color: rgba(255, 255, 0, 0.3);
     }
-    .table-wrapper {
-      flex: 1 1 48%;
-    }
-    .info-box {
-      display: flex;
-      justify-content: space-evenly;
-      margin-bottom: 20px;
-      background-color: rgba(255, 255, 255, 0.1);
-      padding: 15px;
-      border-radius: 10px;
-      font-size: 16px;
-    }
-    .info-box div {
-      text-align: center;
-    }
-    .highlight-soft {
-      background-color: rgba(255, 255, 0, 0.2);
-    }
-    .highlight-strong {
-      background-color: rgba(255, 0, 0, 0.25);
+    .alert {
+      background-color: rgba(255, 0, 0, 0.4);
     }
   </style>
 </head>
@@ -82,24 +73,29 @@
     <h1>SkyBlock Bazaar Tracker</h1>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
-    <div class="info-box" id="infoBox">
-      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">?</span></div>
-      <div><strong>Instasells / hour:</strong><br><span id="instasells">?</span></div>
+    <div class="stats">
+      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">0</span></div>
+      <div><strong>Instasells / hour:</strong><br><span id="instasells">0</span></div>
     </div>
 
     <div class="tables">
-      <div class="table-wrapper">
+      <div style="width: 50%">
         <h2>Buy Orders</h2>
         <table id="buyTable">
-          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
-      <div class="table-wrapper">
+
+      <div style="width: 50%">
         <h2>Sell Orders</h2>
         <table id="sellTable">
-          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+          <thead>
+            <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+          </thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
@@ -113,15 +109,16 @@
     const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
-    const instabuysElem = document.getElementById("instabuys");
-    const instasellsElem = document.getElementById("instasells");
+    const instabuysEl = document.getElementById("instabuys");
+    const instasellsEl = document.getElementById("instasells");
 
     input.addEventListener("change", () => {
       loadData(input.value.trim().toUpperCase());
     });
 
     async function getApiKey() {
-      return "YOUR_API_KEY_HERE"; // Replace with actual key
+      const res = await fetch("api.txt");
+      return (await res.text()).trim();
     }
 
     async function loadData(itemId) {
@@ -132,24 +129,20 @@
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        const buySummary = data.buy_summary;
-        const sellSummary = data.sell_summary;
-        const stats = data.quick_status;
-
-        const instabuysPerHour = (stats.buyMovingWeek / (7 * 24)).toFixed(1);
-        const instasellsPerHour = (stats.sellMovingWeek / (7 * 24)).toFixed(1);
-        instabuysElem.textContent = instabuysPerHour;
-        instasellsElem.textContent = instasellsPerHour;
+        const instabuys = data.quick_status.buyMovingWeek / 168;
+        const instasells = data.quick_status.sellMovingWeek / 168;
+        instabuysEl.textContent = instabuys.toFixed(1);
+        instasellsEl.textContent = instasells.toFixed(1);
 
-        renderTable(buySummary, buyBody, buyFoot, +instasellsPerHour);
-        renderTable(sellSummary, sellBody, sellFoot, +instabuysPerHour);
+        renderTable(data.sell_summary, buyBody, buyFoot, instasells); // people buy from sells
+        renderTable(data.buy_summary, sellBody, sellFoot, instabuys); // people sell into buys
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(summary, tbody, tfootRow, hourlyRate) {
+    function renderTable(summary, tbody, tfootRow, hourlyVolume) {
       tbody.innerHTML = "";
       let totalAmount = 0, totalCoins = 0;
 
@@ -159,18 +152,19 @@
         totalCoins += total;
 
         const tr = document.createElement("tr");
-        if (row.amount > hourlyRate * 5) {
-          tr.classList.add("highlight-strong");
-        } else if (row.amount > hourlyRate) {
-          tr.classList.add("highlight-soft");
-        }
-
         tr.innerHTML = `
           <td>${row.orders}</td>
           <td>${row.amount}</td>
           <td>${row.pricePerUnit.toLocaleString()} coins</td>
           <td>${total.toLocaleString()} coins</td>
         `;
+
+        if (row.amount > 5 * hourlyVolume) {
+          tr.classList.add("alert");
+        } else if (row.amount > hourlyVolume) {
+          tr.classList.add("warn");
+        }
+
         tbody.appendChild(tr);
       }
 

commit f298b7da2ed71a6cc6e16967939961640f413338
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:10:25 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index f3c28ce..43879fc 100644
--- a/public/index.html
+++ b/public/index.html
@@ -89,16 +89,16 @@
 
     <div class="tables">
       <div class="table-wrapper">
-        <h2>Sell Orders</h2>
-        <table id="sellTable">
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
           <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
         </table>
       </div>
       <div class="table-wrapper">
-        <h2>Buy Orders</h2>
-        <table id="buyTable">
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
           <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
           <tbody></tbody>
           <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
@@ -121,7 +121,7 @@
     });
 
     async function getApiKey() {
-      return "YOUR_API_KEY_HERE"; // Replace this with your actual key
+      return "YOUR_API_KEY_HERE"; // Replace with actual key
     }
 
     async function loadData(itemId) {
@@ -141,9 +141,8 @@
         instabuysElem.textContent = instabuysPerHour;
         instasellsElem.textContent = instasellsPerHour;
 
-        // âœ… Correct mapping: sellSummary â†’ sellTable, buySummary â†’ buyTable
-        renderTable(sellSummary, sellBody, sellFoot, +instabuysPerHour);
         renderTable(buySummary, buyBody, buyFoot, +instasellsPerHour);
+        renderTable(sellSummary, sellBody, sellFoot, +instabuysPerHour);
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);

commit ac97f7819e0dc3991dca74607cd72c0fcde6f82c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:07:15 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 3422630..f3c28ce 100644
--- a/public/index.html
+++ b/public/index.html
@@ -83,8 +83,8 @@
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
 
     <div class="info-box" id="infoBox">
-      <div><strong>Instabuys/hour:</strong><br><span id="instabuys">?</span></div>
-      <div><strong>Instasells/hour:</strong><br><span id="instasells">?</span></div>
+      <div><strong>Instabuys / hour:</strong><br><span id="instabuys">?</span></div>
+      <div><strong>Instasells / hour:</strong><br><span id="instasells">?</span></div>
     </div>
 
     <div class="tables">
@@ -121,7 +121,7 @@
     });
 
     async function getApiKey() {
-      return "YOUR_API_KEY_HERE"; // Replace with your key or use fetch('/api.txt') for backend proxy
+      return "YOUR_API_KEY_HERE"; // Replace this with your actual key
     }
 
     async function loadData(itemId) {
@@ -141,8 +141,9 @@
         instabuysElem.textContent = instabuysPerHour;
         instasellsElem.textContent = instasellsPerHour;
 
-        renderTable(sellSummary, sellBody, sellFoot, +instabuysPerHour); // Sell orders are filled by instabuys
-        renderTable(buySummary, buyBody, buyFoot, +instasellsPerHour);  // Buy orders are filled by instasells
+        // âœ… Correct mapping: sellSummary â†’ sellTable, buySummary â†’ buyTable
+        renderTable(sellSummary, sellBody, sellFoot, +instabuysPerHour);
+        renderTable(buySummary, buyBody, buyFoot, +instasellsPerHour);
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);

commit fc1958f8a1ad40d2f1cea5445f717db6a250a7f7
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Thu Apr 10 09:03:09 2025 +0200

    update!

diff --git a/public/index.html b/public/index.html
index c39f13f..3422630 100644
--- a/public/index.html
+++ b/public/index.html
@@ -4,6 +4,7 @@
   <meta charset="UTF-8" />
   <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>SkyBlock Bazaar Tracker</title>
+  <link rel="icon" type="image/jpeg" href="site-icon.jpeg" />
   <style>
     body {
       margin: 0;
@@ -14,7 +15,7 @@
       color: #fff;
     }
     .container {
-      max-width: 900px;
+      max-width: 1200px;
       margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
@@ -34,7 +35,7 @@
     table {
       width: 100%;
       border-collapse: collapse;
-      margin-bottom: 30px;
+      margin-bottom: 20px;
       background-color: rgba(255, 255, 255, 0.05);
     }
     th, td {
@@ -48,30 +49,62 @@
     tfoot td {
       font-weight: bold;
     }
+    .tables {
+      display: flex;
+      gap: 20px;
+      flex-wrap: wrap;
+    }
+    .table-wrapper {
+      flex: 1 1 48%;
+    }
+    .info-box {
+      display: flex;
+      justify-content: space-evenly;
+      margin-bottom: 20px;
+      background-color: rgba(255, 255, 255, 0.1);
+      padding: 15px;
+      border-radius: 10px;
+      font-size: 16px;
+    }
+    .info-box div {
+      text-align: center;
+    }
+    .highlight-soft {
+      background-color: rgba(255, 255, 0, 0.2);
+    }
+    .highlight-strong {
+      background-color: rgba(255, 0, 0, 0.25);
+    }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
-    
-    <h2>Sell Orders</h2>
-    <table id="buyTable">
-      <thead>
-        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-      </thead>
-      <tbody></tbody>
-      <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-    </table>
 
-    <h2>Buy Orders</h2>
-    <table id="sellTable">
-      <thead>
-        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
-      </thead>
-      <tbody></tbody>
-      <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
-    </table>
+    <div class="info-box" id="infoBox">
+      <div><strong>Instabuys/hour:</strong><br><span id="instabuys">?</span></div>
+      <div><strong>Instasells/hour:</strong><br><span id="instasells">?</span></div>
+    </div>
+
+    <div class="tables">
+      <div class="table-wrapper">
+        <h2>Sell Orders</h2>
+        <table id="sellTable">
+          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+      <div class="table-wrapper">
+        <h2>Buy Orders</h2>
+        <table id="buyTable">
+          <thead><tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr></thead>
+          <tbody></tbody>
+          <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
+        </table>
+      </div>
+    </div>
   </div>
 
   <script>
@@ -80,14 +113,15 @@
     const sellBody = document.querySelector("#sellTable tbody");
     const buyFoot = document.querySelector("#buyTable tfoot tr");
     const sellFoot = document.querySelector("#sellTable tfoot tr");
+    const instabuysElem = document.getElementById("instabuys");
+    const instasellsElem = document.getElementById("instasells");
 
     input.addEventListener("change", () => {
       loadData(input.value.trim().toUpperCase());
     });
 
     async function getApiKey() {
-      // TEMPORARY: embed directly for Vercel static hosting
-      return "YOUR_API_KEY_HERE";
+      return "YOUR_API_KEY_HERE"; // Replace with your key or use fetch('/api.txt') for backend proxy
     }
 
     async function loadData(itemId) {
@@ -98,25 +132,39 @@
         const data = json.products[itemId];
         if (!data) throw new Error("Item not found");
 
-        renderTable(data.buy_summary, buyBody, buyFoot);
-        renderTable(data.sell_summary, sellBody, sellFoot);
+        const buySummary = data.buy_summary;
+        const sellSummary = data.sell_summary;
+        const stats = data.quick_status;
+
+        const instabuysPerHour = (stats.buyMovingWeek / (7 * 24)).toFixed(1);
+        const instasellsPerHour = (stats.sellMovingWeek / (7 * 24)).toFixed(1);
+        instabuysElem.textContent = instabuysPerHour;
+        instasellsElem.textContent = instasellsPerHour;
+
+        renderTable(sellSummary, sellBody, sellFoot, +instabuysPerHour); // Sell orders are filled by instabuys
+        renderTable(buySummary, buyBody, buyFoot, +instasellsPerHour);  // Buy orders are filled by instasells
       } catch (err) {
         alert("Failed to load data. Check the item ID and API key.");
         console.error(err);
       }
     }
 
-    function renderTable(summary, tbody, tfootRow) {
+    function renderTable(summary, tbody, tfootRow, hourlyRate) {
       tbody.innerHTML = "";
-      let totalOrders = 0, totalAmount = 0, totalCoins = 0;
+      let totalAmount = 0, totalCoins = 0;
 
       for (const row of summary) {
         const total = row.amount * row.pricePerUnit;
-        totalOrders += 1;
         totalAmount += row.amount;
         totalCoins += total;
 
         const tr = document.createElement("tr");
+        if (row.amount > hourlyRate * 5) {
+          tr.classList.add("highlight-strong");
+        } else if (row.amount > hourlyRate) {
+          tr.classList.add("highlight-soft");
+        }
+
         tr.innerHTML = `
           <td>${row.orders}</td>
           <td>${row.amount}</td>
diff --git a/public/site-icon.jpeg b/public/site-icon.jpeg
new file mode 100644
index 0000000..bf3be6f
Binary files /dev/null and b/public/site-icon.jpeg differ

commit 736b123783c7a89a0e14052b44d36ed7cff5e40b
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 23:40:27 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 17b3678..c39f13f 100644
--- a/public/index.html
+++ b/public/index.html
@@ -56,7 +56,7 @@
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
     
     <h2>Sell Orders</h2>
-    <table id="sellTable">
+    <table id="buyTable">
       <thead>
         <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
@@ -65,7 +65,7 @@
     </table>
 
     <h2>Buy Orders</h2>
-    <table id="buyTable">
+    <table id="sellTable">
       <thead>
         <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>

commit 4599d6bbaf4824a871a57002e51391da1af153d1
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 23:34:58 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index a36fc6f..17b3678 100644
--- a/public/index.html
+++ b/public/index.html
@@ -8,148 +8,131 @@
     body {
       margin: 0;
       font-family: 'Segoe UI', sans-serif;
-      background: url('./bgimage.jpeg') no-repeat center center fixed;
+      background-image: url('bgimage.jpeg');
       background-size: cover;
-      color: white;
+      background-attachment: fixed;
+      color: #fff;
     }
-    .content {
+    .container {
       max-width: 900px;
-      margin: auto;
-      background-color: rgba(0, 0, 0, 0.8);
+      margin: 40px auto;
+      background-color: rgba(0, 0, 0, 0.75);
       padding: 30px;
       border-radius: 16px;
-      margin-top: 40px;
+    }
+    h1, h2 {
+      text-align: center;
     }
     input {
       width: 100%;
       padding: 10px;
       font-size: 16px;
+      margin: 20px 0;
       border-radius: 6px;
       border: none;
-      margin-bottom: 30px;
-    }
-    h1, h2 {
-      text-align: center;
     }
     table {
       width: 100%;
       border-collapse: collapse;
-      margin-bottom: 40px;
+      margin-bottom: 30px;
+      background-color: rgba(255, 255, 255, 0.05);
     }
     th, td {
-      border: 1px solid rgba(255, 255, 255, 0.2);
       padding: 10px;
-      text-align: left;
+      text-align: center;
+      border: 1px solid rgba(255, 255, 255, 0.2);
     }
     th {
       background-color: rgba(255, 255, 255, 0.1);
     }
-    tr:nth-child(even) {
-      background-color: rgba(255, 255, 255, 0.05);
-    }
-    .total-row td {
+    tfoot td {
       font-weight: bold;
-      border-top: 2px solid white;
     }
   </style>
 </head>
 <body>
-  <div class="content">
+  <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
     <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
     
     <h2>Sell Orders</h2>
-    <table id="buyTable">
+    <table id="sellTable">
       <thead>
-        <tr>
-          <th>Orders</th>
-          <th>Amount</th>
-          <th>Unit Price</th>
-          <th>Coin Equivalent</th>
-        </tr>
+        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
       <tbody></tbody>
+      <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
     </table>
 
     <h2>Buy Orders</h2>
-    <table id="sellTable">
+    <table id="buyTable">
       <thead>
-        <tr>
-          <th>Orders</th>
-          <th>Amount</th>
-          <th>Unit Price</th>
-          <th>Coin Equivalent</th>
-        </tr>
+        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
       <tbody></tbody>
+      <tfoot><tr><td>Total:</td><td></td><td></td><td></td></tr></tfoot>
     </table>
   </div>
 
   <script>
-    const itemInput = document.getElementById("itemInput");
-    const buyTable = document.getElementById("buyTable").querySelector("tbody");
-    const sellTable = document.getElementById("sellTable").querySelector("tbody");
+    const input = document.getElementById("itemInput");
+    const buyBody = document.querySelector("#buyTable tbody");
+    const sellBody = document.querySelector("#sellTable tbody");
+    const buyFoot = document.querySelector("#buyTable tfoot tr");
+    const sellFoot = document.querySelector("#sellTable tfoot tr");
 
-    async function getApiKey() {
-      const res = await fetch("./api.txt");
-      return (await res.text()).trim();
-    }
+    input.addEventListener("change", () => {
+      loadData(input.value.trim().toUpperCase());
+    });
 
-    function formatNumber(num) {
-      return new Intl.NumberFormat().format(num.toFixed(1));
+    async function getApiKey() {
+      // TEMPORARY: embed directly for Vercel static hosting
+      return "YOUR_API_KEY_HERE";
     }
 
-    async function fetchOrders(itemId) {
+    async function loadData(itemId) {
       const apiKey = await getApiKey();
-      const res = await fetch(`https://api.hypixel.net/v2/skyblock/bazaar/product?key=${apiKey}&productId=${itemId}`);
-      const data = await res.json();
-      return data.product_info;
+      try {
+        const res = await fetch(`https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`);
+        const json = await res.json();
+        const data = json.products[itemId];
+        if (!data) throw new Error("Item not found");
+
+        renderTable(data.buy_summary, buyBody, buyFoot);
+        renderTable(data.sell_summary, sellBody, sellFoot);
+      } catch (err) {
+        alert("Failed to load data. Check the item ID and API key.");
+        console.error(err);
+      }
     }
 
-    function renderOrders(table, orders) {
-      table.innerHTML = "";
-      let totalAmount = 0;
-      let totalCoins = 0;
+    function renderTable(summary, tbody, tfootRow) {
+      tbody.innerHTML = "";
+      let totalOrders = 0, totalAmount = 0, totalCoins = 0;
 
-      for (const order of orders) {
-        const coinValue = order.amount * order.pricePerUnit;
-        totalAmount += order.amount;
-        totalCoins += coinValue;
+      for (const row of summary) {
+        const total = row.amount * row.pricePerUnit;
+        totalOrders += 1;
+        totalAmount += row.amount;
+        totalCoins += total;
 
-        table.innerHTML += `
-          <tr>
-            <td>${order.orders}</td>
-            <td>${order.amount}</td>
-            <td>${formatNumber(order.pricePerUnit)} coins</td>
-            <td>${formatNumber(coinValue)} coins</td>
-          </tr>
+        const tr = document.createElement("tr");
+        tr.innerHTML = `
+          <td>${row.orders}</td>
+          <td>${row.amount}</td>
+          <td>${row.pricePerUnit.toLocaleString()} coins</td>
+          <td>${total.toLocaleString()} coins</td>
         `;
+        tbody.appendChild(tr);
       }
 
-      table.innerHTML += `
-        <tr class="total-row">
-          <td><strong>Total:</strong></td>
-          <td>${formatNumber(totalAmount)}</td>
-          <td></td>
-          <td>${formatNumber(totalCoins)} coins</td>
-        </tr>
+      tfootRow.innerHTML = `
+        <td>Total:</td>
+        <td>${totalAmount}</td>
+        <td></td>
+        <td>${totalCoins.toLocaleString()} coins</td>
       `;
     }
-
-    itemInput.addEventListener("keydown", async (e) => {
-      if (e.key === "Enter") {
-        const itemId = itemInput.value.trim().toUpperCase();
-        if (!itemId) return;
-        try {
-          const product = await fetchOrders(itemId);
-          // SWAPPED ORDER TYPES: Buy display = Sell orders, and vice versa
-          renderOrders(buyTable, product.sell_summary);
-          renderOrders(sellTable, product.buy_summary);
-        } catch (err) {
-          alert("Failed to load data. Check the item ID and API key.");
-        }
-      }
-    });
   </script>
 </body>
 </html>

commit 97d831eee86105aa647cad8f9aeb73f93d8eb09a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 23:24:40 2025 +0200

    Update api.txt

diff --git a/public/api.txt b/public/api.txt
index 76d30eb..038b8c9 100644
--- a/public/api.txt
+++ b/public/api.txt
@@ -1 +1 @@
-d73e8641-8fad-43b6-80f1-3a5789371d89
\ No newline at end of file
+2bcea94d-5953-4eb3-983e-97910ceebad5
\ No newline at end of file

commit 91c11d99e272bef18e59954cd652127975072874
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 23:20:46 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 9b888e1..a36fc6f 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,145 +2,154 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
   <title>SkyBlock Bazaar Tracker</title>
   <style>
     body {
       margin: 0;
       font-family: 'Segoe UI', sans-serif;
-      background: url("bgimage.jpeg") no-repeat center center fixed;
+      background: url('./bgimage.jpeg') no-repeat center center fixed;
       background-size: cover;
-      color: #fff;
+      color: white;
     }
-    .container {
+    .content {
       max-width: 900px;
-      margin: 40px auto;
+      margin: auto;
       background-color: rgba(0, 0, 0, 0.8);
       padding: 30px;
-      border-radius: 20px;
-    }
-    h1 {
-      text-align: center;
-      font-size: 32px;
+      border-radius: 16px;
+      margin-top: 40px;
     }
     input {
       width: 100%;
       padding: 10px;
-      margin-bottom: 30px;
-      font-size: 18px;
+      font-size: 16px;
       border-radius: 6px;
       border: none;
+      margin-bottom: 30px;
+    }
+    h1, h2 {
+      text-align: center;
     }
     table {
       width: 100%;
       border-collapse: collapse;
       margin-bottom: 40px;
-      background-color: rgba(255, 255, 255, 0.05);
     }
     th, td {
-      border: 1px solid #666;
+      border: 1px solid rgba(255, 255, 255, 0.2);
       padding: 10px;
-      text-align: right;
-      font-size: 16px;
+      text-align: left;
     }
     th {
-      background-color: rgba(255, 255, 255, 0.15);
-      text-align: center;
+      background-color: rgba(255, 255, 255, 0.1);
     }
-    td:first-child, th:first-child {
-      text-align: center;
+    tr:nth-child(even) {
+      background-color: rgba(255, 255, 255, 0.05);
     }
-    tfoot td {
+    .total-row td {
       font-weight: bold;
-      background-color: rgba(255, 255, 255, 0.1);
+      border-top: 2px solid white;
     }
   </style>
 </head>
 <body>
-  <div class="container">
+  <div class="content">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <input type="text" id="item-input" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" onkeyup="fetchOrders()" />
-    <h2>Buy Orders</h2>
-    <table id="buy-orders">
+    <input id="itemInput" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+    
+    <h2>Sell Orders</h2>
+    <table id="buyTable">
       <thead>
-        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+        <tr>
+          <th>Orders</th>
+          <th>Amount</th>
+          <th>Unit Price</th>
+          <th>Coin Equivalent</th>
+        </tr>
       </thead>
       <tbody></tbody>
-      <tfoot></tfoot>
     </table>
-    <h2>Sell Orders</h2>
-    <table id="sell-orders">
+
+    <h2>Buy Orders</h2>
+    <table id="sellTable">
       <thead>
-        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
+        <tr>
+          <th>Orders</th>
+          <th>Amount</th>
+          <th>Unit Price</th>
+          <th>Coin Equivalent</th>
+        </tr>
       </thead>
       <tbody></tbody>
-      <tfoot></tfoot>
     </table>
   </div>
-  <script>
-    async function fetchOrders() {
-      const itemId = document.getElementById('item-input').value.trim().toUpperCase();
-      if (!itemId) return;
-
-      const apiKeyPath = './api.txt';
-      let apiKey = '';
 
-      try {
-        const res = await fetch(apiKeyPath);
-        apiKey = (await res.text()).trim();
-      } catch (err) {
-        console.error("Couldn't load API key from api.txt", err);
-        return;
-      }
+  <script>
+    const itemInput = document.getElementById("itemInput");
+    const buyTable = document.getElementById("buyTable").querySelector("tbody");
+    const sellTable = document.getElementById("sellTable").querySelector("tbody");
 
-      const url = `https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`;
-      try {
-        const res = await fetch(url);
-        const data = await res.json();
-        const product = data.products[itemId];
-        if (!product) return;
+    async function getApiKey() {
+      const res = await fetch("./api.txt");
+      return (await res.text()).trim();
+    }
 
-        renderTable('buy-orders', product.buy_summary);
-        renderTable('sell-orders', product.sell_summary);
-      } catch (err) {
-        console.error("Bazaar fetch error", err);
-      }
+    function formatNumber(num) {
+      return new Intl.NumberFormat().format(num.toFixed(1));
     }
 
-    function renderTable(tableId, summary) {
-      const tbody = document.querySelector(`#${tableId} tbody`);
-      const tfoot = document.querySelector(`#${tableId} tfoot`);
-      tbody.innerHTML = '';
-      tfoot.innerHTML = '';
+    async function fetchOrders(itemId) {
+      const apiKey = await getApiKey();
+      const res = await fetch(`https://api.hypixel.net/v2/skyblock/bazaar/product?key=${apiKey}&productId=${itemId}`);
+      const data = await res.json();
+      return data.product_info;
+    }
 
+    function renderOrders(table, orders) {
+      table.innerHTML = "";
       let totalAmount = 0;
       let totalCoins = 0;
 
-      for (const order of summary) {
-        const row = document.createElement('tr');
-        const price = order.pricePerUnit;
-        const amount = order.amount;
-        const coins = price * amount;
-        row.innerHTML = `
-          <td>${order.orders}</td>
-          <td>${amount.toLocaleString()}</td>
-          <td>${price.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} coins</td>
-          <td>${coins.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} coins</td>
+      for (const order of orders) {
+        const coinValue = order.amount * order.pricePerUnit;
+        totalAmount += order.amount;
+        totalCoins += coinValue;
+
+        table.innerHTML += `
+          <tr>
+            <td>${order.orders}</td>
+            <td>${order.amount}</td>
+            <td>${formatNumber(order.pricePerUnit)} coins</td>
+            <td>${formatNumber(coinValue)} coins</td>
+          </tr>
         `;
-        tbody.appendChild(row);
-        totalAmount += amount;
-        totalCoins += coins;
       }
 
-      const totalRow = document.createElement('tr');
-      totalRow.innerHTML = `
-        <td><strong>Total:</strong></td>
-        <td>${totalAmount.toLocaleString()}</td>
-        <td></td>
-        <td>${totalCoins.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} coins</td>
+      table.innerHTML += `
+        <tr class="total-row">
+          <td><strong>Total:</strong></td>
+          <td>${formatNumber(totalAmount)}</td>
+          <td></td>
+          <td>${formatNumber(totalCoins)} coins</td>
+        </tr>
       `;
-      tfoot.appendChild(totalRow);
     }
+
+    itemInput.addEventListener("keydown", async (e) => {
+      if (e.key === "Enter") {
+        const itemId = itemInput.value.trim().toUpperCase();
+        if (!itemId) return;
+        try {
+          const product = await fetchOrders(itemId);
+          // SWAPPED ORDER TYPES: Buy display = Sell orders, and vice versa
+          renderOrders(buyTable, product.sell_summary);
+          renderOrders(sellTable, product.buy_summary);
+        } catch (err) {
+          alert("Failed to load data. Check the item ID and API key.");
+        }
+      }
+    });
   </script>
 </body>
-</html>
\ No newline at end of file
+</html>

commit 6e2409b0114952db9ac2c43d779a9555a34127f4
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 23:15:55 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index b549bc0..9b888e1 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,8 +1,8 @@
 <!DOCTYPE html>
 <html lang="en">
 <head>
-  <meta charset="UTF-8">
-  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
   <title>SkyBlock Bazaar Tracker</title>
   <style>
     body {
@@ -12,136 +12,134 @@
       background-size: cover;
       color: #fff;
     }
-
     .container {
+      max-width: 900px;
+      margin: 40px auto;
       background-color: rgba(0, 0, 0, 0.8);
-      max-width: 1000px;
-      margin: 60px auto;
       padding: 30px;
       border-radius: 20px;
-      box-shadow: 0 0 15px #000;
     }
-
     h1 {
       text-align: center;
-      margin-bottom: 30px;
+      font-size: 32px;
     }
-
-    input[type="text"] {
+    input {
       width: 100%;
-      padding: 12px;
+      padding: 10px;
       margin-bottom: 30px;
-      font-size: 16px;
+      font-size: 18px;
+      border-radius: 6px;
       border: none;
-      border-radius: 10px;
     }
-
     table {
       width: 100%;
       border-collapse: collapse;
       margin-bottom: 40px;
+      background-color: rgba(255, 255, 255, 0.05);
     }
-
     th, td {
-      border: 1px solid #444;
+      border: 1px solid #666;
       padding: 10px;
-      text-align: center;
-      background-color: rgba(30, 30, 30, 0.95);
+      text-align: right;
+      font-size: 16px;
     }
-
     th {
-      background-color: rgba(60, 60, 60, 0.95);
+      background-color: rgba(255, 255, 255, 0.15);
+      text-align: center;
     }
-
-    .total-row td {
+    td:first-child, th:first-child {
+      text-align: center;
+    }
+    tfoot td {
       font-weight: bold;
-      background-color: rgba(20, 20, 20, 0.95);
+      background-color: rgba(255, 255, 255, 0.1);
     }
   </style>
 </head>
 <body>
   <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <input type="text" id="itemId" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" onkeypress="handleKey(event)">
-
+    <input type="text" id="item-input" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" onkeyup="fetchOrders()" />
     <h2>Buy Orders</h2>
-    <table id="buyOrders">
+    <table id="buy-orders">
       <thead>
         <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
       <tbody></tbody>
+      <tfoot></tfoot>
     </table>
-
     <h2>Sell Orders</h2>
-    <table id="sellOrders">
+    <table id="sell-orders">
       <thead>
         <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
       <tbody></tbody>
+      <tfoot></tfoot>
     </table>
   </div>
-
   <script>
-    async function getApiKey() {
-      try {
-        const res = await fetch('api.txt');
-        return (await res.text()).trim();
-      } catch {
-        alert("Unable to load API key. Make sure 'api.txt' exists next to 'bgimage.jpeg'.");
-      }
-    }
+    async function fetchOrders() {
+      const itemId = document.getElementById('item-input').value.trim().toUpperCase();
+      if (!itemId) return;
 
-    function handleKey(event) {
-      if (event.key === "Enter") {
-        fetchOrders();
-      }
-    }
+      const apiKeyPath = './api.txt';
+      let apiKey = '';
 
-    async function fetchOrders() {
-      const itemId = document.getElementById("itemId").value.toUpperCase();
-      const apiKey = await getApiKey();
-      if (!apiKey || !itemId) return;
+      try {
+        const res = await fetch(apiKeyPath);
+        apiKey = (await res.text()).trim();
+      } catch (err) {
+        console.error("Couldn't load API key from api.txt", err);
+        return;
+      }
 
       const url = `https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`;
-      const res = await fetch(url);
-      const data = await res.json();
-      const product = data.products[itemId];
-      if (!product) return alert("Item not found.");
-
-      populateTable('buyOrders', product.buy_summary);
-      populateTable('sellOrders', product.sell_summary);
+      try {
+        const res = await fetch(url);
+        const data = await res.json();
+        const product = data.products[itemId];
+        if (!product) return;
+
+        renderTable('buy-orders', product.buy_summary);
+        renderTable('sell-orders', product.sell_summary);
+      } catch (err) {
+        console.error("Bazaar fetch error", err);
+      }
     }
 
-    function populateTable(id, orders) {
-      const table = document.getElementById(id).querySelector('tbody');
-      table.innerHTML = '';
+    function renderTable(tableId, summary) {
+      const tbody = document.querySelector(`#${tableId} tbody`);
+      const tfoot = document.querySelector(`#${tableId} tfoot`);
+      tbody.innerHTML = '';
+      tfoot.innerHTML = '';
 
       let totalAmount = 0;
       let totalCoins = 0;
 
-      for (const o of orders) {
-        const row = document.createElement("tr");
-        const total = o.pricePerUnit * o.amount;
-        totalAmount += o.amount;
-        totalCoins += total;
+      for (const order of summary) {
+        const row = document.createElement('tr');
+        const price = order.pricePerUnit;
+        const amount = order.amount;
+        const coins = price * amount;
         row.innerHTML = `
-          <td>${o.orders}</td>
-          <td>${o.amount}</td>
-          <td>${o.pricePerUnit.toLocaleString()} coins</td>
-          <td>${total.toLocaleString()} coins</td>
+          <td>${order.orders}</td>
+          <td>${amount.toLocaleString()}</td>
+          <td>${price.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} coins</td>
+          <td>${coins.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} coins</td>
         `;
-        table.appendChild(row);
+        tbody.appendChild(row);
+        totalAmount += amount;
+        totalCoins += coins;
       }
 
-      const totalRow = document.createElement("tr");
-      totalRow.className = 'total-row';
+      const totalRow = document.createElement('tr');
       totalRow.innerHTML = `
-        <td colspan="1">Total:</td>
+        <td><strong>Total:</strong></td>
         <td>${totalAmount.toLocaleString()}</td>
         <td></td>
-        <td>${totalCoins.toLocaleString()} coins</td>
+        <td>${totalCoins.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} coins</td>
       `;
-      table.appendChild(totalRow);
+      tfoot.appendChild(totalRow);
     }
   </script>
 </body>

commit 5c5c4388c4e7f7b0462d2ee7b9dececc809a28b8
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 23:09:30 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index d997590..b549bc0 100644
--- a/public/index.html
+++ b/public/index.html
@@ -2,131 +2,147 @@
 <html lang="en">
 <head>
   <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>SkyBlock Bazaar Tracker</title>
   <style>
     body {
       margin: 0;
       font-family: 'Segoe UI', sans-serif;
-      background-image: url('bgimage.jpeg');
+      background: url("bgimage.jpeg") no-repeat center center fixed;
       background-size: cover;
-      background-attachment: fixed;
-      background-position: center;
       color: #fff;
     }
 
-    .content {
-      max-width: 900px;
-      margin: 50px auto;
-      padding: 20px;
-      background-color: rgba(0, 0, 0, 0.75);
-      border-radius: 16px;
-      box-shadow: 0 0 20px rgba(0,0,0,0.5);
+    .container {
+      background-color: rgba(0, 0, 0, 0.8);
+      max-width: 1000px;
+      margin: 60px auto;
+      padding: 30px;
+      border-radius: 20px;
+      box-shadow: 0 0 15px #000;
     }
 
     h1 {
       text-align: center;
-      font-size: 2rem;
-      margin-bottom: 20px;
+      margin-bottom: 30px;
     }
 
-    input {
+    input[type="text"] {
       width: 100%;
       padding: 12px;
+      margin-bottom: 30px;
       font-size: 16px;
-      border-radius: 8px;
       border: none;
-      margin-bottom: 30px;
+      border-radius: 10px;
     }
 
     table {
       width: 100%;
       border-collapse: collapse;
-      margin-bottom: 30px;
+      margin-bottom: 40px;
     }
 
     th, td {
-      padding: 12px;
       border: 1px solid #444;
-      text-align: left;
+      padding: 10px;
+      text-align: center;
+      background-color: rgba(30, 30, 30, 0.95);
     }
 
     th {
-      background-color: #333;
-    }
-
-    td {
-      background-color: #222;
+      background-color: rgba(60, 60, 60, 0.95);
     }
 
-    .section-title {
-      font-size: 1.2rem;
+    .total-row td {
       font-weight: bold;
-      margin: 20px 0 10px;
+      background-color: rgba(20, 20, 20, 0.95);
     }
   </style>
 </head>
 <body>
-  <div class="content">
+  <div class="container">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <input id="item-input" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)">
+    <input type="text" id="itemId" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" onkeypress="handleKey(event)">
 
-    <div class="section-title">Buy Orders</div>
-    <table>
+    <h2>Buy Orders</h2>
+    <table id="buyOrders">
       <thead>
-        <tr><th>Price</th><th>Amount</th><th>Total</th></tr>
+        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
-      <tbody id="buy-orders"></tbody>
+      <tbody></tbody>
     </table>
 
-    <div class="section-title">Sell Orders</div>
-    <table>
+    <h2>Sell Orders</h2>
+    <table id="sellOrders">
       <thead>
-        <tr><th>Price</th><th>Amount</th><th>Total</th></tr>
+        <tr><th>Orders</th><th>Amount</th><th>Unit Price</th><th>Coin Equivalent</th></tr>
       </thead>
-      <tbody id="sell-orders"></tbody>
+      <tbody></tbody>
     </table>
   </div>
 
   <script>
-    async function fetchBazaar(itemId) {
+    async function getApiKey() {
       try {
-        const apiKey = await fetch('api.txt').then(res => res.text()).then(text => text.trim());
-        const url = `https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`;
-        const res = await fetch(url);
-        const data = await res.json();
-
-        const item = data.products[itemId];
-        if (!item) {
-          alert("Invalid item ID");
-          return;
-        }
-
-        const buyOrders = item.buy_summary;
-        const sellOrders = item.sell_summary;
-
-        function format(orders) {
-          return orders.map(order => `
-            <tr>
-              <td>${order.pricePerUnit.toLocaleString()}</td>
-              <td>${order.amount.toLocaleString()}</td>
-              <td>${(order.pricePerUnit * order.amount).toLocaleString()}</td>
-            </tr>
-          `).join('');
-        }
-
-        document.getElementById('buy-orders').innerHTML = format(buyOrders);
-        document.getElementById('sell-orders').innerHTML = format(sellOrders);
-      } catch (err) {
-        console.error("Error:", err);
-        alert("Failed to fetch data");
+        const res = await fetch('api.txt');
+        return (await res.text()).trim();
+      } catch {
+        alert("Unable to load API key. Make sure 'api.txt' exists next to 'bgimage.jpeg'.");
       }
     }
 
-    document.getElementById('item-input').addEventListener('keydown', function(e) {
-      if (e.key === 'Enter') {
-        fetchBazaar(this.value.trim().toUpperCase());
+    function handleKey(event) {
+      if (event.key === "Enter") {
+        fetchOrders();
       }
-    });
+    }
+
+    async function fetchOrders() {
+      const itemId = document.getElementById("itemId").value.toUpperCase();
+      const apiKey = await getApiKey();
+      if (!apiKey || !itemId) return;
+
+      const url = `https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`;
+      const res = await fetch(url);
+      const data = await res.json();
+      const product = data.products[itemId];
+      if (!product) return alert("Item not found.");
+
+      populateTable('buyOrders', product.buy_summary);
+      populateTable('sellOrders', product.sell_summary);
+    }
+
+    function populateTable(id, orders) {
+      const table = document.getElementById(id).querySelector('tbody');
+      table.innerHTML = '';
+
+      let totalAmount = 0;
+      let totalCoins = 0;
+
+      for (const o of orders) {
+        const row = document.createElement("tr");
+        const total = o.pricePerUnit * o.amount;
+        totalAmount += o.amount;
+        totalCoins += total;
+        row.innerHTML = `
+          <td>${o.orders}</td>
+          <td>${o.amount}</td>
+          <td>${o.pricePerUnit.toLocaleString()} coins</td>
+          <td>${total.toLocaleString()} coins</td>
+        `;
+        table.appendChild(row);
+      }
+
+      const totalRow = document.createElement("tr");
+      totalRow.className = 'total-row';
+      totalRow.innerHTML = `
+        <td colspan="1">Total:</td>
+        <td>${totalAmount.toLocaleString()}</td>
+        <td></td>
+        <td>${totalCoins.toLocaleString()} coins</td>
+      `;
+      table.appendChild(totalRow);
+    }
   </script>
 </body>
-</html>
+</html>
\ No newline at end of file

commit b8b5ab2cabc3523c99ed6624a6c0b210f1b8520f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:59:16 2025 +0200

    api key provided

diff --git a/public/api.txt b/public/api.txt
new file mode 100644
index 0000000..76d30eb
--- /dev/null
+++ b/public/api.txt
@@ -0,0 +1 @@
+d73e8641-8fad-43b6-80f1-3a5789371d89
\ No newline at end of file
diff --git a/public/index.html b/public/index.html
index 9fcdb1a..d997590 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,46 +1,41 @@
 <!DOCTYPE html>
 <html lang="en">
 <head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <meta charset="UTF-8">
   <title>SkyBlock Bazaar Tracker</title>
   <style>
     body {
-  margin: 0;
-  font-family: 'Segoe UI', sans-serif;
-  background-image: url('/bgimage.jpeg');
-  background-size: cover;
-  background-attachment: fixed;
-  background-position: center;
-  color: #fff;
-}
-
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background-image: url('bgimage.jpeg');
+      background-size: cover;
+      background-attachment: fixed;
+      background-position: center;
+      color: #fff;
+    }
 
-    .container {
+    .content {
       max-width: 900px;
-      margin: 0 auto;
-      background: rgba(0,0,0,0.7);
-      padding: 30px;
-      margin-top: 50px;
-      border-radius: 20px;
-      overflow-y: auto;
-      max-height: 90vh;
+      margin: 50px auto;
+      padding: 20px;
+      background-color: rgba(0, 0, 0, 0.75);
+      border-radius: 16px;
+      box-shadow: 0 0 20px rgba(0,0,0,0.5);
     }
 
     h1 {
       text-align: center;
-      font-size: 32px;
-      margin-bottom: 30px;
+      font-size: 2rem;
+      margin-bottom: 20px;
     }
 
     input {
       width: 100%;
-      padding: 10px;
-      margin-bottom: 20px;
+      padding: 12px;
       font-size: 16px;
       border-radius: 8px;
       border: none;
-      box-sizing: border-box;
+      margin-bottom: 30px;
     }
 
     table {
@@ -50,8 +45,8 @@
     }
 
     th, td {
-      border: 1px solid #555;
-      padding: 10px;
+      padding: 12px;
+      border: 1px solid #444;
       text-align: left;
     }
 
@@ -59,83 +54,78 @@
       background-color: #333;
     }
 
-    .totals {
+    td {
+      background-color: #222;
+    }
+
+    .section-title {
+      font-size: 1.2rem;
       font-weight: bold;
-      margin-bottom: 40px;
+      margin: 20px 0 10px;
     }
   </style>
 </head>
 <body>
-  <div class="container">
+  <div class="content">
     <h1>SkyBlock Bazaar Tracker</h1>
-    <input type="text" id="itemId" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+    <input id="item-input" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)">
 
-    <h2>Buy Orders</h2>
-    <table id="buyTable">
+    <div class="section-title">Buy Orders</div>
+    <table>
       <thead>
-        <tr>
-          <th>Price</th>
-          <th>Amount</th>
-          <th>Total</th>
-        </tr>
+        <tr><th>Price</th><th>Amount</th><th>Total</th></tr>
       </thead>
-      <tbody></tbody>
+      <tbody id="buy-orders"></tbody>
     </table>
 
-    <h2>Sell Orders</h2>
-    <table id="sellTable">
+    <div class="section-title">Sell Orders</div>
+    <table>
       <thead>
-        <tr>
-          <th>Price</th>
-          <th>Amount</th>
-          <th>Total</th>
-        </tr>
+        <tr><th>Price</th><th>Amount</th><th>Total</th></tr>
       </thead>
-      <tbody></tbody>
+      <tbody id="sell-orders"></tbody>
     </table>
-
-    <div class="totals" id="totals"></div>
   </div>
 
   <script>
-    const input = document.getElementById('itemId');
-    const buyBody = document.querySelector('#buyTable tbody');
-    const sellBody = document.querySelector('#sellTable tbody');
-    const totals = document.getElementById('totals');
-
-    input.addEventListener('change', () => {
-      const id = input.value.toUpperCase().trim();
-      if (!id) return;
-
-      fetch(`https://api.hypixel.net/skyblock/bazaar/product?productId=${id}`)
-        .then(res => res.json())
-        .then(data => {
-          const product = data.product;
-          const buys = product.buy_summary || [];
-          const sells = product.sell_summary || [];
-
-          let buyTotal = 0, sellTotal = 0;
-          buyBody.innerHTML = sells.map(row => {
-            const total = row.pricePerUnit * row.amount;
-            buyTotal += total;
-            return `<tr><td>${row.pricePerUnit.toLocaleString()}</td><td>${row.amount}</td><td>${total.toLocaleString()}</td></tr>`;
-          }).join('');
-
-          sellBody.innerHTML = buys.map(row => {
-            const total = row.pricePerUnit * row.amount;
-            sellTotal += total;
-            return `<tr><td>${row.pricePerUnit.toLocaleString()}</td><td>${row.amount}</td><td>${total.toLocaleString()}</td></tr>`;
-          }).join('');
-
-          totals.innerHTML = `
-            Total Buy Order Volume: ${buyTotal.toLocaleString()} coins<br>
-            Total Sell Order Volume: ${sellTotal.toLocaleString()} coins
-          `;
-        })
-        .catch(err => {
-          alert("Item not found or API error.");
-          console.error(err);
-        });
+    async function fetchBazaar(itemId) {
+      try {
+        const apiKey = await fetch('api.txt').then(res => res.text()).then(text => text.trim());
+        const url = `https://api.hypixel.net/skyblock/bazaar?key=${apiKey}`;
+        const res = await fetch(url);
+        const data = await res.json();
+
+        const item = data.products[itemId];
+        if (!item) {
+          alert("Invalid item ID");
+          return;
+        }
+
+        const buyOrders = item.buy_summary;
+        const sellOrders = item.sell_summary;
+
+        function format(orders) {
+          return orders.map(order => `
+            <tr>
+              <td>${order.pricePerUnit.toLocaleString()}</td>
+              <td>${order.amount.toLocaleString()}</td>
+              <td>${(order.pricePerUnit * order.amount).toLocaleString()}</td>
+            </tr>
+          `).join('');
+        }
+
+        document.getElementById('buy-orders').innerHTML = format(buyOrders);
+        document.getElementById('sell-orders').innerHTML = format(sellOrders);
+      } catch (err) {
+        console.error("Error:", err);
+        alert("Failed to fetch data");
+      }
+    }
+
+    document.getElementById('item-input').addEventListener('keydown', function(e) {
+      if (e.key === 'Enter') {
+        fetchBazaar(this.value.trim().toUpperCase());
+      }
     });
   </script>
 </body>

commit df6290164b97bb2886bb358edad8595a7f10bedd
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:54:30 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index a3947da..9fcdb1a 100644
--- a/public/index.html
+++ b/public/index.html
@@ -8,10 +8,12 @@
     body {
   margin: 0;
   font-family: 'Segoe UI', sans-serif;
-  background: url("/bgimage.jpg") no-repeat center center fixed;
+  background-image: url('/bgimage.jpeg');
   background-size: cover;
-  color: white;
-    }
+  background-attachment: fixed;
+  background-position: center;
+  color: #fff;
+}
 
 
     .container {

commit 9524555d45e569a536b015a5e38731946c6e8bc6
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:52:49 2025 +0200

    bg image

diff --git a/public/bgimage.png b/public/bgimage.jpeg
similarity index 100%
rename from public/bgimage.png
rename to public/bgimage.jpeg

commit 389012f9386d3c7b8ff1d4ddf3e6143e1dbff98c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:51:55 2025 +0200

    Create bgimage.png

diff --git a/public/bgimage.png b/public/bgimage.png
new file mode 100644
index 0000000..4656261
Binary files /dev/null and b/public/bgimage.png differ

commit 459e2ea93f29eaa0990ccc68da65e4853e490b14
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:49:38 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index f21b784..a3947da 100644
--- a/public/index.html
+++ b/public/index.html
@@ -6,13 +6,14 @@
   <title>SkyBlock Bazaar Tracker</title>
   <style>
     body {
-      margin: 0;
-      font-family: 'Segoe UI', sans-serif;
-      background: url('https://i.imgur.com/UJ4qCxx.jpg') no-repeat center center fixed;
-      background-size: cover;
-      color: white;
+  margin: 0;
+  font-family: 'Segoe UI', sans-serif;
+  background: url("/bgimage.jpg") no-repeat center center fixed;
+  background-size: cover;
+  color: white;
     }
 
+
     .container {
       max-width: 900px;
       margin: 0 auto;

commit 4908597f43bfede676697bc3e50f3cf30521a3c8
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:45:35 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index a7ed0f1..f21b784 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,154 +1,139 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
-<html>
+<!DOCTYPE html>
+<html lang="en">
 <head>
-  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-  <meta http-equiv="Content-Style-Type" content="text/css">
-  <title></title>
-  <meta name="Generator" content="Cocoa HTML Writer">
-  <meta name="CocoaVersion" content="2487.6">
-  <style type="text/css">
-    span.s1 {font-kerning: none}
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
+  <title>SkyBlock Bazaar Tracker</title>
+  <style>
+    body {
+      margin: 0;
+      font-family: 'Segoe UI', sans-serif;
+      background: url('https://i.imgur.com/UJ4qCxx.jpg') no-repeat center center fixed;
+      background-size: cover;
+      color: white;
+    }
+
+    .container {
+      max-width: 900px;
+      margin: 0 auto;
+      background: rgba(0,0,0,0.7);
+      padding: 30px;
+      margin-top: 50px;
+      border-radius: 20px;
+      overflow-y: auto;
+      max-height: 90vh;
+    }
+
+    h1 {
+      text-align: center;
+      font-size: 32px;
+      margin-bottom: 30px;
+    }
+
+    input {
+      width: 100%;
+      padding: 10px;
+      margin-bottom: 20px;
+      font-size: 16px;
+      border-radius: 8px;
+      border: none;
+      box-sizing: border-box;
+    }
+
+    table {
+      width: 100%;
+      border-collapse: collapse;
+      margin-bottom: 30px;
+    }
+
+    th, td {
+      border: 1px solid #555;
+      padding: 10px;
+      text-align: left;
+    }
+
+    th {
+      background-color: #333;
+    }
+
+    .totals {
+      font-weight: bold;
+      margin-bottom: 40px;
+    }
   </style>
 </head>
 <body>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;!DOCTYPE html&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;html lang="en"&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;head&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;meta charset="UTF-8" /&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"/&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;style&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>body {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-family: 'Segoe UI', sans-serif;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background: url('https://i.imgur.com/UJ4qCxx.jpg') no-repeat center center fixed;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background-size: cover;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>color: white;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>.container {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>max-width: 900px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0 auto;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background: rgba(0,0,0,0.7);</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>padding: 30px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 50px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 20px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>overflow-y: auto;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>max-height: 90vh;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>h1 {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>text-align: center;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 32px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 30px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>input {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>padding: 10px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 16px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 8px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border: none;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>box-sizing: border-box;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>table {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border-collapse: collapse;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 30px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>th, td {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border: 1px solid #555;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>padding: 10px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>text-align: left;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>th {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #333;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>.totals {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-weight: bold;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 40px;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;/style&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;/head&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;body&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;div class="container"&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;h1&gt;SkyBlock Bazaar Tracker&lt;/h1&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;input type="text" id="itemId" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" /&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;h2&gt;Buy Orders&lt;/h2&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;table id="buyTable"&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;thead&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;tr&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Price&lt;/th&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Amount&lt;/th&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Total&lt;/th&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;/tr&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;/thead&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;tbody&gt;&lt;/tbody&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;/table&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;h2&gt;Sell Orders&lt;/h2&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;table id="sellTable"&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;thead&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;tr&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Price&lt;/th&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Amount&lt;/th&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Total&lt;/th&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;/tr&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;/thead&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;tbody&gt;&lt;/tbody&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;/table&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;div class="totals" id="totals"&gt;&lt;/div&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;/div&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;script&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const input = document.getElementById('itemId');</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const buyBody = document.querySelector('#buyTable tbody');</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const sellBody = document.querySelector('#sellTable tbody');</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const totals = document.getElementById('totals');</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>input.addEventListener('change', () =&gt; {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>const id = input.value.toUpperCase().trim();</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>if (!id) return;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>fetch(`https://api.hypixel.net/skyblock/bazaar/product?productId=${id}`)</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(res =&gt; res.json())</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(data =&gt; {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const product = data.product;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const buys = product.buy_summary || [];</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const sells = product.sell_summary || [];</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>let buyTotal = 0, sellTotal = 0;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>buyBody.innerHTML = sells.map(row =&gt; {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>const total = row.pricePerUnit * row.amount;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>buyTotal += total;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${row.pricePerUnit.toLocaleString()}&lt;/td&gt;&lt;td&gt;${row.amount}&lt;/td&gt;&lt;td&gt;${total.toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}).join('');</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>sellBody.innerHTML = buys.map(row =&gt; {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>const total = row.pricePerUnit * row.amount;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>sellTotal += total;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${row.pricePerUnit.toLocaleString()}&lt;/td&gt;&lt;td&gt;${row.amount}&lt;/td&gt;&lt;td&gt;${total.toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}).join('');</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>totals.innerHTML = `</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>Total Buy Order Volume: ${buyTotal.toLocaleString()} coins&lt;br&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>Total Sell Order Volume: ${sellTotal.toLocaleString()} coins</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>`;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>})</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>.catch(err =&gt; {</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>alert("Item not found or API error.");</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>console.error(err);</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>});</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>});</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;/body&gt;</b></span></h1>
-<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;/html&gt;</b></span></h1>
+  <div class="container">
+    <h1>SkyBlock Bazaar Tracker</h1>
+    <input type="text" id="itemId" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" />
+
+    <h2>Buy Orders</h2>
+    <table id="buyTable">
+      <thead>
+        <tr>
+          <th>Price</th>
+          <th>Amount</th>
+          <th>Total</th>
+        </tr>
+      </thead>
+      <tbody></tbody>
+    </table>
+
+    <h2>Sell Orders</h2>
+    <table id="sellTable">
+      <thead>
+        <tr>
+          <th>Price</th>
+          <th>Amount</th>
+          <th>Total</th>
+        </tr>
+      </thead>
+      <tbody></tbody>
+    </table>
+
+    <div class="totals" id="totals"></div>
+  </div>
+
+  <script>
+    const input = document.getElementById('itemId');
+    const buyBody = document.querySelector('#buyTable tbody');
+    const sellBody = document.querySelector('#sellTable tbody');
+    const totals = document.getElementById('totals');
+
+    input.addEventListener('change', () => {
+      const id = input.value.toUpperCase().trim();
+      if (!id) return;
+
+      fetch(`https://api.hypixel.net/skyblock/bazaar/product?productId=${id}`)
+        .then(res => res.json())
+        .then(data => {
+          const product = data.product;
+          const buys = product.buy_summary || [];
+          const sells = product.sell_summary || [];
+
+          let buyTotal = 0, sellTotal = 0;
+          buyBody.innerHTML = sells.map(row => {
+            const total = row.pricePerUnit * row.amount;
+            buyTotal += total;
+            return `<tr><td>${row.pricePerUnit.toLocaleString()}</td><td>${row.amount}</td><td>${total.toLocaleString()}</td></tr>`;
+          }).join('');
+
+          sellBody.innerHTML = buys.map(row => {
+            const total = row.pricePerUnit * row.amount;
+            sellTotal += total;
+            return `<tr><td>${row.pricePerUnit.toLocaleString()}</td><td>${row.amount}</td><td>${total.toLocaleString()}</td></tr>`;
+          }).join('');
+
+          totals.innerHTML = `
+            Total Buy Order Volume: ${buyTotal.toLocaleString()} coins<br>
+            Total Sell Order Volume: ${sellTotal.toLocaleString()} coins
+          `;
+        })
+        .catch(err => {
+          alert("Item not found or API error.");
+          console.error(err);
+        });
+    });
+  </script>
 </body>
 </html>

commit 550a193c8c297579f759b5fc34f41e99f113ad24
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:44:14 2025 +0200

    ......

diff --git a/public/.DS_Store b/public/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/public/.DS_Store differ
diff --git a/public/index.html b/public/index.html
index 4fa600e..a7ed0f1 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1 +1,154 @@
-<!DOCTYPE html><html><head><title>Skyblock</title></head><body><h1>Hello</h1></body></html>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+<head>
+  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+  <meta http-equiv="Content-Style-Type" content="text/css">
+  <title></title>
+  <meta name="Generator" content="Cocoa HTML Writer">
+  <meta name="CocoaVersion" content="2487.6">
+  <style type="text/css">
+    span.s1 {font-kerning: none}
+  </style>
+</head>
+<body>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;!DOCTYPE html&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;html lang="en"&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;head&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;meta charset="UTF-8" /&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"/&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;style&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>body {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-family: 'Segoe UI', sans-serif;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background: url('https://i.imgur.com/UJ4qCxx.jpg') no-repeat center center fixed;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background-size: cover;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>color: white;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>.container {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>max-width: 900px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0 auto;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background: rgba(0,0,0,0.7);</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>padding: 30px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 50px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 20px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>overflow-y: auto;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>max-height: 90vh;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>h1 {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>text-align: center;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 32px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 30px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>input {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>padding: 10px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 16px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 8px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border: none;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>box-sizing: border-box;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>table {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border-collapse: collapse;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 30px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>th, td {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>border: 1px solid #555;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>padding: 10px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>text-align: left;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>th {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #333;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>.totals {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>font-weight: bold;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 40px;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>}</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;/style&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;/head&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;body&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;div class="container"&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;h1&gt;SkyBlock Bazaar Tracker&lt;/h1&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;input type="text" id="itemId" placeholder="Enter Item ID (e.g. BOOSTER_COOKIE)" /&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;h2&gt;Buy Orders&lt;/h2&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;table id="buyTable"&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;thead&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;tr&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Price&lt;/th&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Amount&lt;/th&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Total&lt;/th&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;/tr&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;/thead&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;tbody&gt;&lt;/tbody&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;/table&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;h2&gt;Sell Orders&lt;/h2&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;table id="sellTable"&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;thead&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;tr&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Price&lt;/th&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Amount&lt;/th&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>&lt;th&gt;Total&lt;/th&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>&lt;/tr&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;/thead&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>&lt;tbody&gt;&lt;/tbody&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;/table&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>&lt;div class="totals" id="totals"&gt;&lt;/div&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;/div&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;script&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const input = document.getElementById('itemId');</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const buyBody = document.querySelector('#buyTable tbody');</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const sellBody = document.querySelector('#sellTable tbody');</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>const totals = document.getElementById('totals');</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>input.addEventListener('change', () =&gt; {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>const id = input.value.toUpperCase().trim();</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>if (!id) return;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  </span>fetch(`https://api.hypixel.net/skyblock/bazaar/product?productId=${id}`)</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(res =&gt; res.json())</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(data =&gt; {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const product = data.product;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const buys = product.buy_summary || [];</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const sells = product.sell_summary || [];</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>let buyTotal = 0, sellTotal = 0;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>buyBody.innerHTML = sells.map(row =&gt; {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>const total = row.pricePerUnit * row.amount;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>buyTotal += total;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${row.pricePerUnit.toLocaleString()}&lt;/td&gt;&lt;td&gt;${row.amount}&lt;/td&gt;&lt;td&gt;${total.toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}).join('');</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>sellBody.innerHTML = buys.map(row =&gt; {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>const total = row.pricePerUnit * row.amount;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>sellTotal += total;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${row.pricePerUnit.toLocaleString()}&lt;/td&gt;&lt;td&gt;${row.amount}&lt;/td&gt;&lt;td&gt;${total.toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}).join('');</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000; min-height: 29.0px"><span class="s1"><b></b></span><br></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>totals.innerHTML = `</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>Total Buy Order Volume: ${buyTotal.toLocaleString()} coins&lt;br&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>Total Sell Order Volume: ${sellTotal.toLocaleString()} coins</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>`;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>})</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>.catch(err =&gt; {</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>alert("Item not found or API error.");</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>console.error(err);</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  Â  Â  </span>});</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  Â  </span>});</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;/body&gt;</b></span></h1>
+<h1 style="margin: 0.0px 0.0px 16.1px 0.0px; font: 24.0px Times; -webkit-text-stroke: #000000"><span class="s1"><b>&lt;/html&gt;</b></span></h1>
+</body>
+</html>

commit 6d5e7c874d7c4a2192c42e2820ee848e5c7ceb38
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:34:26 2025 +0200

    Update index.html

diff --git a/public/index.html b/public/index.html
index 6ce670c..4fa600e 100644
--- a/public/index.html
+++ b/public/index.html
@@ -1,118 +1 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
-<html>
-<head>
-  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-  <meta http-equiv="Content-Style-Type" content="text/css">
-  <title></title>
-  <meta name="Generator" content="Cocoa HTML Writer">
-  <meta name="CocoaVersion" content="2487.6">
-  <style type="text/css">
-    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000}
-    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000; min-height: 14.0px}
-    span.s1 {font-kerning: none}
-  </style>
-</head>
-<body>
-<p class="p1"><span class="s1">&lt;!DOCTYPE html&gt;</span></p>
-<p class="p1"><span class="s1">&lt;html&gt;</span></p>
-<p class="p1"><span class="s1">&lt;head&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;style&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>body {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-family: Arial, sans-serif;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-image: url('https://i.imgur.com/JU4qCxx.jpg'); /* replace with your own background */</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-size: cover;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-attachment: fixed;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>color: #fff;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>.content {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>max-width: 800px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: auto;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: rgba(0, 0, 0, 0.6);</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 50px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 12px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>overflow-y: auto;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>max-height: 80vh;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>input {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 8px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: none;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 4px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 16px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>table {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-collapse: collapse;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th, td {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: 1px solid #ccc;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 8px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>text-align: left;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #222;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #444;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/style&gt;</span></p>
-<p class="p1"><span class="s1">&lt;/head&gt;</span></p>
-<p class="p1"><span class="s1">&lt;body&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;div class="content"&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;h1&gt;SkyBlock Bazaar Tracker&lt;/h1&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;input type="text" id="itemInput" placeholder="Enter item ID (e.g., BOOSTER_COOKIE)"&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;div id="tables"&gt;Enter an item ID to see orders.&lt;/div&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/div&gt;</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;script&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>document.getElementById('itemInput').addEventListener('change', function () {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>const itemId = this.value.toUpperCase();</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>fetch(`https://api.hypixel.net/skyblock/bazaar`)</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(res =&gt; res.json())</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(data =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const product = data.products[itemId];</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>if (!product) {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>document.getElementById('tables').innerHTML = '&lt;p&gt;Invalid item ID or no data available.&lt;/p&gt;';</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const buyOrders = product.buy_summary;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const sellOrders = product.sell_summary;</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const makeTable = (orders, type) =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>let totalCoins = 0;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>let rows = orders.map(o =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>const coins = o.pricePerUnit * o.amount;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>totalCoins += coins;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${o.pricePerUnit.toFixed(1)}&lt;/td&gt;&lt;td&gt;${o.amount}&lt;/td&gt;&lt;td&gt;${coins.toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>}).join('');</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;h2&gt;${type} Orders&lt;/h2&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;table&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  Â  </span>&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Price&lt;/th&gt;&lt;th&gt;Amount&lt;/th&gt;&lt;th&gt;Total&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  Â  </span>&lt;tbody&gt;${rows}&lt;/tbody&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  Â  </span>&lt;tfoot&gt;&lt;tr&gt;&lt;td colspan="2"&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;${totalCoins.toLocaleString()}&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tfoot&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;/table&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>`;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>};</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const buyTable = makeTable(buyOrders, "Buy");</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const sellTable = makeTable(sellOrders, "Sell");</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>document.getElementById('tables').innerHTML = buyTable + sellTable;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>});</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>});</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</span></p>
-<p class="p1"><span class="s1">&lt;/body&gt;</span></p>
-<p class="p1"><span class="s1">&lt;/html&gt;</span></p>
-</body>
-</html>
+<!DOCTYPE html><html><head><title>Skyblock</title></head><body><h1>Hello</h1></body></html>

commit 299d473558b46fd8a14e2cdc8d54921dded2f9be
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:29:31 2025 +0200

    a

diff --git a/.DS_Store b/.DS_Store
index 5008ddf..1e80910 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/index.html b/public/index.html
similarity index 100%
rename from index.html
rename to public/index.html

commit 31ae760327b458245d64fe3dce7f95c78f144512
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:25:36 2025 +0200

    Update index.html

diff --git a/index.html b/index.html
index 1e690b9..6ce670c 100644
--- a/index.html
+++ b/index.html
@@ -8,6 +8,7 @@
   <meta name="CocoaVersion" content="2487.6">
   <style type="text/css">
     p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000}
+    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000; min-height: 14.0px}
     span.s1 {font-kerning: none}
   </style>
 </head>
@@ -16,10 +17,101 @@
 <p class="p1"><span class="s1">&lt;html&gt;</span></p>
 <p class="p1"><span class="s1">&lt;head&gt;</span></p>
 <p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;style&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>body {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-family: Arial, sans-serif;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-image: url('https://i.imgur.com/JU4qCxx.jpg'); /* replace with your own background */</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-size: cover;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-attachment: fixed;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>color: #fff;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>.content {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>max-width: 800px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: auto;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: rgba(0, 0, 0, 0.6);</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 50px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 12px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>overflow-y: auto;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>max-height: 80vh;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>input {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 8px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: none;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 4px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 16px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>table {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-collapse: collapse;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th, td {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: 1px solid #ccc;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 8px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>text-align: left;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #222;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #444;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/style&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/head&gt;</span></p>
 <p class="p1"><span class="s1">&lt;body&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;h1&gt;It works!&lt;/h1&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;p&gt;If you see this, your deployment succeeded.&lt;/p&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;div class="content"&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;h1&gt;SkyBlock Bazaar Tracker&lt;/h1&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;input type="text" id="itemInput" placeholder="Enter item ID (e.g., BOOSTER_COOKIE)"&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;div id="tables"&gt;Enter an item ID to see orders.&lt;/div&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/div&gt;</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;script&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>document.getElementById('itemInput').addEventListener('change', function () {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>const itemId = this.value.toUpperCase();</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>fetch(`https://api.hypixel.net/skyblock/bazaar`)</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(res =&gt; res.json())</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>.then(data =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const product = data.products[itemId];</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>if (!product) {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>document.getElementById('tables').innerHTML = '&lt;p&gt;Invalid item ID or no data available.&lt;/p&gt;';</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const buyOrders = product.buy_summary;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const sellOrders = product.sell_summary;</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const makeTable = (orders, type) =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>let totalCoins = 0;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>let rows = orders.map(o =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>const coins = o.pricePerUnit * o.amount;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>totalCoins += coins;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${o.pricePerUnit.toFixed(1)}&lt;/td&gt;&lt;td&gt;${o.amount}&lt;/td&gt;&lt;td&gt;${coins.toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>}).join('');</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;h2&gt;${type} Orders&lt;/h2&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;table&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  Â  </span>&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Price&lt;/th&gt;&lt;th&gt;Amount&lt;/th&gt;&lt;th&gt;Total&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  Â  </span>&lt;tbody&gt;${rows}&lt;/tbody&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  Â  </span>&lt;tfoot&gt;&lt;tr&gt;&lt;td colspan="2"&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;${totalCoins.toLocaleString()}&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tfoot&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;/table&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>`;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>};</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const buyTable = makeTable(buyOrders, "Buy");</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const sellTable = makeTable(sellOrders, "Sell");</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>document.getElementById('tables').innerHTML = buyTable + sellTable;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>});</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>});</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/body&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/html&gt;</span></p>
 </body>

commit e82c4859a30d0801a1bf17c4920c96b22f63699b
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:18:17 2025 +0200

    Delete vercel.json

diff --git a/vercel.json b/vercel.json
deleted file mode 100644
index 52b8e7e..0000000
--- a/vercel.json
+++ /dev/null
@@ -1,8 +0,0 @@
-{
-  "builds": [
-    {
-      "src": "index.html",
-      "use": "@vercel/static"
-    }
-  ]
-}
\ No newline at end of file

commit 72f9c585346c1b0ec134bd95c4b4f0d51b2827fb
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:10:35 2025 +0200

    Create vercel.json

diff --git a/vercel.json b/vercel.json
new file mode 100644
index 0000000..52b8e7e
--- /dev/null
+++ b/vercel.json
@@ -0,0 +1,8 @@
+{
+  "builds": [
+    {
+      "src": "index.html",
+      "use": "@vercel/static"
+    }
+  ]
+}
\ No newline at end of file

commit 60c714af229c999854668a6df4d6a88de8f9248a
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:04:38 2025 +0200

    Update index.html

diff --git a/index.html b/index.html
index b6a78f7..1e690b9 100644
--- a/index.html
+++ b/index.html
@@ -8,127 +8,18 @@
   <meta name="CocoaVersion" content="2487.6">
   <style type="text/css">
     p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000}
-    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000; min-height: 14.0px}
     span.s1 {font-kerning: none}
   </style>
 </head>
 <body>
 <p class="p1"><span class="s1">&lt;!DOCTYPE html&gt;</span></p>
-<p class="p1"><span class="s1">&lt;html lang="en"&gt;</span></p>
+<p class="p1"><span class="s1">&lt;html&gt;</span></p>
 <p class="p1"><span class="s1">&lt;head&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;meta charset="UTF-8" /&gt;</span></p>
 <p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;style&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>body {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-family: Arial, sans-serif;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background: url('https://i.imgur.com/fdHvoJo.jpeg') no-repeat center center fixed;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-size: cover;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>color: white;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>.container {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>max-width: 800px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0 auto;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: rgba(0, 0, 0, 0.7);</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>height: 90vh;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>overflow-y: auto;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 10px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 5vh;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>input[type="text"] {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 10px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 16px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 5px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: none;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>table {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-collapse: collapse;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th, td {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: 1px solid #aaa;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 8px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>text-align: left;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #333;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>.section-title {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 40px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 20px;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>text-align: center;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/style&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/head&gt;</span></p>
 <p class="p1"><span class="s1">&lt;body&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;div class="container"&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;input id="itemInput" type="text" placeholder="Enter item ID (e.g., BOOSTER_COOKIE)" /&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;div id="results"&gt;&lt;/div&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/div&gt;</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;script&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>const input = document.getElementById("itemInput");</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>const results = document.getElementById("results");</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>input.addEventListener("change", async () =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>const itemId = input.value.toUpperCase().trim();</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>if (!itemId) return;</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>results.innerHTML = "&lt;p&gt;Loading...&lt;/p&gt;";</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>try {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const res = await fetch("https://api.hypixel.net/skyblock/bazaar");</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const data = await res.json();</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const item = data.products[itemId];</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>if (!item) {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>results.innerHTML = "&lt;p&gt;Item not found.&lt;/p&gt;";</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>return;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>}</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const buyOrders = item.buy_summary;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const sellOrders = item.sell_summary;</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const createTable = (orders, type) =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>let totalCoins = 0;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>let totalAmount = 0;</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const rows = orders.map(o =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>totalCoins += o.pricePerUnit * o.amount;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>totalAmount += o.amount;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${o.pricePerUnit.toFixed(1)}&lt;/td&gt;&lt;td&gt;${o.amount}&lt;/td&gt;&lt;td&gt;${(o.pricePerUnit * o.amount).toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}).join("");</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>return `</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>&lt;h2 class="section-title"&gt;${type}&lt;/h2&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>&lt;table&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Price&lt;/th&gt;&lt;th&gt;Amount&lt;/th&gt;&lt;th&gt;Total&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;tbody&gt;${rows}&lt;/tbody&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;tfoot&gt;&lt;tr&gt;&lt;th colspan="2"&gt;Total&lt;/th&gt;&lt;th&gt;${totalCoins.toLocaleString()}&lt;/th&gt;&lt;/tr&gt;&lt;/tfoot&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>&lt;/table&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>`;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>};</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const buyTable = createTable(buyOrders, "Buy Orders");</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const sellTable = createTable(sellOrders, "Sell Orders");</span></p>
-<p class="p2"><span class="s1"></span><br></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>results.innerHTML = buyTable + sellTable;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>} catch (err) {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>results.innerHTML = "&lt;p&gt;Error fetching data.&lt;/p&gt;";</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>console.error(err);</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>}</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>});</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;h1&gt;It works!&lt;/h1&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;p&gt;If you see this, your deployment succeeded.&lt;/p&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/body&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/html&gt;</span></p>
 </body>

commit 586cfcb48659d1139bfbe9092a5299deed938836
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:02:49 2025 +0200

    Delete vercel.json

diff --git a/vercel.json b/vercel.json
deleted file mode 100644
index 085cbfa..0000000
--- a/vercel.json
+++ /dev/null
@@ -1,5 +0,0 @@
-{
-  "builds": [
-    { "src": "index.html", "use": "@vercel/static" }
-  ]
-}
\ No newline at end of file

commit b67421e1f6d81737234e5574cea768df483c447e
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 22:01:05 2025 +0200

    aaa

diff --git a/.DS_Store b/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/.DS_Store differ
diff --git a/vercel.json b/vercel.json
index 6d43571..085cbfa 100644
--- a/vercel.json
+++ b/vercel.json
@@ -1,21 +1,5 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
-<html>
-<head>
-  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
-  <meta http-equiv="Content-Style-Type" content="text/css">
-  <title></title>
-  <meta name="Generator" content="Cocoa HTML Writer">
-  <meta name="CocoaVersion" content="2487.6">
-  <style type="text/css">
-    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000}
-    span.s1 {font-kerning: none}
-  </style>
-</head>
-<body>
-<p class="p1"><span class="s1">{</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>"builds": [</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>{ "src": "index.html", "use": "@vercel/static" }</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>]</span></p>
-<p class="p1"><span class="s1">}</span></p>
-</body>
-</html>
+{
+  "builds": [
+    { "src": "index.html", "use": "@vercel/static" }
+  ]
+}
\ No newline at end of file

commit 9591b077b961c0673dc90afd9a9744cb41a6774f
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 21:57:23 2025 +0200

    -

diff --git a/vercel.html b/vercel.json
similarity index 100%
rename from vercel.html
rename to vercel.json

commit 6138071373d3e3faa731b7b6227c4c72cd5271a2
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 21:55:29 2025 +0200

    Create vercel.html

diff --git a/vercel.html b/vercel.html
new file mode 100644
index 0000000..6d43571
--- /dev/null
+++ b/vercel.html
@@ -0,0 +1,21 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+<head>
+  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+  <meta http-equiv="Content-Style-Type" content="text/css">
+  <title></title>
+  <meta name="Generator" content="Cocoa HTML Writer">
+  <meta name="CocoaVersion" content="2487.6">
+  <style type="text/css">
+    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000}
+    span.s1 {font-kerning: none}
+  </style>
+</head>
+<body>
+<p class="p1"><span class="s1">{</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>"builds": [</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>{ "src": "index.html", "use": "@vercel/static" }</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>]</span></p>
+<p class="p1"><span class="s1">}</span></p>
+</body>
+</html>

commit 32eba52f45be437ab7db5f546da392985ee0b8cd
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 21:53:24 2025 +0200

    Update index.html

diff --git a/index.html b/index.html
index 42443f2..b6a78f7 100644
--- a/index.html
+++ b/index.html
@@ -14,27 +14,120 @@
 </head>
 <body>
 <p class="p1"><span class="s1">&lt;!DOCTYPE html&gt;</span></p>
-<p class="p1"><span class="s1">&lt;html&gt;</span></p>
+<p class="p1"><span class="s1">&lt;html lang="en"&gt;</span></p>
 <p class="p1"><span class="s1">&lt;head&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;meta charset="UTF-8" /&gt;</span></p>
 <p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;style&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>body {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-family: Arial, sans-serif;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background: url('https://i.imgur.com/fdHvoJo.jpeg') no-repeat center center fixed;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-size: cover;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>color: white;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>.container {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>max-width: 800px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin: 0 auto;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: rgba(0, 0, 0, 0.7);</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>height: 90vh;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>overflow-y: auto;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 10px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 5vh;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>input[type="text"] {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 10px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 16px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-radius: 5px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: none;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>table {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>width: 100%;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border-collapse: collapse;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-bottom: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th, td {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>border: 1px solid #aaa;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>padding: 8px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>text-align: left;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>th {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>background-color: #333;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>.section-title {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>margin-top: 40px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>font-size: 20px;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>text-align: center;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>}</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/style&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/head&gt;</span></p>
 <p class="p1"><span class="s1">&lt;body&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;h1&gt;SkyBlock Bazaar Prices&lt;/h1&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;div id="prices"&gt;Loading...&lt;/div&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;div class="container"&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;input id="itemInput" type="text" placeholder="Enter item ID (e.g., BOOSTER_COOKIE)" /&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>&lt;div id="results"&gt;&lt;/div&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/div&gt;</span></p>
 <p class="p2"><span class="s1"></span><br></p>
 <p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;script&gt;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>const items = ["TUNGSTEN_PLATE", "REFINED_UMBER", "GLACITE_AMALGAMATION"];</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>fetch("https://api.hypixel.net/skyblock/bazaar")</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>.then(res =&gt; res.json())</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>.then(data =&gt; {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>let html = "&lt;ul&gt;";</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>for (let item of items) {</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const q = data.products[item].quick_status;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>html += `&lt;li&gt;&lt;strong&gt;${item.replaceAll("_", " ")}:&lt;/strong&gt; Buy: ${q.buyPrice.toFixed(1)} | Sell: ${q.sellPrice.toFixed(1)}&lt;/li&gt;`;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>const input = document.getElementById("itemInput");</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>const results = document.getElementById("results");</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>input.addEventListener("change", async () =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>const itemId = input.value.toUpperCase().trim();</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>if (!itemId) return;</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>results.innerHTML = "&lt;p&gt;Loading...&lt;/p&gt;";</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>try {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const res = await fetch("https://api.hypixel.net/skyblock/bazaar");</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const data = await res.json();</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const item = data.products[itemId];</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>if (!item) {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>results.innerHTML = "&lt;p&gt;Item not found.&lt;/p&gt;";</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>return;</span></p>
 <p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>}</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>html += "&lt;/ul&gt;";</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>document.getElementById("prices").innerHTML = html;</span></p>
-<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>});</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const buyOrders = item.buy_summary;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const sellOrders = item.sell_summary;</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const createTable = (orders, type) =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>let totalCoins = 0;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>let totalAmount = 0;</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const rows = orders.map(o =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>totalCoins += o.pricePerUnit * o.amount;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>totalAmount += o.amount;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>return `&lt;tr&gt;&lt;td&gt;${o.pricePerUnit.toFixed(1)}&lt;/td&gt;&lt;td&gt;${o.amount}&lt;/td&gt;&lt;td&gt;${(o.pricePerUnit * o.amount).toLocaleString()}&lt;/td&gt;&lt;/tr&gt;`;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>}).join("");</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>return `</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>&lt;h2 class="section-title"&gt;${type}&lt;/h2&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>&lt;table&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Price&lt;/th&gt;&lt;th&gt;Amount&lt;/th&gt;&lt;th&gt;Total&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;tbody&gt;${rows}&lt;/tbody&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  Â  </span>&lt;tfoot&gt;&lt;tr&gt;&lt;th colspan="2"&gt;Total&lt;/th&gt;&lt;th&gt;${totalCoins.toLocaleString()}&lt;/th&gt;&lt;/tr&gt;&lt;/tfoot&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  Â  </span>&lt;/table&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>`;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>};</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const buyTable = createTable(buyOrders, "Buy Orders");</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>const sellTable = createTable(sellOrders, "Sell Orders");</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>results.innerHTML = buyTable + sellTable;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>} catch (err) {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>results.innerHTML = "&lt;p&gt;Error fetching data.&lt;/p&gt;";</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>console.error(err);</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>}</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>});</span></p>
 <p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/body&gt;</span></p>
 <p class="p1"><span class="s1">&lt;/html&gt;</span></p>

commit 5d0252ed38d8e906d4f20fbb552bd6a26956fe2c
Author: MishaBond123 <Eagle.bondarev@gmail.com>
Date:   Wed Apr 9 21:15:20 2025 +0200

    initial site

diff --git a/index.html b/index.html
new file mode 100644
index 0000000..42443f2
--- /dev/null
+++ b/index.html
@@ -0,0 +1,42 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
+<html>
+<head>
+  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+  <meta http-equiv="Content-Style-Type" content="text/css">
+  <title></title>
+  <meta name="Generator" content="Cocoa HTML Writer">
+  <meta name="CocoaVersion" content="2487.6">
+  <style type="text/css">
+    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000}
+    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Times; -webkit-text-stroke: #000000; min-height: 14.0px}
+    span.s1 {font-kerning: none}
+  </style>
+</head>
+<body>
+<p class="p1"><span class="s1">&lt;!DOCTYPE html&gt;</span></p>
+<p class="p1"><span class="s1">&lt;html&gt;</span></p>
+<p class="p1"><span class="s1">&lt;head&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;title&gt;SkyBlock Bazaar Tracker&lt;/title&gt;</span></p>
+<p class="p1"><span class="s1">&lt;/head&gt;</span></p>
+<p class="p1"><span class="s1">&lt;body&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;h1&gt;SkyBlock Bazaar Prices&lt;/h1&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;div id="prices"&gt;Loading...&lt;/div&gt;</span></p>
+<p class="p2"><span class="s1"></span><br></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;script&gt;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>const items = ["TUNGSTEN_PLATE", "REFINED_UMBER", "GLACITE_AMALGAMATION"];</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  </span>fetch("https://api.hypixel.net/skyblock/bazaar")</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>.then(res =&gt; res.json())</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>.then(data =&gt; {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>let html = "&lt;ul&gt;";</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>for (let item of items) {</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>const q = data.products[item].quick_status;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  Â  </span>html += `&lt;li&gt;&lt;strong&gt;${item.replaceAll("_", " ")}:&lt;/strong&gt; Buy: ${q.buyPrice.toFixed(1)} | Sell: ${q.sellPrice.toFixed(1)}&lt;/li&gt;`;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>}</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>html += "&lt;/ul&gt;";</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  Â  </span>document.getElementById("prices").innerHTML = html;</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  Â  Â  </span>});</span></p>
+<p class="p1"><span class="s1"><span class="Apple-converted-space">Â  </span>&lt;/script&gt;</span></p>
+<p class="p1"><span class="s1">&lt;/body&gt;</span></p>
+<p class="p1"><span class="s1">&lt;/html&gt;</span></p>
+</body>
+</html>
